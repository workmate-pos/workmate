// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ShopifySession {
  id               String    @id
  shop             String
  state            String
  isOnline         Boolean
  scope            String?
  expires          DateTime?
  onlineAccessInfo String?
  accessToken      String?
}

model Settings {
  shop  String
  key   String
  value String

  @@id([shop, key])
}

model WorkOrder {
  id                  Int                  @id @default(autoincrement())
  shop                String
  /// Used as work order id within this shop
  name                String
  status              String
  taxAmount           Int
  discountAmount      Int
  shippingAmount      Int
  description         String
  derivedFromOrderId  String?
  dueDate             DateTime
  createdAt           DateTime             @default(now())
  employeeAssignments EmployeeAssignment[]
  products            WorkOrderProduct[]
  services            WorkOrderService[]
  customerId          String
  payments            WorkOrderPayment[]

  @@unique([shop, name])
}

enum PaymentType {
  DEPOSIT
  BALANCE
}

model WorkOrderPayment {
  id Int @id @default(autoincrement())

  orderId String
  type    PaymentType
  amount  Int

  workOrder   WorkOrder @relation(fields: [workOrderId], references: [id])
  workOrderId Int
}

model WorkOrderProduct {
  id Int @id @default(autoincrement())

  productVariantId String
  unitPrice        Int
  quantity         Int

  workOrder   WorkOrder @relation(fields: [workOrderId], references: [id])
  workOrderId Int
}

/// Services are represented as products within Shopify in a configured service collection.
/// The product's price is the base price of the service.
/// The service's assigned employees and their hourly rates determine the remaining price.
model WorkOrderService {
  id Int @id @default(autoincrement())

  productVariantId String
  basePrice        Int

  workOrder   WorkOrder @relation(fields: [workOrderId], references: [id])
  workOrderId Int

  employeeAssignments WorkOrderServiceEmployeeAssignment[]
}

model WorkOrderServiceEmployeeAssignment {
  id Int @id @default(autoincrement())

  employeeId   String
  employeeRate Int
  hours        Int

  workOrderService   WorkOrderService @relation(fields: [workOrderServiceId], references: [id])
  workOrderServiceId Int
}

model EmployeeAssignment {
  id Int @id @default(autoincrement())

  employeeId String

  workOrder   WorkOrder @relation(fields: [workOrderId], references: [id])
  workOrderId Int
}

model EmployeeRate {
  employeeId String
  shop       String

  rate Int

  @@id([employeeId, shop])
}
