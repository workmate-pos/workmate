/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'ARN': unknown;
    'AbandonedCheckout': { kind: 'OBJECT'; name: 'AbandonedCheckout'; fields: { 'abandonedCheckoutUrl': { name: 'abandonedCheckoutUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'defaultCursor': { name: 'defaultCursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AbandonedCheckoutLineItemConnection'; ofType: null; }; } }; 'lineItemsQuantity': { name: 'lineItemsQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalPriceSet': { name: 'totalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'AbandonedCheckoutLineItem': { kind: 'OBJECT'; name: 'AbandonedCheckoutLineItem'; fields: { 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'discountedTotalPriceSet': { name: 'discountedTotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedTotalPriceWithCodeDiscount': { name: 'discountedTotalPriceWithCodeDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedUnitPriceSet': { name: 'discountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedUnitPriceWithCodeDiscount': { name: 'discountedUnitPriceWithCodeDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'originalTotalPriceSet': { name: 'originalTotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variantTitle': { name: 'variantTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AbandonedCheckoutLineItemConnection': { kind: 'OBJECT'; name: 'AbandonedCheckoutLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AbandonedCheckoutLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AbandonedCheckoutLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AbandonedCheckoutLineItemEdge': { kind: 'OBJECT'; name: 'AbandonedCheckoutLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AbandonedCheckoutLineItem'; ofType: null; }; } }; }; };
    'Abandonment': { kind: 'OBJECT'; name: 'Abandonment'; fields: { 'abandonedCheckoutPayload': { name: 'abandonedCheckoutPayload'; type: { kind: 'OBJECT'; name: 'AbandonedCheckout'; ofType: null; } }; 'abandonmentType': { name: 'abandonmentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AbandonmentAbandonmentType'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'cartUrl': { name: 'cartUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customer': { name: 'customer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Customer'; ofType: null; }; } }; 'customerHasNoDraftOrderSinceAbandonment': { name: 'customerHasNoDraftOrderSinceAbandonment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'customerHasNoOrderSinceAbandonment': { name: 'customerHasNoOrderSinceAbandonment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'daysSinceLastAbandonmentEmail': { name: 'daysSinceLastAbandonmentEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'emailSentAt': { name: 'emailSentAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'emailState': { name: 'emailState'; type: { kind: 'ENUM'; name: 'AbandonmentEmailState'; ofType: null; } }; 'hoursSinceLastAbandonedCheckout': { name: 'hoursSinceLastAbandonedCheckout'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inventoryAvailable': { name: 'inventoryAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isFromCustomStorefront': { name: 'isFromCustomStorefront'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isFromOnlineStore': { name: 'isFromOnlineStore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isFromShopApp': { name: 'isFromShopApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isFromShopPay': { name: 'isFromShopPay'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isMostSignificantAbandonment': { name: 'isMostSignificantAbandonment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lastBrowseAbandonmentDate': { name: 'lastBrowseAbandonmentDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'lastCartAbandonmentDate': { name: 'lastCartAbandonmentDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'lastCheckoutAbandonmentDate': { name: 'lastCheckoutAbandonmentDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'mostRecentStep': { name: 'mostRecentStep'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AbandonmentAbandonmentType'; ofType: null; }; } }; 'productsAddedToCart': { name: 'productsAddedToCart'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerVisitProductInfoConnection'; ofType: null; }; } }; 'productsViewed': { name: 'productsViewed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerVisitProductInfoConnection'; ofType: null; }; } }; 'visitStartedAt': { name: 'visitStartedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; }; };
    'AbandonmentAbandonmentType': { name: 'AbandonmentAbandonmentType'; enumValues: 'BROWSE' | 'CART' | 'CHECKOUT'; };
    'AbandonmentDeliveryState': { name: 'AbandonmentDeliveryState'; enumValues: 'NOT_SENT' | 'SENT' | 'SCHEDULED'; };
    'AbandonmentEmailState': { name: 'AbandonmentEmailState'; enumValues: 'NOT_SENT' | 'SENT' | 'SCHEDULED'; };
    'AbandonmentEmailStateUpdatePayload': { kind: 'OBJECT'; name: 'AbandonmentEmailStateUpdatePayload'; fields: { 'abandonment': { name: 'abandonment'; type: { kind: 'OBJECT'; name: 'Abandonment'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AbandonmentEmailStateUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'AbandonmentEmailStateUpdateUserError': { kind: 'OBJECT'; name: 'AbandonmentEmailStateUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'AbandonmentEmailStateUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AbandonmentEmailStateUpdateUserErrorCode': { name: 'AbandonmentEmailStateUpdateUserErrorCode'; enumValues: 'ABANDONMENT_NOT_FOUND'; };
    'AbandonmentUpdateActivitiesDeliveryStatusesPayload': { kind: 'OBJECT'; name: 'AbandonmentUpdateActivitiesDeliveryStatusesPayload'; fields: { 'abandonment': { name: 'abandonment'; type: { kind: 'OBJECT'; name: 'Abandonment'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AbandonmentUpdateActivitiesDeliveryStatusesUserError'; ofType: null; }; }; }; } }; }; };
    'AbandonmentUpdateActivitiesDeliveryStatusesUserError': { kind: 'OBJECT'; name: 'AbandonmentUpdateActivitiesDeliveryStatusesUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'AbandonmentUpdateActivitiesDeliveryStatusesUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AbandonmentUpdateActivitiesDeliveryStatusesUserErrorCode': { name: 'AbandonmentUpdateActivitiesDeliveryStatusesUserErrorCode'; enumValues: 'ABANDONMENT_NOT_FOUND' | 'MARKETING_ACTIVITY_NOT_FOUND' | 'DELIVERY_STATUS_INFO_NOT_FOUND'; };
    'AccessScope': { kind: 'OBJECT'; name: 'AccessScope'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AddAllProductsOperation': { kind: 'OBJECT'; name: 'AddAllProductsOperation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'processedRowCount': { name: 'processedRowCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rowCount': { name: 'rowCount'; type: { kind: 'OBJECT'; name: 'RowCount'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ResourceOperationStatus'; ofType: null; }; } }; }; };
    'AdditionalFee': { kind: 'OBJECT'; name: 'AdditionalFee'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; }; };
    'AdditionalFeeSale': { kind: 'OBJECT'; name: 'AdditionalFeeSale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'additionalFee': { name: 'additionalFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleAdditionalFee'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'AdjustmentSale': { kind: 'OBJECT'; name: 'AdjustmentSale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'AdjustmentsSortKeys': { name: 'AdjustmentsSortKeys'; enumValues: 'TIME' | 'ID' | 'RELEVANCE'; };
    'AllDiscountItems': { kind: 'OBJECT'; name: 'AllDiscountItems'; fields: { 'allItems': { name: 'allItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AndroidApplication': { kind: 'OBJECT'; name: 'AndroidApplication'; fields: { 'appLinksEnabled': { name: 'appLinksEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'applicationId': { name: 'applicationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'sha256CertFingerprints': { name: 'sha256CertFingerprints'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ApiVersion': { kind: 'OBJECT'; name: 'ApiVersion'; fields: { 'displayName': { name: 'displayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'supported': { name: 'supported'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'App': { kind: 'OBJECT'; name: 'App'; fields: { 'apiKey': { name: 'apiKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'appStoreAppUrl': { name: 'appStoreAppUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'appStoreDeveloperUrl': { name: 'appStoreDeveloperUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'availableAccessScopes': { name: 'availableAccessScopes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessScope'; ofType: null; }; }; }; } }; 'banner': { name: 'banner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'developerName': { name: 'developerName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'developerType': { name: 'developerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppDeveloperType'; ofType: null; }; } }; 'developerUrl': { name: 'developerUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'embedded': { name: 'embedded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'failedRequirements': { name: 'failedRequirements'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FailedRequirement'; ofType: null; }; }; }; } }; 'features': { name: 'features'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'feedback': { name: 'feedback'; type: { kind: 'OBJECT'; name: 'AppFeedback'; ofType: null; } }; 'handle': { name: 'handle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'installUrl': { name: 'installUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'installation': { name: 'installation'; type: { kind: 'OBJECT'; name: 'AppInstallation'; ofType: null; } }; 'isPostPurchaseAppInUse': { name: 'isPostPurchaseAppInUse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'launchUrl': { name: 'launchUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'navigationItems': { name: 'navigationItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NavigationItem'; ofType: null; }; }; }; } }; 'previouslyInstalled': { name: 'previouslyInstalled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'pricingDetails': { name: 'pricingDetails'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pricingDetailsSummary': { name: 'pricingDetailsSummary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privacyPolicyUrl': { name: 'privacyPolicyUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'publicCategory': { name: 'publicCategory'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppPublicCategory'; ofType: null; }; } }; 'published': { name: 'published'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'requestedAccessScopes': { name: 'requestedAccessScopes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessScope'; ofType: null; }; }; }; } }; 'screenshots': { name: 'screenshots'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; }; }; } }; 'shopifyDeveloped': { name: 'shopifyDeveloped'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'uninstallMessage': { name: 'uninstallMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'uninstallUrl': { name: 'uninstallUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'webhookApiVersion': { name: 'webhookApiVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppCatalog': { kind: 'OBJECT'; name: 'AppCatalog'; fields: { 'apps': { name: 'apps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'operations': { name: 'operations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'ResourceOperation'; ofType: null; }; }; }; } }; 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'publication': { name: 'publication'; type: { kind: 'OBJECT'; name: 'Publication'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CatalogStatus'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppConnection': { kind: 'OBJECT'; name: 'AppConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AppCredit': { kind: 'OBJECT'; name: 'AppCredit'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'test': { name: 'test'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AppCreditConnection': { kind: 'OBJECT'; name: 'AppCreditConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppCreditEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppCredit'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AppCreditEdge': { kind: 'OBJECT'; name: 'AppCreditEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppCredit'; ofType: null; }; } }; }; };
    'AppDeveloperType': { name: 'AppDeveloperType'; enumValues: 'SHOPIFY' | 'PARTNER' | 'MERCHANT' | 'UNKNOWN'; };
    'AppDiscountType': { kind: 'OBJECT'; name: 'AppDiscountType'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'appBridge': { name: 'appBridge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FunctionsAppBridge'; ofType: null; }; } }; 'appKey': { name: 'appKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountClass'; ofType: null; }; } }; 'functionId': { name: 'functionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppEdge': { kind: 'OBJECT'; name: 'AppEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; }; };
    'AppFeedback': { kind: 'OBJECT'; name: 'AppFeedback'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'link': { name: 'link'; type: { kind: 'OBJECT'; name: 'Link'; ofType: null; } }; 'messages': { name: 'messages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'AppInstallation': { kind: 'OBJECT'; name: 'AppInstallation'; fields: { 'accessScopes': { name: 'accessScopes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessScope'; ofType: null; }; }; }; } }; 'activeSubscriptions': { name: 'activeSubscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppSubscription'; ofType: null; }; }; }; } }; 'allSubscriptions': { name: 'allSubscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppSubscriptionConnection'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'credits': { name: 'credits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppCreditConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'launchUrl': { name: 'launchUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'oneTimePurchases': { name: 'oneTimePurchases'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppPurchaseOneTimeConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'publication': { name: 'publication'; type: { kind: 'OBJECT'; name: 'Publication'; ofType: null; } }; 'revenueAttributionRecords': { name: 'revenueAttributionRecords'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppRevenueAttributionRecordConnection'; ofType: null; }; } }; 'subscriptions': { name: 'subscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppSubscription'; ofType: null; }; }; }; } }; 'uninstallUrl': { name: 'uninstallUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; };
    'AppInstallationCategory': { name: 'AppInstallationCategory'; enumValues: 'CHANNEL' | 'POS_EMBEDDED'; };
    'AppInstallationConnection': { kind: 'OBJECT'; name: 'AppInstallationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppInstallationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppInstallation'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AppInstallationEdge': { kind: 'OBJECT'; name: 'AppInstallationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppInstallation'; ofType: null; }; } }; }; };
    'AppInstallationPrivacy': { name: 'AppInstallationPrivacy'; enumValues: 'PUBLIC' | 'PRIVATE'; };
    'AppInstallationSortKeys': { name: 'AppInstallationSortKeys'; enumValues: 'INSTALLED_AT' | 'APP_TITLE' | 'ID' | 'RELEVANCE'; };
    'AppPlanInput': { kind: 'INPUT_OBJECT'; name: 'AppPlanInput'; isOneOf: false; inputFields: [{ name: 'appUsagePricingDetails'; type: { kind: 'INPUT_OBJECT'; name: 'AppUsagePricingInput'; ofType: null; }; defaultValue: null }, { name: 'appRecurringPricingDetails'; type: { kind: 'INPUT_OBJECT'; name: 'AppRecurringPricingInput'; ofType: null; }; defaultValue: null }]; };
    'AppPlanV2': { kind: 'OBJECT'; name: 'AppPlanV2'; fields: { 'pricingDetails': { name: 'pricingDetails'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'AppPricingDetails'; ofType: null; }; } }; }; };
    'AppPricingDetails': { kind: 'UNION'; name: 'AppPricingDetails'; fields: {}; possibleTypes: 'AppRecurringPricing' | 'AppUsagePricing'; };
    'AppPricingInterval': { name: 'AppPricingInterval'; enumValues: 'ANNUAL' | 'EVERY_30_DAYS'; };
    'AppPublicCategory': { name: 'AppPublicCategory'; enumValues: 'PRIVATE' | 'PUBLIC' | 'CUSTOM' | 'OTHER'; };
    'AppPurchase': { kind: 'INTERFACE'; name: 'AppPurchase'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppPurchaseStatus'; ofType: null; }; } }; 'test': { name: 'test'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; possibleTypes: 'AppPurchaseOneTime'; };
    'AppPurchaseOneTime': { kind: 'OBJECT'; name: 'AppPurchaseOneTime'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppPurchaseStatus'; ofType: null; }; } }; 'test': { name: 'test'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AppPurchaseOneTimeConnection': { kind: 'OBJECT'; name: 'AppPurchaseOneTimeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppPurchaseOneTimeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppPurchaseOneTime'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AppPurchaseOneTimeCreatePayload': { kind: 'OBJECT'; name: 'AppPurchaseOneTimeCreatePayload'; fields: { 'appPurchaseOneTime': { name: 'appPurchaseOneTime'; type: { kind: 'OBJECT'; name: 'AppPurchaseOneTime'; ofType: null; } }; 'confirmationUrl': { name: 'confirmationUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'AppPurchaseOneTimeEdge': { kind: 'OBJECT'; name: 'AppPurchaseOneTimeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppPurchaseOneTime'; ofType: null; }; } }; }; };
    'AppPurchaseStatus': { name: 'AppPurchaseStatus'; enumValues: 'ACCEPTED' | 'ACTIVE' | 'DECLINED' | 'EXPIRED' | 'PENDING'; };
    'AppRecurringPricing': { kind: 'OBJECT'; name: 'AppRecurringPricing'; fields: { 'discount': { name: 'discount'; type: { kind: 'OBJECT'; name: 'AppSubscriptionDiscount'; ofType: null; } }; 'interval': { name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppPricingInterval'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'AppRecurringPricingInput': { kind: 'INPUT_OBJECT'; name: 'AppRecurringPricingInput'; isOneOf: false; inputFields: [{ name: 'interval'; type: { kind: 'ENUM'; name: 'AppPricingInterval'; ofType: null; }; defaultValue: "EVERY_30_DAYS" }, { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }, { name: 'discount'; type: { kind: 'INPUT_OBJECT'; name: 'AppSubscriptionDiscountInput'; ofType: null; }; defaultValue: null }]; };
    'AppRevenueAttributionRecord': { kind: 'OBJECT'; name: 'AppRevenueAttributionRecord'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'capturedAt': { name: 'capturedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'idempotencyKey': { name: 'idempotencyKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'test': { name: 'test'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppRevenueAttributionType'; ofType: null; }; } }; }; };
    'AppRevenueAttributionRecordConnection': { kind: 'OBJECT'; name: 'AppRevenueAttributionRecordConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppRevenueAttributionRecordEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppRevenueAttributionRecord'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AppRevenueAttributionRecordEdge': { kind: 'OBJECT'; name: 'AppRevenueAttributionRecordEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppRevenueAttributionRecord'; ofType: null; }; } }; }; };
    'AppRevenueAttributionRecordSortKeys': { name: 'AppRevenueAttributionRecordSortKeys'; enumValues: 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'AppRevenueAttributionType': { name: 'AppRevenueAttributionType'; enumValues: 'APPLICATION_PURCHASE' | 'APPLICATION_SUBSCRIPTION' | 'APPLICATION_USAGE' | 'OTHER'; };
    'AppSubscription': { kind: 'OBJECT'; name: 'AppSubscription'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'currentPeriodEnd': { name: 'currentPeriodEnd'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppSubscriptionLineItem'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'returnUrl': { name: 'returnUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppSubscriptionStatus'; ofType: null; }; } }; 'test': { name: 'test'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'trialDays': { name: 'trialDays'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AppSubscriptionCancelPayload': { kind: 'OBJECT'; name: 'AppSubscriptionCancelPayload'; fields: { 'appSubscription': { name: 'appSubscription'; type: { kind: 'OBJECT'; name: 'AppSubscription'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'AppSubscriptionConnection': { kind: 'OBJECT'; name: 'AppSubscriptionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppSubscriptionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppSubscription'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AppSubscriptionCreatePayload': { kind: 'OBJECT'; name: 'AppSubscriptionCreatePayload'; fields: { 'appSubscription': { name: 'appSubscription'; type: { kind: 'OBJECT'; name: 'AppSubscription'; ofType: null; } }; 'confirmationUrl': { name: 'confirmationUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'AppSubscriptionDiscount': { kind: 'OBJECT'; name: 'AppSubscriptionDiscount'; fields: { 'durationLimitInIntervals': { name: 'durationLimitInIntervals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'priceAfterDiscount': { name: 'priceAfterDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'remainingDurationInIntervals': { name: 'remainingDurationInIntervals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'AppSubscriptionDiscountValue'; ofType: null; }; } }; }; };
    'AppSubscriptionDiscountAmount': { kind: 'OBJECT'; name: 'AppSubscriptionDiscountAmount'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'AppSubscriptionDiscountInput': { kind: 'INPUT_OBJECT'; name: 'AppSubscriptionDiscountInput'; isOneOf: false; inputFields: [{ name: 'value'; type: { kind: 'INPUT_OBJECT'; name: 'AppSubscriptionDiscountValueInput'; ofType: null; }; defaultValue: null }, { name: 'durationLimitInIntervals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'AppSubscriptionDiscountPercentage': { kind: 'OBJECT'; name: 'AppSubscriptionDiscountPercentage'; fields: { 'percentage': { name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'AppSubscriptionDiscountValue': { kind: 'UNION'; name: 'AppSubscriptionDiscountValue'; fields: {}; possibleTypes: 'AppSubscriptionDiscountAmount' | 'AppSubscriptionDiscountPercentage'; };
    'AppSubscriptionDiscountValueInput': { kind: 'INPUT_OBJECT'; name: 'AppSubscriptionDiscountValueInput'; isOneOf: false; inputFields: [{ name: 'percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'amount'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }]; };
    'AppSubscriptionEdge': { kind: 'OBJECT'; name: 'AppSubscriptionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppSubscription'; ofType: null; }; } }; }; };
    'AppSubscriptionLineItem': { kind: 'OBJECT'; name: 'AppSubscriptionLineItem'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'plan': { name: 'plan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppPlanV2'; ofType: null; }; } }; 'usageRecords': { name: 'usageRecords'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppUsageRecordConnection'; ofType: null; }; } }; }; };
    'AppSubscriptionLineItemInput': { kind: 'INPUT_OBJECT'; name: 'AppSubscriptionLineItemInput'; isOneOf: false; inputFields: [{ name: 'plan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AppPlanInput'; ofType: null; }; }; defaultValue: null }]; };
    'AppSubscriptionLineItemUpdatePayload': { kind: 'OBJECT'; name: 'AppSubscriptionLineItemUpdatePayload'; fields: { 'appSubscription': { name: 'appSubscription'; type: { kind: 'OBJECT'; name: 'AppSubscription'; ofType: null; } }; 'confirmationUrl': { name: 'confirmationUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'AppSubscriptionReplacementBehavior': { name: 'AppSubscriptionReplacementBehavior'; enumValues: 'APPLY_IMMEDIATELY' | 'APPLY_ON_NEXT_BILLING_CYCLE' | 'STANDARD'; };
    'AppSubscriptionSortKeys': { name: 'AppSubscriptionSortKeys'; enumValues: 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'AppSubscriptionStatus': { name: 'AppSubscriptionStatus'; enumValues: 'PENDING' | 'ACCEPTED' | 'ACTIVE' | 'DECLINED' | 'EXPIRED' | 'FROZEN' | 'CANCELLED'; };
    'AppSubscriptionTrialExtendPayload': { kind: 'OBJECT'; name: 'AppSubscriptionTrialExtendPayload'; fields: { 'appSubscription': { name: 'appSubscription'; type: { kind: 'OBJECT'; name: 'AppSubscription'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppSubscriptionTrialExtendUserError'; ofType: null; }; }; }; } }; }; };
    'AppSubscriptionTrialExtendUserError': { kind: 'OBJECT'; name: 'AppSubscriptionTrialExtendUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'AppSubscriptionTrialExtendUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppSubscriptionTrialExtendUserErrorCode': { name: 'AppSubscriptionTrialExtendUserErrorCode'; enumValues: 'SUBSCRIPTION_NOT_FOUND' | 'TRIAL_NOT_ACTIVE' | 'SUBSCRIPTION_NOT_ACTIVE'; };
    'AppTransactionSortKeys': { name: 'AppTransactionSortKeys'; enumValues: 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'AppUsagePricing': { kind: 'OBJECT'; name: 'AppUsagePricing'; fields: { 'balanceUsed': { name: 'balanceUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'cappedAmount': { name: 'cappedAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'interval': { name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppPricingInterval'; ofType: null; }; } }; 'terms': { name: 'terms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppUsagePricingInput': { kind: 'INPUT_OBJECT'; name: 'AppUsagePricingInput'; isOneOf: false; inputFields: [{ name: 'cappedAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }, { name: 'terms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AppUsageRecord': { kind: 'OBJECT'; name: 'AppUsageRecord'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'idempotencyKey': { name: 'idempotencyKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'subscriptionLineItem': { name: 'subscriptionLineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppSubscriptionLineItem'; ofType: null; }; } }; }; };
    'AppUsageRecordConnection': { kind: 'OBJECT'; name: 'AppUsageRecordConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppUsageRecordEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppUsageRecord'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AppUsageRecordCreatePayload': { kind: 'OBJECT'; name: 'AppUsageRecordCreatePayload'; fields: { 'appUsageRecord': { name: 'appUsageRecord'; type: { kind: 'OBJECT'; name: 'AppUsageRecord'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'AppUsageRecordEdge': { kind: 'OBJECT'; name: 'AppUsageRecordEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppUsageRecord'; ofType: null; }; } }; }; };
    'AppUsageRecordSortKeys': { name: 'AppUsageRecordSortKeys'; enumValues: 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'AppleApplication': { kind: 'OBJECT'; name: 'AppleApplication'; fields: { 'appClipApplicationId': { name: 'appClipApplicationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'appClipsEnabled': { name: 'appClipsEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'appId': { name: 'appId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'sharedWebCredentialsEnabled': { name: 'sharedWebCredentialsEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'universalLinksEnabled': { name: 'universalLinksEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'Attribute': { kind: 'OBJECT'; name: 'Attribute'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeInput': { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AutomaticDiscountApplication': { kind: 'OBJECT'; name: 'AutomaticDiscountApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'index': { name: 'index'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'AutomaticDiscountSortKeys': { name: 'AutomaticDiscountSortKeys'; enumValues: 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'AvailableChannelDefinitionsByChannel': { kind: 'OBJECT'; name: 'AvailableChannelDefinitionsByChannel'; fields: { 'channelDefinitions': { name: 'channelDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelDefinition'; ofType: null; }; }; }; } }; 'channelName': { name: 'channelName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'BadgeType': { name: 'BadgeType'; enumValues: 'DEFAULT' | 'SUCCESS' | 'ATTENTION' | 'WARNING' | 'INFO'; };
    'BalanceTransactionSortKeys': { name: 'BalanceTransactionSortKeys'; enumValues: 'PAYOUT_DATE' | 'PAYOUT_STATUS' | 'PROCESSED_AT' | 'AMOUNT' | 'FEE' | 'NET' | 'TRANSACTION_TYPE' | 'ORDER_NAME' | 'PAYMENT_METHOD_NAME' | 'ID' | 'RELEVANCE'; };
    'BasePaymentDetails': { kind: 'INTERFACE'; name: 'BasePaymentDetails'; fields: { 'paymentMethodName': { name: 'paymentMethodName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; possibleTypes: 'CardPaymentDetails' | 'ShopPayInstallmentsPaymentDetails'; };
    'BasicEvent': { kind: 'OBJECT'; name: 'BasicEvent'; fields: { 'appTitle': { name: 'appTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'attributeToApp': { name: 'attributeToApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'attributeToUser': { name: 'attributeToUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'criticalAlert': { name: 'criticalAlert'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'FormattedString'; ofType: null; }; } }; }; };
    'BigInt': unknown;
    'BillingAttemptUserError': { kind: 'OBJECT'; name: 'BillingAttemptUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'BillingAttemptUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'BillingAttemptUserErrorCode': { name: 'BillingAttemptUserErrorCode'; enumValues: 'INVALID' | 'BLANK' | 'CONTRACT_NOT_FOUND' | 'ORIGIN_TIME_BEFORE_CONTRACT_CREATION' | 'UPCOMING_CYCLE_LIMIT_EXCEEDED' | 'CYCLE_INDEX_OUT_OF_RANGE' | 'CYCLE_START_DATE_OUT_OF_RANGE' | 'ORIGIN_TIME_OUT_OF_RANGE' | 'BILLING_CYCLE_CHARGE_BEFORE_EXPECTED_DATE' | 'BILLING_CYCLE_SKIPPED' | 'CONTRACT_UNDER_REVIEW' | 'CONTRACT_TERMINATED' | 'CONTRACT_PAUSED'; };
    'Boolean': unknown;
    'BulkMutationErrorCode': { name: 'BulkMutationErrorCode'; enumValues: 'OPERATION_IN_PROGRESS' | 'INVALID_MUTATION' | 'INVALID_STAGED_UPLOAD_FILE' | 'NO_SUCH_FILE' | 'INTERNAL_FILE_SERVER_ERROR'; };
    'BulkMutationUserError': { kind: 'OBJECT'; name: 'BulkMutationUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'BulkMutationErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'BulkOperation': { kind: 'OBJECT'; name: 'BulkOperation'; fields: { 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'errorCode': { name: 'errorCode'; type: { kind: 'ENUM'; name: 'BulkOperationErrorCode'; ofType: null; } }; 'fileSize': { name: 'fileSize'; type: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'objectCount': { name: 'objectCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'partialDataUrl': { name: 'partialDataUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rootObjectCount': { name: 'rootObjectCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BulkOperationStatus'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BulkOperationType'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; };
    'BulkOperationCancelPayload': { kind: 'OBJECT'; name: 'BulkOperationCancelPayload'; fields: { 'bulkOperation': { name: 'bulkOperation'; type: { kind: 'OBJECT'; name: 'BulkOperation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'BulkOperationErrorCode': { name: 'BulkOperationErrorCode'; enumValues: 'ACCESS_DENIED' | 'INTERNAL_SERVER_ERROR' | 'TIMEOUT'; };
    'BulkOperationRunMutationPayload': { kind: 'OBJECT'; name: 'BulkOperationRunMutationPayload'; fields: { 'bulkOperation': { name: 'bulkOperation'; type: { kind: 'OBJECT'; name: 'BulkOperation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BulkMutationUserError'; ofType: null; }; }; }; } }; }; };
    'BulkOperationRunQueryPayload': { kind: 'OBJECT'; name: 'BulkOperationRunQueryPayload'; fields: { 'bulkOperation': { name: 'bulkOperation'; type: { kind: 'OBJECT'; name: 'BulkOperation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'BulkOperationStatus': { name: 'BulkOperationStatus'; enumValues: 'CANCELED' | 'CANCELING' | 'COMPLETED' | 'CREATED' | 'EXPIRED' | 'FAILED' | 'RUNNING'; };
    'BulkOperationType': { name: 'BulkOperationType'; enumValues: 'QUERY' | 'MUTATION'; };
    'BulkProductResourceFeedbackCreatePayload': { kind: 'OBJECT'; name: 'BulkProductResourceFeedbackCreatePayload'; fields: { 'feedback': { name: 'feedback'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductResourceFeedback'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BulkProductResourceFeedbackCreateUserError'; ofType: null; }; }; }; } }; }; };
    'BulkProductResourceFeedbackCreateUserError': { kind: 'OBJECT'; name: 'BulkProductResourceFeedbackCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'BulkProductResourceFeedbackCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'BulkProductResourceFeedbackCreateUserErrorCode': { name: 'BulkProductResourceFeedbackCreateUserErrorCode'; enumValues: 'MAXIMUM_FEEDBACK_LIMIT_EXCEEDED' | 'OUTDATED_FEEDBACK' | 'PRODUCT_NOT_FOUND' | 'INVALID' | 'BLANK' | 'PRESENT' | 'LESS_THAN_OR_EQUAL_TO'; };
    'BundlesDraftOrderBundleLineItemComponentInput': { kind: 'INPUT_OBJECT'; name: 'BundlesDraftOrderBundleLineItemComponentInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'uuid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'BundlesFeature': { kind: 'OBJECT'; name: 'BundlesFeature'; fields: { 'eligibleForBundles': { name: 'eligibleForBundles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'ineligibilityReason': { name: 'ineligibilityReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sellsBundles': { name: 'sellsBundles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'BusinessCustomerErrorCode': { name: 'BusinessCustomerErrorCode'; enumValues: 'INTERNAL_ERROR' | 'RESOURCE_NOT_FOUND' | 'FAILED_TO_DELETE' | 'REQUIRED' | 'NO_INPUT' | 'INVALID_INPUT' | 'UNEXPECTED_TYPE' | 'TOO_LONG' | 'LIMIT_REACHED' | 'INVALID' | 'BLANK' | 'TAKEN'; };
    'BusinessCustomerUserError': { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'BusinessCustomerErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'BuyerExperienceConfiguration': { kind: 'OBJECT'; name: 'BuyerExperienceConfiguration'; fields: { 'checkoutToDraft': { name: 'checkoutToDraft'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'editableShippingAddress': { name: 'editableShippingAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'payNowOnly': { name: 'payNowOnly'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'paymentTermsTemplate': { name: 'paymentTermsTemplate'; type: { kind: 'OBJECT'; name: 'PaymentTermsTemplate'; ofType: null; } }; }; };
    'BuyerExperienceConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'BuyerExperienceConfigurationInput'; isOneOf: false; inputFields: [{ name: 'checkoutToDraft'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'paymentTermsTemplateId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'editableShippingAddress'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CalculateExchangeLineItemInput': { kind: 'INPUT_OBJECT'; name: 'CalculateExchangeLineItemInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'appliedDiscount'; type: { kind: 'INPUT_OBJECT'; name: 'ExchangeLineItemAppliedDiscountInput'; ofType: null; }; defaultValue: null }]; };
    'CalculateReturnInput': { kind: 'INPUT_OBJECT'; name: 'CalculateReturnInput'; isOneOf: false; inputFields: [{ name: 'orderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'returnLineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CalculateReturnLineItemInput'; ofType: null; }; }; }; defaultValue: "[]" }, { name: 'exchangeLineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CalculateExchangeLineItemInput'; ofType: null; }; }; }; defaultValue: "[]" }, { name: 'returnShippingFee'; type: { kind: 'INPUT_OBJECT'; name: 'ReturnShippingFeeInput'; ofType: null; }; defaultValue: null }]; };
    'CalculateReturnLineItemInput': { kind: 'INPUT_OBJECT'; name: 'CalculateReturnLineItemInput'; isOneOf: false; inputFields: [{ name: 'fulfillmentLineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'restockingFee'; type: { kind: 'INPUT_OBJECT'; name: 'RestockingFeeInput'; ofType: null; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'CalculatedAutomaticDiscountApplication': { kind: 'OBJECT'; name: 'CalculatedAutomaticDiscountApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'appliedTo': { name: 'appliedTo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationLevel'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'CalculatedDiscountAllocation': { kind: 'OBJECT'; name: 'CalculatedDiscountAllocation'; fields: { 'allocatedAmountSet': { name: 'allocatedAmountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountApplication': { name: 'discountApplication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'CalculatedDiscountApplication'; ofType: null; }; } }; }; };
    'CalculatedDiscountApplication': { kind: 'INTERFACE'; name: 'CalculatedDiscountApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'appliedTo': { name: 'appliedTo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationLevel'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; possibleTypes: 'CalculatedAutomaticDiscountApplication' | 'CalculatedDiscountCodeApplication' | 'CalculatedManualDiscountApplication' | 'CalculatedScriptDiscountApplication'; };
    'CalculatedDiscountApplicationConnection': { kind: 'OBJECT'; name: 'CalculatedDiscountApplicationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedDiscountApplicationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'CalculatedDiscountApplication'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CalculatedDiscountApplicationEdge': { kind: 'OBJECT'; name: 'CalculatedDiscountApplicationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'CalculatedDiscountApplication'; ofType: null; }; } }; }; };
    'CalculatedDiscountCodeApplication': { kind: 'OBJECT'; name: 'CalculatedDiscountCodeApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'appliedTo': { name: 'appliedTo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationLevel'; ofType: null; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'CalculatedDraftOrder': { kind: 'OBJECT'; name: 'CalculatedDraftOrder'; fields: { 'acceptAutomaticDiscounts': { name: 'acceptAutomaticDiscounts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'alerts': { name: 'alerts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourceAlert'; ofType: null; }; }; }; } }; 'appliedDiscount': { name: 'appliedDiscount'; type: { kind: 'OBJECT'; name: 'DraftOrderAppliedDiscount'; ofType: null; } }; 'availableShippingRates': { name: 'availableShippingRates'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingRate'; ofType: null; }; }; }; } }; 'billingAddressMatchesShippingAddress': { name: 'billingAddressMatchesShippingAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'discountCodes': { name: 'discountCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedDraftOrderLineItem'; ofType: null; }; }; }; } }; 'lineItemsSubtotalPrice': { name: 'lineItemsSubtotalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'marketName': { name: 'marketName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'marketRegionCountryCode': { name: 'marketRegionCountryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'platformDiscounts': { name: 'platformDiscounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderPlatformDiscount'; ofType: null; }; }; }; } }; 'presentmentCurrencyCode': { name: 'presentmentCurrencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'purchasingEntity': { name: 'purchasingEntity'; type: { kind: 'UNION'; name: 'PurchasingEntity'; ofType: null; } }; 'shippingLine': { name: 'shippingLine'; type: { kind: 'OBJECT'; name: 'ShippingLine'; ofType: null; } }; 'subtotalPrice': { name: 'subtotalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'subtotalPriceSet': { name: 'subtotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'taxesIncluded': { name: 'taxesIncluded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'totalDiscountsSet': { name: 'totalDiscountsSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalLineItemsPriceSet': { name: 'totalLineItemsPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalPrice': { name: 'totalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalPriceSet': { name: 'totalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalQuantityOfLineItems': { name: 'totalQuantityOfLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalShippingPrice': { name: 'totalShippingPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalShippingPriceSet': { name: 'totalShippingPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTax': { name: 'totalTax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalTaxSet': { name: 'totalTaxSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'transformerFingerprint': { name: 'transformerFingerprint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warnings': { name: 'warnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'DraftOrderWarning'; ofType: null; }; }; }; } }; }; };
    'CalculatedDraftOrderLineItem': { kind: 'OBJECT'; name: 'CalculatedDraftOrderLineItem'; fields: { 'appliedDiscount': { name: 'appliedDiscount'; type: { kind: 'OBJECT'; name: 'DraftOrderAppliedDiscount'; ofType: null; } }; 'approximateDiscountedUnitPriceSet': { name: 'approximateDiscountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'bundleComponents': { name: 'bundleComponents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedDraftOrderLineItem'; ofType: null; }; }; }; } }; 'custom': { name: 'custom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'customAttributesV2': { name: 'customAttributesV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TypedAttribute'; ofType: null; }; }; }; } }; 'discountedTotal': { name: 'discountedTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'discountedTotalSet': { name: 'discountedTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedUnitPrice': { name: 'discountedUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'discountedUnitPriceSet': { name: 'discountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'fulfillmentService': { name: 'fulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'isGiftCard': { name: 'isGiftCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'originalTotal': { name: 'originalTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'originalTotalSet': { name: 'originalTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'originalUnitPrice': { name: 'originalUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'originalUnitPriceWithCurrency': { name: 'originalUnitPriceWithCurrency'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxable': { name: 'taxable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalDiscount': { name: 'totalDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'totalDiscountSet': { name: 'totalDiscountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'uuid': { name: 'uuid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variantTitle': { name: 'variantTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vendor': { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'weight': { name: 'weight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; }; };
    'CalculatedExchangeLineItem': { kind: 'OBJECT'; name: 'CalculatedExchangeLineItem'; fields: { 'calculatedDiscountAllocations': { name: 'calculatedDiscountAllocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedDiscountAllocation'; ofType: null; }; }; }; } }; 'discountedUnitPriceSet': { name: 'discountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'subtotalSet': { name: 'subtotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxSet': { name: 'totalTaxSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'CalculatedLineItem': { kind: 'OBJECT'; name: 'CalculatedLineItem'; fields: { 'calculatedDiscountAllocations': { name: 'calculatedDiscountAllocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedDiscountAllocation'; ofType: null; }; }; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'discountAllocations': { name: 'discountAllocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAllocation'; ofType: null; }; }; }; } }; 'discountedUnitPriceSet': { name: 'discountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'editableQuantity': { name: 'editableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'editableQuantityBeforeChanges': { name: 'editableQuantityBeforeChanges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'editableSubtotalSet': { name: 'editableSubtotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'hasStagedLineItemDiscount': { name: 'hasStagedLineItemDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'restockable': { name: 'restockable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'restocking': { name: 'restocking'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stagedChanges': { name: 'stagedChanges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'OrderStagedChange'; ofType: null; }; }; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'uneditableSubtotalSet': { name: 'uneditableSubtotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variantTitle': { name: 'variantTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CalculatedLineItemConnection': { kind: 'OBJECT'; name: 'CalculatedLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CalculatedLineItemEdge': { kind: 'OBJECT'; name: 'CalculatedLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedLineItem'; ofType: null; }; } }; }; };
    'CalculatedManualDiscountApplication': { kind: 'OBJECT'; name: 'CalculatedManualDiscountApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'appliedTo': { name: 'appliedTo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationLevel'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'CalculatedOrder': { kind: 'OBJECT'; name: 'CalculatedOrder'; fields: { 'addedDiscountApplications': { name: 'addedDiscountApplications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedDiscountApplicationConnection'; ofType: null; }; } }; 'addedLineItems': { name: 'addedLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedLineItemConnection'; ofType: null; }; } }; 'cartDiscountAmountSet': { name: 'cartDiscountAmountSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'committed': { name: 'committed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedLineItemConnection'; ofType: null; }; } }; 'notificationPreviewHtml': { name: 'notificationPreviewHtml'; type: { kind: 'SCALAR'; name: 'HTML'; ofType: null; } }; 'notificationPreviewTitle': { name: 'notificationPreviewTitle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'originalOrder': { name: 'originalOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; 'shippingLines': { name: 'shippingLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedShippingLine'; ofType: null; }; }; }; } }; 'stagedChanges': { name: 'stagedChanges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderStagedChangeConnection'; ofType: null; }; } }; 'subtotalLineItemsQuantity': { name: 'subtotalLineItemsQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'subtotalPriceSet': { name: 'subtotalPriceSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'totalOutstandingSet': { name: 'totalOutstandingSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalPriceSet': { name: 'totalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'CalculatedRestockingFee': { kind: 'OBJECT'; name: 'CalculatedRestockingFee'; fields: { 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'percentage': { name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'CalculatedReturn': { kind: 'OBJECT'; name: 'CalculatedReturn'; fields: { 'exchangeLineItems': { name: 'exchangeLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedExchangeLineItem'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'returnLineItems': { name: 'returnLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CalculatedReturnLineItem'; ofType: null; }; }; }; } }; 'returnShippingFee': { name: 'returnShippingFee'; type: { kind: 'OBJECT'; name: 'CalculatedReturnShippingFee'; ofType: null; } }; }; };
    'CalculatedReturnFee': { kind: 'INTERFACE'; name: 'CalculatedReturnFee'; fields: { 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'CalculatedRestockingFee' | 'CalculatedReturnShippingFee'; };
    'CalculatedReturnLineItem': { kind: 'OBJECT'; name: 'CalculatedReturnLineItem'; fields: { 'fulfillmentLineItem': { name: 'fulfillmentLineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLineItem'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'restockingFee': { name: 'restockingFee'; type: { kind: 'OBJECT'; name: 'CalculatedRestockingFee'; ofType: null; } }; 'subtotalBeforeOrderDiscountsSet': { name: 'subtotalBeforeOrderDiscountsSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'subtotalSet': { name: 'subtotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxSet': { name: 'totalTaxSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'CalculatedReturnShippingFee': { kind: 'OBJECT'; name: 'CalculatedReturnShippingFee'; fields: { 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'CalculatedScriptDiscountApplication': { kind: 'OBJECT'; name: 'CalculatedScriptDiscountApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'appliedTo': { name: 'appliedTo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationLevel'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'CalculatedShippingLine': { kind: 'OBJECT'; name: 'CalculatedShippingLine'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'stagedStatus': { name: 'stagedStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CalculatedShippingLineStagedStatus'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CalculatedShippingLineStagedStatus': { name: 'CalculatedShippingLineStagedStatus'; enumValues: 'NONE' | 'ADDED' | 'REMOVED'; };
    'CardPaymentDetails': { kind: 'OBJECT'; name: 'CardPaymentDetails'; fields: { 'avsResultCode': { name: 'avsResultCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bin': { name: 'bin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'company': { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cvvResultCode': { name: 'cvvResultCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expirationMonth': { name: 'expirationMonth'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'expirationYear': { name: 'expirationYear'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'number': { name: 'number'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'paymentMethodName': { name: 'paymentMethodName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'wallet': { name: 'wallet'; type: { kind: 'ENUM'; name: 'DigitalWallet'; ofType: null; } }; }; };
    'CarrierServiceCreatePayload': { kind: 'OBJECT'; name: 'CarrierServiceCreatePayload'; fields: { 'carrierService': { name: 'carrierService'; type: { kind: 'OBJECT'; name: 'DeliveryCarrierService'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CarrierServiceCreateUserError'; ofType: null; }; }; }; } }; }; };
    'CarrierServiceCreateUserError': { kind: 'OBJECT'; name: 'CarrierServiceCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CarrierServiceCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CarrierServiceCreateUserErrorCode': { name: 'CarrierServiceCreateUserErrorCode'; enumValues: 'CARRIER_SERVICE_CREATE_FAILED'; };
    'CarrierServiceDeletePayload': { kind: 'OBJECT'; name: 'CarrierServiceDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CarrierServiceDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'CarrierServiceDeleteUserError': { kind: 'OBJECT'; name: 'CarrierServiceDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CarrierServiceDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CarrierServiceDeleteUserErrorCode': { name: 'CarrierServiceDeleteUserErrorCode'; enumValues: 'CARRIER_SERVICE_DELETE_FAILED'; };
    'CarrierServiceSortKeys': { name: 'CarrierServiceSortKeys'; enumValues: 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'; };
    'CarrierServiceUpdatePayload': { kind: 'OBJECT'; name: 'CarrierServiceUpdatePayload'; fields: { 'carrierService': { name: 'carrierService'; type: { kind: 'OBJECT'; name: 'DeliveryCarrierService'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CarrierServiceUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'CarrierServiceUpdateUserError': { kind: 'OBJECT'; name: 'CarrierServiceUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CarrierServiceUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CarrierServiceUpdateUserErrorCode': { name: 'CarrierServiceUpdateUserErrorCode'; enumValues: 'CARRIER_SERVICE_UPDATE_FAILED'; };
    'CartTransform': { kind: 'OBJECT'; name: 'CartTransform'; fields: { 'blockOnFailure': { name: 'blockOnFailure'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'functionId': { name: 'functionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; }; };
    'CartTransformConnection': { kind: 'OBJECT'; name: 'CartTransformConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CartTransformEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CartTransform'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CartTransformCreatePayload': { kind: 'OBJECT'; name: 'CartTransformCreatePayload'; fields: { 'cartTransform': { name: 'cartTransform'; type: { kind: 'OBJECT'; name: 'CartTransform'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CartTransformCreateUserError'; ofType: null; }; }; }; } }; }; };
    'CartTransformCreateUserError': { kind: 'OBJECT'; name: 'CartTransformCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CartTransformCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CartTransformCreateUserErrorCode': { name: 'CartTransformCreateUserErrorCode'; enumValues: 'INPUT_INVALID' | 'FUNCTION_NOT_FOUND' | 'FUNCTION_ALREADY_REGISTERED' | 'FUNCTION_DOES_NOT_IMPLEMENT'; };
    'CartTransformDeletePayload': { kind: 'OBJECT'; name: 'CartTransformDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CartTransformDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'CartTransformDeleteUserError': { kind: 'OBJECT'; name: 'CartTransformDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CartTransformDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CartTransformDeleteUserErrorCode': { name: 'CartTransformDeleteUserErrorCode'; enumValues: 'NOT_FOUND' | 'UNAUTHORIZED_APP_SCOPE'; };
    'CartTransformEdge': { kind: 'OBJECT'; name: 'CartTransformEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CartTransform'; ofType: null; }; } }; }; };
    'CartTransformEligibleOperations': { kind: 'OBJECT'; name: 'CartTransformEligibleOperations'; fields: { 'expandOperation': { name: 'expandOperation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mergeOperation': { name: 'mergeOperation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateOperation': { name: 'updateOperation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CartTransformFeature': { kind: 'OBJECT'; name: 'CartTransformFeature'; fields: { 'eligibleOperations': { name: 'eligibleOperations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CartTransformEligibleOperations'; ofType: null; }; } }; }; };
    'CashTrackingAdjustment': { kind: 'OBJECT'; name: 'CashTrackingAdjustment'; fields: { 'cash': { name: 'cash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'staffMember': { name: 'staffMember'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; }; } }; 'time': { name: 'time'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'CashTrackingAdjustmentConnection': { kind: 'OBJECT'; name: 'CashTrackingAdjustmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CashTrackingAdjustmentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CashTrackingAdjustment'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CashTrackingAdjustmentEdge': { kind: 'OBJECT'; name: 'CashTrackingAdjustmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CashTrackingAdjustment'; ofType: null; }; } }; }; };
    'CashTrackingSession': { kind: 'OBJECT'; name: 'CashTrackingSession'; fields: { 'adjustments': { name: 'adjustments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CashTrackingAdjustmentConnection'; ofType: null; }; } }; 'cashTrackingEnabled': { name: 'cashTrackingEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'cashTransactions': { name: 'cashTransactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderTransactionConnection'; ofType: null; }; } }; 'closingBalance': { name: 'closingBalance'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'closingNote': { name: 'closingNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'closingStaffMember': { name: 'closingStaffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'closingTime': { name: 'closingTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'expectedBalance': { name: 'expectedBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'expectedClosingBalance': { name: 'expectedClosingBalance'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'expectedOpeningBalance': { name: 'expectedOpeningBalance'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'netCashSales': { name: 'netCashSales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'openingBalance': { name: 'openingBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'openingNote': { name: 'openingNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'openingStaffMember': { name: 'openingStaffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'openingTime': { name: 'openingTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'registerName': { name: 'registerName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalAdjustments': { name: 'totalAdjustments'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'totalCashRefunds': { name: 'totalCashRefunds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'totalCashSales': { name: 'totalCashSales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'totalDiscrepancy': { name: 'totalDiscrepancy'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; }; };
    'CashTrackingSessionConnection': { kind: 'OBJECT'; name: 'CashTrackingSessionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CashTrackingSessionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CashTrackingSession'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CashTrackingSessionEdge': { kind: 'OBJECT'; name: 'CashTrackingSessionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CashTrackingSession'; ofType: null; }; } }; }; };
    'CashTrackingSessionTransactionsSortKeys': { name: 'CashTrackingSessionTransactionsSortKeys'; enumValues: 'PROCESSED_AT' | 'ID' | 'RELEVANCE'; };
    'CashTrackingSessionsSortKeys': { name: 'CashTrackingSessionsSortKeys'; enumValues: 'OPENING_TIME_DESC' | 'OPENING_TIME_ASC' | 'CLOSING_TIME_DESC' | 'CLOSING_TIME_ASC' | 'TOTAL_DISCREPANCY_DESC' | 'TOTAL_DISCREPANCY_ASC' | 'ID' | 'RELEVANCE'; };
    'Catalog': { kind: 'INTERFACE'; name: 'Catalog'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'operations': { name: 'operations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'ResourceOperation'; ofType: null; }; }; }; } }; 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'publication': { name: 'publication'; type: { kind: 'OBJECT'; name: 'Publication'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CatalogStatus'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'AppCatalog' | 'CompanyLocationCatalog' | 'MarketCatalog'; };
    'CatalogConnection': { kind: 'OBJECT'; name: 'CatalogConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CatalogEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Catalog'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CatalogContextInput': { kind: 'INPUT_OBJECT'; name: 'CatalogContextInput'; isOneOf: false; inputFields: [{ name: 'companyLocationIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'CatalogContextUpdatePayload': { kind: 'OBJECT'; name: 'CatalogContextUpdatePayload'; fields: { 'catalog': { name: 'catalog'; type: { kind: 'INTERFACE'; name: 'Catalog'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CatalogUserError'; ofType: null; }; }; }; } }; }; };
    'CatalogCreateInput': { kind: 'INPUT_OBJECT'; name: 'CatalogCreateInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CatalogStatus'; ofType: null; }; }; defaultValue: null }, { name: 'context'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CatalogContextInput'; ofType: null; }; }; defaultValue: null }, { name: 'priceListId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'publicationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'CatalogCreatePayload': { kind: 'OBJECT'; name: 'CatalogCreatePayload'; fields: { 'catalog': { name: 'catalog'; type: { kind: 'INTERFACE'; name: 'Catalog'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CatalogUserError'; ofType: null; }; }; }; } }; }; };
    'CatalogCsvOperation': { kind: 'OBJECT'; name: 'CatalogCsvOperation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'processedRowCount': { name: 'processedRowCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rowCount': { name: 'rowCount'; type: { kind: 'OBJECT'; name: 'RowCount'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ResourceOperationStatus'; ofType: null; }; } }; }; };
    'CatalogDeletePayload': { kind: 'OBJECT'; name: 'CatalogDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CatalogUserError'; ofType: null; }; }; }; } }; }; };
    'CatalogEdge': { kind: 'OBJECT'; name: 'CatalogEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Catalog'; ofType: null; }; } }; }; };
    'CatalogSortKeys': { name: 'CatalogSortKeys'; enumValues: 'TITLE' | 'ID' | 'RELEVANCE'; };
    'CatalogStatus': { name: 'CatalogStatus'; enumValues: 'ACTIVE' | 'ARCHIVED' | 'DRAFT'; };
    'CatalogType': { name: 'CatalogType'; enumValues: 'NONE' | 'APP' | 'COMPANY_LOCATION' | 'MARKET'; };
    'CatalogUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CatalogUpdateInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'CatalogStatus'; ofType: null; }; defaultValue: null }, { name: 'context'; type: { kind: 'INPUT_OBJECT'; name: 'CatalogContextInput'; ofType: null; }; defaultValue: null }, { name: 'priceListId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'publicationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'CatalogUpdatePayload': { kind: 'OBJECT'; name: 'CatalogUpdatePayload'; fields: { 'catalog': { name: 'catalog'; type: { kind: 'INTERFACE'; name: 'Catalog'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CatalogUserError'; ofType: null; }; }; }; } }; }; };
    'CatalogUserError': { kind: 'OBJECT'; name: 'CatalogUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CatalogUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CatalogUserErrorCode': { name: 'CatalogUserErrorCode'; enumValues: 'APP_CATALOG_PRICE_LIST_ASSIGNMENT' | 'CATALOG_FAILED_TO_SAVE' | 'CATALOG_NOT_FOUND' | 'PRICE_LIST_NOT_ALLOWED_FOR_PRIMARY_MARKET' | 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES' | 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_PRICE_BREAKS' | 'CANNOT_ADD_MORE_THAN_ONE_MARKET' | 'COMPANY_LOCATION_CATALOG_STATUS_PLAN' | 'CONTEXT_ALREADY_ASSIGNED_TO_CATALOG' | 'CONTEXT_CATALOG_LIMIT_REACHED' | 'COMPANY_LOCATION_NOT_FOUND' | 'CONTEXT_DRIVER_MISMATCH' | 'COUNTRY_PRICE_LIST_ASSIGNMENT' | 'INVALID_CATALOG_CONTEXT_TYPE' | 'MARKET_CATALOG_STATUS' | 'MARKET_NOT_FOUND' | 'MARKET_AND_PRICE_LIST_CURRENCY_MISMATCH' | 'MARKET_TAKEN' | 'MUST_PROVIDE_EXACTLY_ONE_CONTEXT_TYPE' | 'PRICE_LIST_FAILED_TO_SAVE' | 'PRICE_LIST_NOT_FOUND' | 'PRICE_LIST_LOCKED' | 'PUBLICATION_NOT_FOUND' | 'REQUIRES_CONTEXTS_TO_ADD_OR_REMOVE' | 'UNSUPPORTED_CATALOG_ACTION' | 'CANNOT_CREATE_APP_CATALOG' | 'CANNOT_MODIFY_APP_CATALOG' | 'CANNOT_DELETE_APP_CATALOG' | 'CANNOT_CREATE_MARKET_CATALOG' | 'CANNOT_MODIFY_MARKET_CATALOG' | 'CANNOT_DELETE_MARKET_CATALOG' | 'INVALID' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'BLANK'; };
    'Channel': { kind: 'OBJECT'; name: 'Channel'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'collectionPublicationsV3': { name: 'collectionPublicationsV3'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationConnection'; ofType: null; }; } }; 'collections': { name: 'collections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionConnection'; ofType: null; }; } }; 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'hasCollection': { name: 'hasCollection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'navigationItems': { name: 'navigationItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NavigationItem'; ofType: null; }; }; }; } }; 'overviewPath': { name: 'overviewPath'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'productPublications': { name: 'productPublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPublicationConnection'; ofType: null; }; } }; 'productPublicationsV3': { name: 'productPublicationsV3'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationConnection'; ofType: null; }; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductConnection'; ofType: null; }; } }; 'productsCount': { name: 'productsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'supportsFuturePublishing': { name: 'supportsFuturePublishing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ChannelConnection': { kind: 'OBJECT'; name: 'ChannelConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ChannelDefinition': { kind: 'OBJECT'; name: 'ChannelDefinition'; fields: { 'channelName': { name: 'channelName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isMarketplace': { name: 'isMarketplace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'subChannelName': { name: 'subChannelName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'svgIcon': { name: 'svgIcon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ChannelEdge': { kind: 'OBJECT'; name: 'ChannelEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; }; };
    'ChannelInformation': { kind: 'OBJECT'; name: 'ChannelInformation'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'channelDefinition': { name: 'channelDefinition'; type: { kind: 'OBJECT'; name: 'ChannelDefinition'; ofType: null; } }; 'channelId': { name: 'channelId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'CheckoutBranding': { kind: 'OBJECT'; name: 'CheckoutBranding'; fields: { 'customizations': { name: 'customizations'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingCustomizations'; ofType: null; } }; 'designSystem': { name: 'designSystem'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingDesignSystem'; ofType: null; } }; }; };
    'CheckoutBrandingBackground': { name: 'CheckoutBrandingBackground'; enumValues: 'BASE' | 'SUBDUED' | 'TRANSPARENT'; };
    'CheckoutBrandingBackgroundStyle': { name: 'CheckoutBrandingBackgroundStyle'; enumValues: 'SOLID' | 'NONE'; };
    'CheckoutBrandingBorder': { name: 'CheckoutBrandingBorder'; enumValues: 'NONE' | 'BLOCK_END' | 'FULL'; };
    'CheckoutBrandingBorderStyle': { name: 'CheckoutBrandingBorderStyle'; enumValues: 'BASE' | 'DASHED' | 'DOTTED'; };
    'CheckoutBrandingBorderWidth': { name: 'CheckoutBrandingBorderWidth'; enumValues: 'BASE' | 'LARGE_100' | 'LARGE_200' | 'LARGE'; };
    'CheckoutBrandingButton': { kind: 'OBJECT'; name: 'CheckoutBrandingButton'; fields: { 'background': { name: 'background'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBackgroundStyle'; ofType: null; } }; 'blockPadding': { name: 'blockPadding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacing'; ofType: null; } }; 'border': { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; } }; 'cornerRadius': { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; } }; 'inlinePadding': { name: 'inlinePadding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacing'; ofType: null; } }; 'typography': { name: 'typography'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingTypographyStyle'; ofType: null; } }; }; };
    'CheckoutBrandingButtonColorRoles': { kind: 'OBJECT'; name: 'CheckoutBrandingButtonColorRoles'; fields: { 'accent': { name: 'accent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'background': { name: 'background'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'border': { name: 'border'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decorative': { name: 'decorative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hover': { name: 'hover'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColorRoles'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'text': { name: 'text'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutBrandingButtonColorRolesInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingButtonColorRolesInput'; isOneOf: false; inputFields: [{ name: 'background'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'text'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'border'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'decorative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hover'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorRolesInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingButtonInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingButtonInput'; isOneOf: false; inputFields: [{ name: 'background'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBackgroundStyle'; ofType: null; }; defaultValue: null }, { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; }; defaultValue: null }, { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; }; defaultValue: null }, { name: 'blockPadding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacing'; ofType: null; }; defaultValue: null }, { name: 'inlinePadding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacing'; ofType: null; }; defaultValue: null }, { name: 'typography'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTypographyStyleInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingBuyerJourney': { kind: 'OBJECT'; name: 'CheckoutBrandingBuyerJourney'; fields: { 'visibility': { name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; } }; }; };
    'CheckoutBrandingBuyerJourneyInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingBuyerJourneyInput'; isOneOf: false; inputFields: [{ name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingCartLink': { kind: 'OBJECT'; name: 'CheckoutBrandingCartLink'; fields: { 'visibility': { name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; } }; }; };
    'CheckoutBrandingCartLinkContentType': { name: 'CheckoutBrandingCartLinkContentType'; enumValues: 'ICON' | 'IMAGE' | 'TEXT'; };
    'CheckoutBrandingCartLinkInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCartLinkInput'; isOneOf: false; inputFields: [{ name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingCheckbox': { kind: 'OBJECT'; name: 'CheckoutBrandingCheckbox'; fields: { 'cornerRadius': { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; } }; }; };
    'CheckoutBrandingCheckboxInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCheckboxInput'; isOneOf: false; inputFields: [{ name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingChoiceList': { kind: 'OBJECT'; name: 'CheckoutBrandingChoiceList'; fields: { 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingChoiceListGroup'; ofType: null; } }; }; };
    'CheckoutBrandingChoiceListGroup': { kind: 'OBJECT'; name: 'CheckoutBrandingChoiceListGroup'; fields: { 'spacing': { name: 'spacing'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; } }; }; };
    'CheckoutBrandingChoiceListGroupInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingChoiceListGroupInput'; isOneOf: false; inputFields: [{ name: 'spacing'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingChoiceListInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingChoiceListInput'; isOneOf: false; inputFields: [{ name: 'group'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingChoiceListGroupInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingColorGlobal': { kind: 'OBJECT'; name: 'CheckoutBrandingColorGlobal'; fields: { 'accent': { name: 'accent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'brand': { name: 'brand'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'critical': { name: 'critical'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decorative': { name: 'decorative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'info': { name: 'info'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warning': { name: 'warning'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutBrandingColorGlobalInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorGlobalInput'; isOneOf: false; inputFields: [{ name: 'info'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'success'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'warning'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'critical'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'brand'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'decorative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingColorRoles': { kind: 'OBJECT'; name: 'CheckoutBrandingColorRoles'; fields: { 'accent': { name: 'accent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'background': { name: 'background'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'border': { name: 'border'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decorative': { name: 'decorative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'text': { name: 'text'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutBrandingColorRolesInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorRolesInput'; isOneOf: false; inputFields: [{ name: 'background'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'text'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'border'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'decorative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingColorScheme': { kind: 'OBJECT'; name: 'CheckoutBrandingColorScheme'; fields: { 'base': { name: 'base'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColorRoles'; ofType: null; } }; 'control': { name: 'control'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingControlColorRoles'; ofType: null; } }; 'primaryButton': { name: 'primaryButton'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingButtonColorRoles'; ofType: null; } }; 'secondaryButton': { name: 'secondaryButton'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingButtonColorRoles'; ofType: null; } }; }; };
    'CheckoutBrandingColorSchemeInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorSchemeInput'; isOneOf: false; inputFields: [{ name: 'base'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorRolesInput'; ofType: null; }; defaultValue: null }, { name: 'control'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingControlColorRolesInput'; ofType: null; }; defaultValue: null }, { name: 'primaryButton'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingButtonColorRolesInput'; ofType: null; }; defaultValue: null }, { name: 'secondaryButton'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingButtonColorRolesInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingColorSchemeSelection': { name: 'CheckoutBrandingColorSchemeSelection'; enumValues: 'TRANSPARENT' | 'COLOR_SCHEME1' | 'COLOR_SCHEME2' | 'COLOR_SCHEME3' | 'COLOR_SCHEME4'; };
    'CheckoutBrandingColorSchemes': { kind: 'OBJECT'; name: 'CheckoutBrandingColorSchemes'; fields: { 'scheme1': { name: 'scheme1'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColorScheme'; ofType: null; } }; 'scheme2': { name: 'scheme2'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColorScheme'; ofType: null; } }; 'scheme3': { name: 'scheme3'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColorScheme'; ofType: null; } }; 'scheme4': { name: 'scheme4'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColorScheme'; ofType: null; } }; }; };
    'CheckoutBrandingColorSchemesInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorSchemesInput'; isOneOf: false; inputFields: [{ name: 'scheme1'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorSchemeInput'; ofType: null; }; defaultValue: null }, { name: 'scheme2'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorSchemeInput'; ofType: null; }; defaultValue: null }, { name: 'scheme3'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorSchemeInput'; ofType: null; }; defaultValue: null }, { name: 'scheme4'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorSchemeInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingColorSelection': { name: 'CheckoutBrandingColorSelection'; enumValues: 'TRANSPARENT'; };
    'CheckoutBrandingColors': { kind: 'OBJECT'; name: 'CheckoutBrandingColors'; fields: { 'global': { name: 'global'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColorGlobal'; ofType: null; } }; 'schemes': { name: 'schemes'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColorSchemes'; ofType: null; } }; }; };
    'CheckoutBrandingColorsInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorsInput'; isOneOf: false; inputFields: [{ name: 'global'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorGlobalInput'; ofType: null; }; defaultValue: null }, { name: 'schemes'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorSchemesInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingContainerDivider': { kind: 'OBJECT'; name: 'CheckoutBrandingContainerDivider'; fields: { 'borderStyle': { name: 'borderStyle'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderStyle'; ofType: null; } }; 'borderWidth': { name: 'borderWidth'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderWidth'; ofType: null; } }; 'visibility': { name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; } }; }; };
    'CheckoutBrandingContainerDividerInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingContainerDividerInput'; isOneOf: false; inputFields: [{ name: 'borderStyle'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderStyle'; ofType: null; }; defaultValue: null }, { name: 'borderWidth'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderWidth'; ofType: null; }; defaultValue: null }, { name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingContent': { kind: 'OBJECT'; name: 'CheckoutBrandingContent'; fields: { 'divider': { name: 'divider'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingContainerDivider'; ofType: null; } }; }; };
    'CheckoutBrandingContentInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingContentInput'; isOneOf: false; inputFields: [{ name: 'divider'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingContainerDividerInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingControl': { kind: 'OBJECT'; name: 'CheckoutBrandingControl'; fields: { 'border': { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; } }; 'color': { name: 'color'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSelection'; ofType: null; } }; 'cornerRadius': { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; } }; 'labelPosition': { name: 'labelPosition'; type: { kind: 'ENUM'; name: 'CheckoutBrandingLabelPosition'; ofType: null; } }; }; };
    'CheckoutBrandingControlColorRoles': { kind: 'OBJECT'; name: 'CheckoutBrandingControlColorRoles'; fields: { 'accent': { name: 'accent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'background': { name: 'background'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'border': { name: 'border'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decorative': { name: 'decorative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'selected': { name: 'selected'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColorRoles'; ofType: null; } }; 'text': { name: 'text'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutBrandingControlColorRolesInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingControlColorRolesInput'; isOneOf: false; inputFields: [{ name: 'background'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'text'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'border'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'decorative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'selected'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorRolesInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingControlInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingControlInput'; isOneOf: false; inputFields: [{ name: 'color'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSelection'; ofType: null; }; defaultValue: null }, { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; }; defaultValue: null }, { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; }; defaultValue: null }, { name: 'labelPosition'; type: { kind: 'ENUM'; name: 'CheckoutBrandingLabelPosition'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingCornerRadius': { name: 'CheckoutBrandingCornerRadius'; enumValues: 'NONE' | 'SMALL' | 'BASE' | 'LARGE'; };
    'CheckoutBrandingCornerRadiusVariables': { kind: 'OBJECT'; name: 'CheckoutBrandingCornerRadiusVariables'; fields: { 'base': { name: 'base'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'large': { name: 'large'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'small': { name: 'small'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CheckoutBrandingCornerRadiusVariablesInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCornerRadiusVariablesInput'; isOneOf: false; inputFields: [{ name: 'small'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'base'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'large'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingCustomFont': { kind: 'OBJECT'; name: 'CheckoutBrandingCustomFont'; fields: { 'genericFileId': { name: 'genericFileId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'sources': { name: 'sources'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'weight': { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CheckoutBrandingCustomFontGroupInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCustomFontGroupInput'; isOneOf: false; inputFields: [{ name: 'base'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCustomFontInput'; ofType: null; }; }; defaultValue: null }, { name: 'bold'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCustomFontInput'; ofType: null; }; }; defaultValue: null }, { name: 'loadingStrategy'; type: { kind: 'ENUM'; name: 'CheckoutBrandingFontLoadingStrategy'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingCustomFontInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCustomFontInput'; isOneOf: false; inputFields: [{ name: 'weight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'genericFileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CheckoutBrandingCustomizations': { kind: 'OBJECT'; name: 'CheckoutBrandingCustomizations'; fields: { 'buyerJourney': { name: 'buyerJourney'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingBuyerJourney'; ofType: null; } }; 'cartLink': { name: 'cartLink'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingCartLink'; ofType: null; } }; 'checkbox': { name: 'checkbox'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingCheckbox'; ofType: null; } }; 'choiceList': { name: 'choiceList'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingChoiceList'; ofType: null; } }; 'content': { name: 'content'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingContent'; ofType: null; } }; 'control': { name: 'control'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingControl'; ofType: null; } }; 'divider': { name: 'divider'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingDividerStyle'; ofType: null; } }; 'expressCheckout': { name: 'expressCheckout'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingExpressCheckout'; ofType: null; } }; 'favicon': { name: 'favicon'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingImage'; ofType: null; } }; 'footer': { name: 'footer'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingFooter'; ofType: null; } }; 'global': { name: 'global'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingGlobal'; ofType: null; } }; 'header': { name: 'header'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingHeader'; ofType: null; } }; 'headingLevel1': { name: 'headingLevel1'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingHeadingLevel'; ofType: null; } }; 'headingLevel2': { name: 'headingLevel2'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingHeadingLevel'; ofType: null; } }; 'headingLevel3': { name: 'headingLevel3'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingHeadingLevel'; ofType: null; } }; 'main': { name: 'main'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingMain'; ofType: null; } }; 'merchandiseThumbnail': { name: 'merchandiseThumbnail'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingMerchandiseThumbnail'; ofType: null; } }; 'orderSummary': { name: 'orderSummary'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingOrderSummary'; ofType: null; } }; 'primaryButton': { name: 'primaryButton'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingButton'; ofType: null; } }; 'secondaryButton': { name: 'secondaryButton'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingButton'; ofType: null; } }; 'select': { name: 'select'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingSelect'; ofType: null; } }; 'textField': { name: 'textField'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingTextField'; ofType: null; } }; }; };
    'CheckoutBrandingCustomizationsInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCustomizationsInput'; isOneOf: false; inputFields: [{ name: 'global'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingGlobalInput'; ofType: null; }; defaultValue: null }, { name: 'header'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingHeaderInput'; ofType: null; }; defaultValue: null }, { name: 'headingLevel1'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingHeadingLevelInput'; ofType: null; }; defaultValue: null }, { name: 'headingLevel2'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingHeadingLevelInput'; ofType: null; }; defaultValue: null }, { name: 'headingLevel3'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingHeadingLevelInput'; ofType: null; }; defaultValue: null }, { name: 'footer'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingFooterInput'; ofType: null; }; defaultValue: null }, { name: 'main'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingMainInput'; ofType: null; }; defaultValue: null }, { name: 'orderSummary'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingOrderSummaryInput'; ofType: null; }; defaultValue: null }, { name: 'control'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingControlInput'; ofType: null; }; defaultValue: null }, { name: 'textField'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTextFieldInput'; ofType: null; }; defaultValue: null }, { name: 'checkbox'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCheckboxInput'; ofType: null; }; defaultValue: null }, { name: 'select'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingSelectInput'; ofType: null; }; defaultValue: null }, { name: 'primaryButton'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingButtonInput'; ofType: null; }; defaultValue: null }, { name: 'secondaryButton'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingButtonInput'; ofType: null; }; defaultValue: null }, { name: 'favicon'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingImageInput'; ofType: null; }; defaultValue: null }, { name: 'choiceList'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingChoiceListInput'; ofType: null; }; defaultValue: null }, { name: 'merchandiseThumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingMerchandiseThumbnailInput'; ofType: null; }; defaultValue: null }, { name: 'expressCheckout'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingExpressCheckoutInput'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingContentInput'; ofType: null; }; defaultValue: null }, { name: 'buyerJourney'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingBuyerJourneyInput'; ofType: null; }; defaultValue: null }, { name: 'cartLink'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCartLinkInput'; ofType: null; }; defaultValue: null }, { name: 'divider'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingDividerStyleInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingDesignSystem': { kind: 'OBJECT'; name: 'CheckoutBrandingDesignSystem'; fields: { 'colors': { name: 'colors'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingColors'; ofType: null; } }; 'cornerRadius': { name: 'cornerRadius'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingCornerRadiusVariables'; ofType: null; } }; 'typography': { name: 'typography'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingTypography'; ofType: null; } }; }; };
    'CheckoutBrandingDesignSystemInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingDesignSystemInput'; isOneOf: false; inputFields: [{ name: 'colors'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingColorsInput'; ofType: null; }; defaultValue: null }, { name: 'typography'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTypographyInput'; ofType: null; }; defaultValue: null }, { name: 'cornerRadius'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCornerRadiusVariablesInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingDividerStyle': { kind: 'OBJECT'; name: 'CheckoutBrandingDividerStyle'; fields: { 'borderStyle': { name: 'borderStyle'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderStyle'; ofType: null; } }; 'borderWidth': { name: 'borderWidth'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderWidth'; ofType: null; } }; }; };
    'CheckoutBrandingDividerStyleInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingDividerStyleInput'; isOneOf: false; inputFields: [{ name: 'borderStyle'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderStyle'; ofType: null; }; defaultValue: null }, { name: 'borderWidth'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderWidth'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingExpressCheckout': { kind: 'OBJECT'; name: 'CheckoutBrandingExpressCheckout'; fields: { 'button': { name: 'button'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingExpressCheckoutButton'; ofType: null; } }; }; };
    'CheckoutBrandingExpressCheckoutButton': { kind: 'OBJECT'; name: 'CheckoutBrandingExpressCheckoutButton'; fields: { 'cornerRadius': { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; } }; }; };
    'CheckoutBrandingExpressCheckoutButtonInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingExpressCheckoutButtonInput'; isOneOf: false; inputFields: [{ name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingExpressCheckoutInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingExpressCheckoutInput'; isOneOf: false; inputFields: [{ name: 'button'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingExpressCheckoutButtonInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingFont': { kind: 'INTERFACE'; name: 'CheckoutBrandingFont'; fields: { 'sources': { name: 'sources'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'weight': { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; possibleTypes: 'CheckoutBrandingCustomFont' | 'CheckoutBrandingShopifyFont'; };
    'CheckoutBrandingFontGroup': { kind: 'OBJECT'; name: 'CheckoutBrandingFontGroup'; fields: { 'base': { name: 'base'; type: { kind: 'INTERFACE'; name: 'CheckoutBrandingFont'; ofType: null; } }; 'bold': { name: 'bold'; type: { kind: 'INTERFACE'; name: 'CheckoutBrandingFont'; ofType: null; } }; 'loadingStrategy': { name: 'loadingStrategy'; type: { kind: 'ENUM'; name: 'CheckoutBrandingFontLoadingStrategy'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutBrandingFontGroupInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingFontGroupInput'; isOneOf: false; inputFields: [{ name: 'shopifyFontGroup'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingShopifyFontGroupInput'; ofType: null; }; defaultValue: null }, { name: 'customFontGroup'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCustomFontGroupInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingFontLoadingStrategy': { name: 'CheckoutBrandingFontLoadingStrategy'; enumValues: 'AUTO' | 'BLOCK' | 'SWAP' | 'FALLBACK' | 'OPTIONAL'; };
    'CheckoutBrandingFontSize': { kind: 'OBJECT'; name: 'CheckoutBrandingFontSize'; fields: { 'base': { name: 'base'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'ratio': { name: 'ratio'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'CheckoutBrandingFontSizeInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingFontSizeInput'; isOneOf: false; inputFields: [{ name: 'base'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'ratio'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingFooter': { kind: 'OBJECT'; name: 'CheckoutBrandingFooter'; fields: { 'alignment': { name: 'alignment'; type: { kind: 'ENUM'; name: 'CheckoutBrandingFooterAlignment'; ofType: null; } }; 'colorScheme': { name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; } }; 'content': { name: 'content'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingFooterContent'; ofType: null; } }; 'divided': { name: 'divided'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'padding': { name: 'padding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; } }; 'position': { name: 'position'; type: { kind: 'ENUM'; name: 'CheckoutBrandingFooterPosition'; ofType: null; } }; }; };
    'CheckoutBrandingFooterAlignment': { name: 'CheckoutBrandingFooterAlignment'; enumValues: 'START' | 'CENTER' | 'END'; };
    'CheckoutBrandingFooterContent': { kind: 'OBJECT'; name: 'CheckoutBrandingFooterContent'; fields: { 'visibility': { name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; } }; }; };
    'CheckoutBrandingFooterContentInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingFooterContentInput'; isOneOf: false; inputFields: [{ name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingFooterInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingFooterInput'; isOneOf: false; inputFields: [{ name: 'position'; type: { kind: 'ENUM'; name: 'CheckoutBrandingFooterPosition'; ofType: null; }; defaultValue: null }, { name: 'divided'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'alignment'; type: { kind: 'ENUM'; name: 'CheckoutBrandingFooterAlignment'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingFooterContentInput'; ofType: null; }; defaultValue: null }, { name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; }; defaultValue: null }, { name: 'padding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingFooterPosition': { name: 'CheckoutBrandingFooterPosition'; enumValues: 'END' | 'INLINE'; };
    'CheckoutBrandingGlobal': { kind: 'OBJECT'; name: 'CheckoutBrandingGlobal'; fields: { 'cornerRadius': { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingGlobalCornerRadius'; ofType: null; } }; 'typography': { name: 'typography'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingTypographyStyleGlobal'; ofType: null; } }; }; };
    'CheckoutBrandingGlobalCornerRadius': { name: 'CheckoutBrandingGlobalCornerRadius'; enumValues: 'NONE'; };
    'CheckoutBrandingGlobalInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingGlobalInput'; isOneOf: false; inputFields: [{ name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingGlobalCornerRadius'; ofType: null; }; defaultValue: null }, { name: 'typography'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTypographyStyleGlobalInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingHeader': { kind: 'OBJECT'; name: 'CheckoutBrandingHeader'; fields: { 'alignment': { name: 'alignment'; type: { kind: 'ENUM'; name: 'CheckoutBrandingHeaderAlignment'; ofType: null; } }; 'banner': { name: 'banner'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingImage'; ofType: null; } }; 'cartLink': { name: 'cartLink'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingHeaderCartLink'; ofType: null; } }; 'colorScheme': { name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; } }; 'divided': { name: 'divided'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'logo': { name: 'logo'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingLogo'; ofType: null; } }; 'padding': { name: 'padding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; } }; 'position': { name: 'position'; type: { kind: 'ENUM'; name: 'CheckoutBrandingHeaderPosition'; ofType: null; } }; }; };
    'CheckoutBrandingHeaderAlignment': { name: 'CheckoutBrandingHeaderAlignment'; enumValues: 'START' | 'CENTER' | 'END'; };
    'CheckoutBrandingHeaderCartLink': { kind: 'OBJECT'; name: 'CheckoutBrandingHeaderCartLink'; fields: { 'contentType': { name: 'contentType'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCartLinkContentType'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; }; };
    'CheckoutBrandingHeaderCartLinkInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingHeaderCartLinkInput'; isOneOf: false; inputFields: [{ name: 'contentType'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCartLinkContentType'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingImageInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingHeaderInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingHeaderInput'; isOneOf: false; inputFields: [{ name: 'alignment'; type: { kind: 'ENUM'; name: 'CheckoutBrandingHeaderAlignment'; ofType: null; }; defaultValue: null }, { name: 'position'; type: { kind: 'ENUM'; name: 'CheckoutBrandingHeaderPosition'; ofType: null; }; defaultValue: null }, { name: 'logo'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingLogoInput'; ofType: null; }; defaultValue: null }, { name: 'banner'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingImageInput'; ofType: null; }; defaultValue: null }, { name: 'divided'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'cartLink'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingHeaderCartLinkInput'; ofType: null; }; defaultValue: null }, { name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; }; defaultValue: null }, { name: 'padding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingHeaderPosition': { name: 'CheckoutBrandingHeaderPosition'; enumValues: 'INLINE' | 'INLINE_SECONDARY' | 'START'; };
    'CheckoutBrandingHeadingLevel': { kind: 'OBJECT'; name: 'CheckoutBrandingHeadingLevel'; fields: { 'typography': { name: 'typography'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingTypographyStyle'; ofType: null; } }; }; };
    'CheckoutBrandingHeadingLevelInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingHeadingLevelInput'; isOneOf: false; inputFields: [{ name: 'typography'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTypographyStyleInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingImage': { kind: 'OBJECT'; name: 'CheckoutBrandingImage'; fields: { 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; }; };
    'CheckoutBrandingImageInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingImageInput'; isOneOf: false; inputFields: [{ name: 'mediaImageId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingInput'; isOneOf: false; inputFields: [{ name: 'designSystem'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingDesignSystemInput'; ofType: null; }; defaultValue: null }, { name: 'customizations'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingCustomizationsInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingLabelPosition': { name: 'CheckoutBrandingLabelPosition'; enumValues: 'INSIDE' | 'OUTSIDE'; };
    'CheckoutBrandingLogo': { kind: 'OBJECT'; name: 'CheckoutBrandingLogo'; fields: { 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'maxWidth': { name: 'maxWidth'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'visibility': { name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; } }; }; };
    'CheckoutBrandingLogoInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingLogoInput'; isOneOf: false; inputFields: [{ name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingImageInput'; ofType: null; }; defaultValue: null }, { name: 'maxWidth'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'visibility'; type: { kind: 'ENUM'; name: 'CheckoutBrandingVisibility'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingMain': { kind: 'OBJECT'; name: 'CheckoutBrandingMain'; fields: { 'backgroundImage': { name: 'backgroundImage'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingImage'; ofType: null; } }; 'colorScheme': { name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; } }; 'divider': { name: 'divider'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingContainerDivider'; ofType: null; } }; 'section': { name: 'section'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingMainSection'; ofType: null; } }; }; };
    'CheckoutBrandingMainInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingMainInput'; isOneOf: false; inputFields: [{ name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; }; defaultValue: null }, { name: 'backgroundImage'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingImageInput'; ofType: null; }; defaultValue: null }, { name: 'divider'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingContainerDividerInput'; ofType: null; }; defaultValue: null }, { name: 'section'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingMainSectionInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingMainSection': { kind: 'OBJECT'; name: 'CheckoutBrandingMainSection'; fields: { 'background': { name: 'background'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBackground'; ofType: null; } }; 'border': { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; } }; 'borderStyle': { name: 'borderStyle'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderStyle'; ofType: null; } }; 'borderWidth': { name: 'borderWidth'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderWidth'; ofType: null; } }; 'colorScheme': { name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; } }; 'cornerRadius': { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; } }; 'padding': { name: 'padding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; } }; 'shadow': { name: 'shadow'; type: { kind: 'ENUM'; name: 'CheckoutBrandingShadow'; ofType: null; } }; }; };
    'CheckoutBrandingMainSectionInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingMainSectionInput'; isOneOf: false; inputFields: [{ name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; }; defaultValue: null }, { name: 'background'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBackground'; ofType: null; }; defaultValue: null }, { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; }; defaultValue: null }, { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; }; defaultValue: null }, { name: 'borderStyle'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderStyle'; ofType: null; }; defaultValue: null }, { name: 'borderWidth'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderWidth'; ofType: null; }; defaultValue: null }, { name: 'shadow'; type: { kind: 'ENUM'; name: 'CheckoutBrandingShadow'; ofType: null; }; defaultValue: null }, { name: 'padding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingMerchandiseThumbnail': { kind: 'OBJECT'; name: 'CheckoutBrandingMerchandiseThumbnail'; fields: { 'border': { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; } }; 'cornerRadius': { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; } }; }; };
    'CheckoutBrandingMerchandiseThumbnailInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingMerchandiseThumbnailInput'; isOneOf: false; inputFields: [{ name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; }; defaultValue: null }, { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingOrderSummary': { kind: 'OBJECT'; name: 'CheckoutBrandingOrderSummary'; fields: { 'backgroundImage': { name: 'backgroundImage'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingImage'; ofType: null; } }; 'colorScheme': { name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; } }; 'divider': { name: 'divider'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingContainerDivider'; ofType: null; } }; 'section': { name: 'section'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingOrderSummarySection'; ofType: null; } }; }; };
    'CheckoutBrandingOrderSummaryInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingOrderSummaryInput'; isOneOf: false; inputFields: [{ name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; }; defaultValue: null }, { name: 'backgroundImage'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingImageInput'; ofType: null; }; defaultValue: null }, { name: 'divider'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingContainerDividerInput'; ofType: null; }; defaultValue: null }, { name: 'section'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingOrderSummarySectionInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingOrderSummarySection': { kind: 'OBJECT'; name: 'CheckoutBrandingOrderSummarySection'; fields: { 'background': { name: 'background'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBackground'; ofType: null; } }; 'border': { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; } }; 'borderStyle': { name: 'borderStyle'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderStyle'; ofType: null; } }; 'borderWidth': { name: 'borderWidth'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderWidth'; ofType: null; } }; 'colorScheme': { name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; } }; 'cornerRadius': { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; } }; 'padding': { name: 'padding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; } }; 'shadow': { name: 'shadow'; type: { kind: 'ENUM'; name: 'CheckoutBrandingShadow'; ofType: null; } }; }; };
    'CheckoutBrandingOrderSummarySectionInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingOrderSummarySectionInput'; isOneOf: false; inputFields: [{ name: 'colorScheme'; type: { kind: 'ENUM'; name: 'CheckoutBrandingColorSchemeSelection'; ofType: null; }; defaultValue: null }, { name: 'background'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBackground'; ofType: null; }; defaultValue: null }, { name: 'cornerRadius'; type: { kind: 'ENUM'; name: 'CheckoutBrandingCornerRadius'; ofType: null; }; defaultValue: null }, { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSimpleBorder'; ofType: null; }; defaultValue: null }, { name: 'borderStyle'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderStyle'; ofType: null; }; defaultValue: null }, { name: 'borderWidth'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorderWidth'; ofType: null; }; defaultValue: null }, { name: 'shadow'; type: { kind: 'ENUM'; name: 'CheckoutBrandingShadow'; ofType: null; }; defaultValue: null }, { name: 'padding'; type: { kind: 'ENUM'; name: 'CheckoutBrandingSpacingKeyword'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingSelect': { kind: 'OBJECT'; name: 'CheckoutBrandingSelect'; fields: { 'border': { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorder'; ofType: null; } }; 'typography': { name: 'typography'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingTypographyStyle'; ofType: null; } }; }; };
    'CheckoutBrandingSelectInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingSelectInput'; isOneOf: false; inputFields: [{ name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorder'; ofType: null; }; defaultValue: null }, { name: 'typography'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTypographyStyleInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingShadow': { name: 'CheckoutBrandingShadow'; enumValues: 'SMALL_200' | 'SMALL_100' | 'BASE' | 'LARGE_100' | 'LARGE_200'; };
    'CheckoutBrandingShopifyFont': { kind: 'OBJECT'; name: 'CheckoutBrandingShopifyFont'; fields: { 'sources': { name: 'sources'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'weight': { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CheckoutBrandingShopifyFontGroupInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingShopifyFontGroupInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'baseWeight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'boldWeight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'loadingStrategy'; type: { kind: 'ENUM'; name: 'CheckoutBrandingFontLoadingStrategy'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingSimpleBorder': { name: 'CheckoutBrandingSimpleBorder'; enumValues: 'NONE' | 'FULL'; };
    'CheckoutBrandingSpacing': { name: 'CheckoutBrandingSpacing'; enumValues: 'NONE' | 'EXTRA_TIGHT' | 'TIGHT' | 'BASE' | 'LOOSE' | 'EXTRA_LOOSE'; };
    'CheckoutBrandingSpacingKeyword': { name: 'CheckoutBrandingSpacingKeyword'; enumValues: 'NONE' | 'BASE' | 'SMALL' | 'SMALL_100' | 'SMALL_200' | 'SMALL_300' | 'SMALL_400' | 'SMALL_500' | 'LARGE' | 'LARGE_100' | 'LARGE_200' | 'LARGE_300' | 'LARGE_400' | 'LARGE_500'; };
    'CheckoutBrandingTextField': { kind: 'OBJECT'; name: 'CheckoutBrandingTextField'; fields: { 'border': { name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorder'; ofType: null; } }; 'typography': { name: 'typography'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingTypographyStyle'; ofType: null; } }; }; };
    'CheckoutBrandingTextFieldInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTextFieldInput'; isOneOf: false; inputFields: [{ name: 'border'; type: { kind: 'ENUM'; name: 'CheckoutBrandingBorder'; ofType: null; }; defaultValue: null }, { name: 'typography'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTypographyStyleInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingTypography': { kind: 'OBJECT'; name: 'CheckoutBrandingTypography'; fields: { 'primary': { name: 'primary'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingFontGroup'; ofType: null; } }; 'secondary': { name: 'secondary'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingFontGroup'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingFontSize'; ofType: null; } }; }; };
    'CheckoutBrandingTypographyFont': { name: 'CheckoutBrandingTypographyFont'; enumValues: 'PRIMARY' | 'SECONDARY'; };
    'CheckoutBrandingTypographyInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTypographyInput'; isOneOf: false; inputFields: [{ name: 'size'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingFontSizeInput'; ofType: null; }; defaultValue: null }, { name: 'primary'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingFontGroupInput'; ofType: null; }; defaultValue: null }, { name: 'secondary'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingFontGroupInput'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingTypographyKerning': { name: 'CheckoutBrandingTypographyKerning'; enumValues: 'BASE' | 'LOOSE' | 'EXTRA_LOOSE'; };
    'CheckoutBrandingTypographyLetterCase': { name: 'CheckoutBrandingTypographyLetterCase'; enumValues: 'LOWER' | 'NONE' | 'TITLE' | 'UPPER'; };
    'CheckoutBrandingTypographySize': { name: 'CheckoutBrandingTypographySize'; enumValues: 'EXTRA_SMALL' | 'SMALL' | 'BASE' | 'MEDIUM' | 'LARGE' | 'EXTRA_LARGE' | 'EXTRA_EXTRA_LARGE'; };
    'CheckoutBrandingTypographyStyle': { kind: 'OBJECT'; name: 'CheckoutBrandingTypographyStyle'; fields: { 'font': { name: 'font'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyFont'; ofType: null; } }; 'kerning': { name: 'kerning'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyKerning'; ofType: null; } }; 'letterCase': { name: 'letterCase'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyLetterCase'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographySize'; ofType: null; } }; 'weight': { name: 'weight'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyWeight'; ofType: null; } }; }; };
    'CheckoutBrandingTypographyStyleGlobal': { kind: 'OBJECT'; name: 'CheckoutBrandingTypographyStyleGlobal'; fields: { 'kerning': { name: 'kerning'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyKerning'; ofType: null; } }; 'letterCase': { name: 'letterCase'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyLetterCase'; ofType: null; } }; }; };
    'CheckoutBrandingTypographyStyleGlobalInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTypographyStyleGlobalInput'; isOneOf: false; inputFields: [{ name: 'letterCase'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyLetterCase'; ofType: null; }; defaultValue: null }, { name: 'kerning'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyKerning'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingTypographyStyleInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutBrandingTypographyStyleInput'; isOneOf: false; inputFields: [{ name: 'font'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyFont'; ofType: null; }; defaultValue: null }, { name: 'size'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographySize'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyWeight'; ofType: null; }; defaultValue: null }, { name: 'letterCase'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyLetterCase'; ofType: null; }; defaultValue: null }, { name: 'kerning'; type: { kind: 'ENUM'; name: 'CheckoutBrandingTypographyKerning'; ofType: null; }; defaultValue: null }]; };
    'CheckoutBrandingTypographyWeight': { name: 'CheckoutBrandingTypographyWeight'; enumValues: 'BASE' | 'BOLD'; };
    'CheckoutBrandingUpsertPayload': { kind: 'OBJECT'; name: 'CheckoutBrandingUpsertPayload'; fields: { 'checkoutBranding': { name: 'checkoutBranding'; type: { kind: 'OBJECT'; name: 'CheckoutBranding'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutBrandingUpsertUserError'; ofType: null; }; }; }; } }; }; };
    'CheckoutBrandingUpsertUserError': { kind: 'OBJECT'; name: 'CheckoutBrandingUpsertUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CheckoutBrandingUpsertUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CheckoutBrandingUpsertUserErrorCode': { name: 'CheckoutBrandingUpsertUserErrorCode'; enumValues: 'INTERNAL_ERROR'; };
    'CheckoutBrandingVisibility': { name: 'CheckoutBrandingVisibility'; enumValues: 'HIDDEN' | 'VISIBLE'; };
    'CheckoutProfile': { kind: 'OBJECT'; name: 'CheckoutProfile'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'editedAt': { name: 'editedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isPublished': { name: 'isPublished'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'typOspPagesActive': { name: 'typOspPagesActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'CheckoutProfileConnection': { kind: 'OBJECT'; name: 'CheckoutProfileConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutProfileEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutProfile'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CheckoutProfileEdge': { kind: 'OBJECT'; name: 'CheckoutProfileEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutProfile'; ofType: null; }; } }; }; };
    'CheckoutProfileSortKeys': { name: 'CheckoutProfileSortKeys'; enumValues: 'CREATED_AT' | 'UPDATED_AT' | 'EDITED_AT' | 'IS_PUBLISHED' | 'ID' | 'RELEVANCE'; };
    'ChildProductRelationInput': { kind: 'INPUT_OBJECT'; name: 'ChildProductRelationInput'; isOneOf: false; inputFields: [{ name: 'childProductId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'selectedParentOptionValues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SelectedVariantOptionInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'CodeDiscountSortKeys': { name: 'CodeDiscountSortKeys'; enumValues: 'STARTS_AT' | 'ENDS_AT' | 'TITLE' | 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'; };
    'Collection': { kind: 'OBJECT'; name: 'Collection'; fields: { 'availablePublicationsCount': { name: 'availablePublicationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'HTML'; ofType: null; }; } }; 'feedback': { name: 'feedback'; type: { kind: 'OBJECT'; name: 'ResourceFeedback'; ofType: null; } }; 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'hasProduct': { name: 'hasProduct'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductConnection'; ofType: null; }; } }; 'productsCount': { name: 'productsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'publicationCount': { name: 'publicationCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'publications': { name: 'publications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionPublicationConnection'; ofType: null; }; } }; 'publishedOnChannel': { name: 'publishedOnChannel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnCurrentChannel': { name: 'publishedOnCurrentChannel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnCurrentPublication': { name: 'publishedOnCurrentPublication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnPublication': { name: 'publishedOnPublication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resourcePublications': { name: 'resourcePublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationConnection'; ofType: null; }; } }; 'resourcePublicationsCount': { name: 'resourcePublicationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'resourcePublicationsV2': { name: 'resourcePublicationsV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationV2Connection'; ofType: null; }; } }; 'ruleSet': { name: 'ruleSet'; type: { kind: 'OBJECT'; name: 'CollectionRuleSet'; ofType: null; } }; 'seo': { name: 'seo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SEO'; ofType: null; }; } }; 'sortOrder': { name: 'sortOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionSortOrder'; ofType: null; }; } }; 'storefrontId': { name: 'storefrontId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'StorefrontID'; ofType: null; }; } }; 'templateSuffix': { name: 'templateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; 'unpublishedChannels': { name: 'unpublishedChannels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelConnection'; ofType: null; }; } }; 'unpublishedPublications': { name: 'unpublishedPublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicationConnection'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'CollectionAddProductsPayload': { kind: 'OBJECT'; name: 'CollectionAddProductsPayload'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CollectionAddProductsV2Payload': { kind: 'OBJECT'; name: 'CollectionAddProductsV2Payload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionAddProductsV2UserError'; ofType: null; }; }; }; } }; }; };
    'CollectionAddProductsV2UserError': { kind: 'OBJECT'; name: 'CollectionAddProductsV2UserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CollectionAddProductsV2UserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CollectionAddProductsV2UserErrorCode': { name: 'CollectionAddProductsV2UserErrorCode'; enumValues: 'CANT_ADD_TO_SMART_COLLECTION' | 'COLLECTION_DOES_NOT_EXIST'; };
    'CollectionConnection': { kind: 'OBJECT'; name: 'CollectionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Collection'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CollectionCreatePayload': { kind: 'OBJECT'; name: 'CollectionCreatePayload'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CollectionDeleteInput': { kind: 'INPUT_OBJECT'; name: 'CollectionDeleteInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CollectionDeletePayload': { kind: 'OBJECT'; name: 'CollectionDeletePayload'; fields: { 'deletedCollectionId': { name: 'deletedCollectionId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CollectionEdge': { kind: 'OBJECT'; name: 'CollectionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Collection'; ofType: null; }; } }; }; };
    'CollectionInput': { kind: 'INPUT_OBJECT'; name: 'CollectionInput'; isOneOf: false; inputFields: [{ name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'handle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'ImageInput'; ofType: null; }; defaultValue: null }, { name: 'products'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'publications'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CollectionPublicationInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'ruleSet'; type: { kind: 'INPUT_OBJECT'; name: 'CollectionRuleSetInput'; ofType: null; }; defaultValue: null }, { name: 'templateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'sortOrder'; type: { kind: 'ENUM'; name: 'CollectionSortOrder'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SEOInput'; ofType: null; }; defaultValue: null }, { name: 'redirectNewHandle'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'CollectionPublication': { kind: 'OBJECT'; name: 'CollectionPublication'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'collection': { name: 'collection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Collection'; ofType: null; }; } }; 'isPublished': { name: 'isPublished'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publication': { name: 'publication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Publication'; ofType: null; }; } }; 'publishDate': { name: 'publishDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'CollectionPublicationConnection': { kind: 'OBJECT'; name: 'CollectionPublicationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionPublicationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionPublication'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CollectionPublicationEdge': { kind: 'OBJECT'; name: 'CollectionPublicationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionPublication'; ofType: null; }; } }; }; };
    'CollectionPublicationInput': { kind: 'INPUT_OBJECT'; name: 'CollectionPublicationInput'; isOneOf: false; inputFields: [{ name: 'publicationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'channelId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'channelHandle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CollectionPublishInput': { kind: 'INPUT_OBJECT'; name: 'CollectionPublishInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'collectionPublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CollectionPublicationInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'CollectionPublishPayload': { kind: 'OBJECT'; name: 'CollectionPublishPayload'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionPublications': { name: 'collectionPublications'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionPublication'; ofType: null; }; }; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CollectionRemoveProductsPayload': { kind: 'OBJECT'; name: 'CollectionRemoveProductsPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CollectionReorderProductsPayload': { kind: 'OBJECT'; name: 'CollectionReorderProductsPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CollectionRule': { kind: 'OBJECT'; name: 'CollectionRule'; fields: { 'column': { name: 'column'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionRuleColumn'; ofType: null; }; } }; 'condition': { name: 'condition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'conditionObject': { name: 'conditionObject'; type: { kind: 'UNION'; name: 'CollectionRuleConditionObject'; ofType: null; } }; 'relation': { name: 'relation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionRuleRelation'; ofType: null; }; } }; }; };
    'CollectionRuleColumn': { name: 'CollectionRuleColumn'; enumValues: 'TAG' | 'TITLE' | 'TYPE' | 'PRODUCT_TAXONOMY_NODE_ID' | 'VENDOR' | 'VARIANT_PRICE' | 'IS_PRICE_REDUCED' | 'VARIANT_COMPARE_AT_PRICE' | 'VARIANT_WEIGHT' | 'VARIANT_INVENTORY' | 'VARIANT_TITLE' | 'PRODUCT_METAFIELD_DEFINITION' | 'VARIANT_METAFIELD_DEFINITION'; };
    'CollectionRuleConditionObject': { kind: 'UNION'; name: 'CollectionRuleConditionObject'; fields: {}; possibleTypes: 'CollectionRuleMetafieldCondition' | 'CollectionRuleProductCategoryCondition' | 'CollectionRuleTextCondition'; };
    'CollectionRuleConditions': { kind: 'OBJECT'; name: 'CollectionRuleConditions'; fields: { 'allowedRelations': { name: 'allowedRelations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionRuleRelation'; ofType: null; }; }; }; } }; 'defaultRelation': { name: 'defaultRelation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionRuleRelation'; ofType: null; }; } }; 'ruleObject': { name: 'ruleObject'; type: { kind: 'UNION'; name: 'CollectionRuleConditionsRuleObject'; ofType: null; } }; 'ruleType': { name: 'ruleType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionRuleColumn'; ofType: null; }; } }; }; };
    'CollectionRuleConditionsRuleObject': { kind: 'UNION'; name: 'CollectionRuleConditionsRuleObject'; fields: {}; possibleTypes: 'CollectionRuleMetafieldCondition'; };
    'CollectionRuleInput': { kind: 'INPUT_OBJECT'; name: 'CollectionRuleInput'; isOneOf: false; inputFields: [{ name: 'column'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionRuleColumn'; ofType: null; }; }; defaultValue: null }, { name: 'relation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionRuleRelation'; ofType: null; }; }; defaultValue: null }, { name: 'condition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'conditionObjectId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'CollectionRuleMetafieldCondition': { kind: 'OBJECT'; name: 'CollectionRuleMetafieldCondition'; fields: { 'metafieldDefinition': { name: 'metafieldDefinition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; }; } }; }; };
    'CollectionRuleProductCategoryCondition': { kind: 'OBJECT'; name: 'CollectionRuleProductCategoryCondition'; fields: { 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductTaxonomyNode'; ofType: null; }; } }; }; };
    'CollectionRuleRelation': { name: 'CollectionRuleRelation'; enumValues: 'CONTAINS' | 'ENDS_WITH' | 'EQUALS' | 'GREATER_THAN' | 'IS_NOT_SET' | 'IS_SET' | 'LESS_THAN' | 'NOT_CONTAINS' | 'NOT_EQUALS' | 'STARTS_WITH'; };
    'CollectionRuleSet': { kind: 'OBJECT'; name: 'CollectionRuleSet'; fields: { 'appliedDisjunctively': { name: 'appliedDisjunctively'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'rules': { name: 'rules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionRule'; ofType: null; }; }; }; } }; }; };
    'CollectionRuleSetInput': { kind: 'INPUT_OBJECT'; name: 'CollectionRuleSetInput'; isOneOf: false; inputFields: [{ name: 'appliedDisjunctively'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'rules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CollectionRuleInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'CollectionRuleTextCondition': { kind: 'OBJECT'; name: 'CollectionRuleTextCondition'; fields: { 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CollectionSortKeys': { name: 'CollectionSortKeys'; enumValues: 'TITLE' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'; };
    'CollectionSortOrder': { name: 'CollectionSortOrder'; enumValues: 'ALPHA_ASC' | 'ALPHA_DESC' | 'BEST_SELLING' | 'CREATED' | 'CREATED_DESC' | 'MANUAL' | 'PRICE_ASC' | 'PRICE_DESC'; };
    'CollectionUnpublishInput': { kind: 'INPUT_OBJECT'; name: 'CollectionUnpublishInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'collectionPublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CollectionPublicationInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'CollectionUnpublishPayload': { kind: 'OBJECT'; name: 'CollectionUnpublishPayload'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CollectionUpdatePayload': { kind: 'OBJECT'; name: 'CollectionUpdatePayload'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'Color': unknown;
    'CombinedListing': { kind: 'OBJECT'; name: 'CombinedListing'; fields: { 'combinedListingChildren': { name: 'combinedListingChildren'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CombinedListingChildConnection'; ofType: null; }; } }; 'parentProduct': { name: 'parentProduct'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; }; };
    'CombinedListingChild': { kind: 'OBJECT'; name: 'CombinedListingChild'; fields: { 'parentVariant': { name: 'parentVariant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; }; };
    'CombinedListingChildConnection': { kind: 'OBJECT'; name: 'CombinedListingChildConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CombinedListingChildEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CombinedListingChild'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CombinedListingChildEdge': { kind: 'OBJECT'; name: 'CombinedListingChildEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CombinedListingChild'; ofType: null; }; } }; }; };
    'CombinedListingUpdatePayload': { kind: 'OBJECT'; name: 'CombinedListingUpdatePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CombinedListingUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'CombinedListingUpdateUserError': { kind: 'OBJECT'; name: 'CombinedListingUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CombinedListingUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CombinedListingUpdateUserErrorCode': { name: 'CombinedListingUpdateUserErrorCode'; enumValues: 'CANNOT_HAVE_DUPLICATED_PRODUCTS' | 'CANNOT_HAVE_PARENT_AS_CHILD' | 'CANNOT_HAVE_REPEATED_OPTION_VALUES' | 'CANNOT_HAVE_REPEATED_OPTIONS' | 'CANT_ADD_OPTIONS_VALUES_IF_ALREADY_EXISTS' | 'COMBINED_LISTINGS_NOT_ENABLED' | 'EDIT_AND_REMOVE_ON_SAME_PRODUCTS' | 'FAILED_TO_ADD_PRODUCTS' | 'FAILED_TO_REMOVE_PRODUCTS' | 'FAILED_TO_UPDATE_PRODUCTS' | 'LINKED_METAFIELD_CANNOT_BE_CHANGED' | 'LINKED_METAFIELD_VALUE_MISSING' | 'LINKED_METAFIELDS_CANNOT_BE_REPEATED' | 'LINKED_OPTIONS_NOT_SUPPORTED_FOR_SHOP' | 'MUST_HAVE_SELECTED_OPTION_VALUES' | 'OPTION_NAME_CANNOT_BE_BLANK' | 'OPTION_NOT_FOUND' | 'OPTIONS_MUST_BE_EQUAL_TO_THE_OTHER_COMPONENTS' | 'OPTION_VALUES_CANNOT_BE_BLANK' | 'OPTION_VALUES_CANNOT_BE_EMPTY' | 'PARENT_PRODUCT_MUST_BE_A_COMBINED_LISTING' | 'PRODUCT_IS_ALREADY_A_CHILD' | 'PRODUCT_MEMBERSHIP_NOT_FOUND' | 'PRODUCT_NOT_FOUND' | 'TITLE_TOO_LONG' | 'TOO_MANY_VARIANTS' | 'TOO_MANY_PRODUCTS' | 'UNEXPECTED_ERROR'; };
    'CombinedListingsRole': { name: 'CombinedListingsRole'; enumValues: 'PARENT' | 'CHILD'; };
    'CommentEvent': { kind: 'OBJECT'; name: 'CommentEvent'; fields: { 'appTitle': { name: 'appTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'attachments': { name: 'attachments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CommentEventAttachment'; ofType: null; }; }; }; } }; 'attributeToApp': { name: 'attributeToApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'attributeToUser': { name: 'attributeToUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; }; } }; 'canDelete': { name: 'canDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canEdit': { name: 'canEdit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'criticalAlert': { name: 'criticalAlert'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'edited': { name: 'edited'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'embed': { name: 'embed'; type: { kind: 'UNION'; name: 'CommentEventEmbed'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'FormattedString'; ofType: null; }; } }; 'rawMessage': { name: 'rawMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'subject': { name: 'subject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'CommentEventSubject'; ofType: null; }; } }; }; };
    'CommentEventAttachment': { kind: 'OBJECT'; name: 'CommentEventAttachment'; fields: { 'fileExtension': { name: 'fileExtension'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'CommentEventEmbed': { kind: 'UNION'; name: 'CommentEventEmbed'; fields: {}; possibleTypes: 'Customer' | 'DraftOrder' | 'Order' | 'Product' | 'ProductVariant'; };
    'CommentEventSubject': { kind: 'INTERFACE'; name: 'CommentEventSubject'; fields: { 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'Company' | 'CompanyLocation' | 'Customer' | 'DraftOrder' | 'Order' | 'PriceRule'; };
    'CompaniesDeletePayload': { kind: 'OBJECT'; name: 'CompaniesDeletePayload'; fields: { 'deletedCompanyIds': { name: 'deletedCompanyIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'Company': { kind: 'OBJECT'; name: 'Company'; fields: { 'contactCount': { name: 'contactCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'contactRoles': { name: 'contactRoles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRoleConnection'; ofType: null; }; } }; 'contacts': { name: 'contacts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactConnection'; ofType: null; }; } }; 'contactsCount': { name: 'contactsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customerSince': { name: 'customerSince'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'defaultCursor': { name: 'defaultCursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'defaultRole': { name: 'defaultRole'; type: { kind: 'OBJECT'; name: 'CompanyContactRole'; ofType: null; } }; 'draftOrders': { name: 'draftOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderConnection'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'externalId': { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lifetimeDuration': { name: 'lifetimeDuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'locations': { name: 'locations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyLocationConnection'; ofType: null; }; } }; 'locationsCount': { name: 'locationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'mainContact': { name: 'mainContact'; type: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'ordersCount': { name: 'ordersCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'totalSpent': { name: 'totalSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'CompanyAddress': { kind: 'OBJECT'; name: 'CompanyAddress'; fields: { 'address1': { name: 'address1'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'address2': { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'companyName': { name: 'companyName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'formattedAddress': { name: 'formattedAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'formattedArea': { name: 'formattedArea'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zoneCode': { name: 'zoneCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CompanyAddressDeletePayload': { kind: 'OBJECT'; name: 'CompanyAddressDeletePayload'; fields: { 'deletedAddressId': { name: 'deletedAddressId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyAddressInput': { kind: 'INPUT_OBJECT'; name: 'CompanyAddressInput'; isOneOf: false; inputFields: [{ name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'recipient'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'zoneCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'countryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }]; };
    'CompanyAddressType': { name: 'CompanyAddressType'; enumValues: 'BILLING' | 'SHIPPING'; };
    'CompanyAssignCustomerAsContactPayload': { kind: 'OBJECT'; name: 'CompanyAssignCustomerAsContactPayload'; fields: { 'companyContact': { name: 'companyContact'; type: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyAssignMainContactPayload': { kind: 'OBJECT'; name: 'CompanyAssignMainContactPayload'; fields: { 'company': { name: 'company'; type: { kind: 'OBJECT'; name: 'Company'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyConnection': { kind: 'OBJECT'; name: 'CompanyConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Company'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CompanyContact': { kind: 'OBJECT'; name: 'CompanyContact'; fields: { 'company': { name: 'company'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Company'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customer': { name: 'customer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Customer'; ofType: null; }; } }; 'draftOrders': { name: 'draftOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isMainContact': { name: 'isMainContact'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lifetimeDuration': { name: 'lifetimeDuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'locale': { name: 'locale'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'roleAssignments': { name: 'roleAssignments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRoleAssignmentConnection'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'CompanyContactAssignRolePayload': { kind: 'OBJECT'; name: 'CompanyContactAssignRolePayload'; fields: { 'companyContactRoleAssignment': { name: 'companyContactRoleAssignment'; type: { kind: 'OBJECT'; name: 'CompanyContactRoleAssignment'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyContactAssignRolesPayload': { kind: 'OBJECT'; name: 'CompanyContactAssignRolesPayload'; fields: { 'roleAssignments': { name: 'roleAssignments'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRoleAssignment'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyContactConnection': { kind: 'OBJECT'; name: 'CompanyContactConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CompanyContactCreatePayload': { kind: 'OBJECT'; name: 'CompanyContactCreatePayload'; fields: { 'companyContact': { name: 'companyContact'; type: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyContactDeletePayload': { kind: 'OBJECT'; name: 'CompanyContactDeletePayload'; fields: { 'deletedCompanyContactId': { name: 'deletedCompanyContactId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyContactEdge': { kind: 'OBJECT'; name: 'CompanyContactEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; }; } }; }; };
    'CompanyContactInput': { kind: 'INPUT_OBJECT'; name: 'CompanyContactInput'; isOneOf: false; inputFields: [{ name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'locale'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CompanyContactRemoveFromCompanyPayload': { kind: 'OBJECT'; name: 'CompanyContactRemoveFromCompanyPayload'; fields: { 'removedCompanyContactId': { name: 'removedCompanyContactId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyContactRevokeRolePayload': { kind: 'OBJECT'; name: 'CompanyContactRevokeRolePayload'; fields: { 'revokedCompanyContactRoleAssignmentId': { name: 'revokedCompanyContactRoleAssignmentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyContactRevokeRolesPayload': { kind: 'OBJECT'; name: 'CompanyContactRevokeRolesPayload'; fields: { 'revokedRoleAssignmentIds': { name: 'revokedRoleAssignmentIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyContactRole': { kind: 'OBJECT'; name: 'CompanyContactRole'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CompanyContactRoleAssign': { kind: 'INPUT_OBJECT'; name: 'CompanyContactRoleAssign'; isOneOf: false; inputFields: [{ name: 'companyContactRoleId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'companyLocationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CompanyContactRoleAssignment': { kind: 'OBJECT'; name: 'CompanyContactRoleAssignment'; fields: { 'company': { name: 'company'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Company'; ofType: null; }; } }; 'companyContact': { name: 'companyContact'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; }; } }; 'companyLocation': { name: 'companyLocation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'role': { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRole'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'CompanyContactRoleAssignmentConnection': { kind: 'OBJECT'; name: 'CompanyContactRoleAssignmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRoleAssignmentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRoleAssignment'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CompanyContactRoleAssignmentEdge': { kind: 'OBJECT'; name: 'CompanyContactRoleAssignmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRoleAssignment'; ofType: null; }; } }; }; };
    'CompanyContactRoleAssignmentSortKeys': { name: 'CompanyContactRoleAssignmentSortKeys'; enumValues: 'CREATED_AT' | 'UPDATED_AT' | 'LOCATION_NAME' | 'ID' | 'RELEVANCE'; };
    'CompanyContactRoleConnection': { kind: 'OBJECT'; name: 'CompanyContactRoleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRoleEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRole'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CompanyContactRoleEdge': { kind: 'OBJECT'; name: 'CompanyContactRoleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRole'; ofType: null; }; } }; }; };
    'CompanyContactRoleSortKeys': { name: 'CompanyContactRoleSortKeys'; enumValues: 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'; };
    'CompanyContactSendWelcomeEmailPayload': { kind: 'OBJECT'; name: 'CompanyContactSendWelcomeEmailPayload'; fields: { 'companyContact': { name: 'companyContact'; type: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyContactSortKeys': { name: 'CompanyContactSortKeys'; enumValues: 'CREATED_AT' | 'UPDATED_AT' | 'TITLE' | 'COMPANY_ID' | 'NAME' | 'EMAIL' | 'NAME_EMAIL' | 'ID' | 'RELEVANCE'; };
    'CompanyContactUpdatePayload': { kind: 'OBJECT'; name: 'CompanyContactUpdatePayload'; fields: { 'companyContact': { name: 'companyContact'; type: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyContactsDeletePayload': { kind: 'OBJECT'; name: 'CompanyContactsDeletePayload'; fields: { 'deletedCompanyContactIds': { name: 'deletedCompanyContactIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyCreateInput': { kind: 'INPUT_OBJECT'; name: 'CompanyCreateInput'; isOneOf: false; inputFields: [{ name: 'company'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CompanyInput'; ofType: null; }; }; defaultValue: null }, { name: 'companyContact'; type: { kind: 'INPUT_OBJECT'; name: 'CompanyContactInput'; ofType: null; }; defaultValue: null }, { name: 'companyLocation'; type: { kind: 'INPUT_OBJECT'; name: 'CompanyLocationInput'; ofType: null; }; defaultValue: null }]; };
    'CompanyCreatePayload': { kind: 'OBJECT'; name: 'CompanyCreatePayload'; fields: { 'company': { name: 'company'; type: { kind: 'OBJECT'; name: 'Company'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyDeletePayload': { kind: 'OBJECT'; name: 'CompanyDeletePayload'; fields: { 'deletedCompanyId': { name: 'deletedCompanyId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyEdge': { kind: 'OBJECT'; name: 'CompanyEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Company'; ofType: null; }; } }; }; };
    'CompanyInput': { kind: 'INPUT_OBJECT'; name: 'CompanyInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customerSince'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'CompanyLocation': { kind: 'OBJECT'; name: 'CompanyLocation'; fields: { 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'CompanyAddress'; ofType: null; } }; 'buyerExperienceConfiguration': { name: 'buyerExperienceConfiguration'; type: { kind: 'OBJECT'; name: 'BuyerExperienceConfiguration'; ofType: null; } }; 'catalogs': { name: 'catalogs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CatalogConnection'; ofType: null; }; } }; 'catalogsCount': { name: 'catalogsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'company': { name: 'company'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Company'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'defaultCursor': { name: 'defaultCursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'draftOrders': { name: 'draftOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderConnection'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'externalId': { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inCatalog': { name: 'inCatalog'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'locale': { name: 'locale'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'market': { name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Market'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orderCount': { name: 'orderCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'ordersCount': { name: 'ordersCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'roleAssignments': { name: 'roleAssignments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRoleAssignmentConnection'; ofType: null; }; } }; 'shippingAddress': { name: 'shippingAddress'; type: { kind: 'OBJECT'; name: 'CompanyAddress'; ofType: null; } }; 'taxExemptions': { name: 'taxExemptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxExemption'; ofType: null; }; }; }; } }; 'taxRegistrationId': { name: 'taxRegistrationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalSpent': { name: 'totalSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'CompanyLocationAssignAddressPayload': { kind: 'OBJECT'; name: 'CompanyLocationAssignAddressPayload'; fields: { 'addresses': { name: 'addresses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyAddress'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationAssignRolesPayload': { kind: 'OBJECT'; name: 'CompanyLocationAssignRolesPayload'; fields: { 'roleAssignments': { name: 'roleAssignments'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContactRoleAssignment'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationAssignTaxExemptionsPayload': { kind: 'OBJECT'; name: 'CompanyLocationAssignTaxExemptionsPayload'; fields: { 'companyLocation': { name: 'companyLocation'; type: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationCatalog': { kind: 'OBJECT'; name: 'CompanyLocationCatalog'; fields: { 'companyLocations': { name: 'companyLocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyLocationConnection'; ofType: null; }; } }; 'companyLocationsCount': { name: 'companyLocationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'operations': { name: 'operations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'ResourceOperation'; ofType: null; }; }; }; } }; 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'publication': { name: 'publication'; type: { kind: 'OBJECT'; name: 'Publication'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CatalogStatus'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CompanyLocationConnection': { kind: 'OBJECT'; name: 'CompanyLocationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyLocationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CompanyLocationCreatePayload': { kind: 'OBJECT'; name: 'CompanyLocationCreatePayload'; fields: { 'companyLocation': { name: 'companyLocation'; type: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationCreateTaxRegistrationPayload': { kind: 'OBJECT'; name: 'CompanyLocationCreateTaxRegistrationPayload'; fields: { 'companyLocation': { name: 'companyLocation'; type: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationDeletePayload': { kind: 'OBJECT'; name: 'CompanyLocationDeletePayload'; fields: { 'deletedCompanyLocationId': { name: 'deletedCompanyLocationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationEdge': { kind: 'OBJECT'; name: 'CompanyLocationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; }; } }; }; };
    'CompanyLocationInput': { kind: 'INPUT_OBJECT'; name: 'CompanyLocationInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'locale'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'buyerExperienceConfiguration'; type: { kind: 'INPUT_OBJECT'; name: 'BuyerExperienceConfigurationInput'; ofType: null; }; defaultValue: null }, { name: 'billingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'CompanyAddressInput'; ofType: null; }; defaultValue: null }, { name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'CompanyAddressInput'; ofType: null; }; defaultValue: null }, { name: 'billingSameAsShipping'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'taxRegistrationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'taxExemptions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxExemption'; ofType: null; }; }; }; defaultValue: null }]; };
    'CompanyLocationRevokeRolesPayload': { kind: 'OBJECT'; name: 'CompanyLocationRevokeRolesPayload'; fields: { 'revokedRoleAssignmentIds': { name: 'revokedRoleAssignmentIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationRevokeTaxExemptionsPayload': { kind: 'OBJECT'; name: 'CompanyLocationRevokeTaxExemptionsPayload'; fields: { 'companyLocation': { name: 'companyLocation'; type: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationRevokeTaxRegistrationPayload': { kind: 'OBJECT'; name: 'CompanyLocationRevokeTaxRegistrationPayload'; fields: { 'companyLocation': { name: 'companyLocation'; type: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationRoleAssign': { kind: 'INPUT_OBJECT'; name: 'CompanyLocationRoleAssign'; isOneOf: false; inputFields: [{ name: 'companyContactRoleId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'companyContactId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CompanyLocationSortKeys': { name: 'CompanyLocationSortKeys'; enumValues: 'CREATED_AT' | 'UPDATED_AT' | 'NAME' | 'COMPANY_ID' | 'COMPANY_AND_LOCATION_NAME' | 'ID' | 'RELEVANCE'; };
    'CompanyLocationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CompanyLocationUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'locale'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'buyerExperienceConfiguration'; type: { kind: 'INPUT_OBJECT'; name: 'BuyerExperienceConfigurationInput'; ofType: null; }; defaultValue: null }]; };
    'CompanyLocationUpdatePayload': { kind: 'OBJECT'; name: 'CompanyLocationUpdatePayload'; fields: { 'companyLocation': { name: 'companyLocation'; type: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyLocationsDeletePayload': { kind: 'OBJECT'; name: 'CompanyLocationsDeletePayload'; fields: { 'deletedCompanyLocationIds': { name: 'deletedCompanyLocationIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanyRevokeMainContactPayload': { kind: 'OBJECT'; name: 'CompanyRevokeMainContactPayload'; fields: { 'company': { name: 'company'; type: { kind: 'OBJECT'; name: 'Company'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'CompanySortKeys': { name: 'CompanySortKeys'; enumValues: 'CREATED_AT' | 'UPDATED_AT' | 'SINCE_DATE' | 'NAME' | 'ORDER_COUNT' | 'TOTAL_SPENT' | 'ID' | 'RELEVANCE'; };
    'CompanyUpdatePayload': { kind: 'OBJECT'; name: 'CompanyUpdatePayload'; fields: { 'company': { name: 'company'; type: { kind: 'OBJECT'; name: 'Company'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BusinessCustomerUserError'; ofType: null; }; }; }; } }; }; };
    'ContextualPricingContext': { kind: 'INPUT_OBJECT'; name: 'ContextualPricingContext'; isOneOf: false; inputFields: [{ name: 'country'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }, { name: 'companyLocationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'ContextualPublicationContext': { kind: 'INPUT_OBJECT'; name: 'ContextualPublicationContext'; isOneOf: false; inputFields: [{ name: 'country'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }, { name: 'companyLocationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'Count': { kind: 'OBJECT'; name: 'Count'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'precision': { name: 'precision'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountPrecision'; ofType: null; }; } }; }; };
    'CountPrecision': { name: 'CountPrecision'; enumValues: 'EXACT' | 'AT_LEAST'; };
    'CountriesInShippingZones': { kind: 'OBJECT'; name: 'CountriesInShippingZones'; fields: { 'countryCodes': { name: 'countryCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; } }; 'includeRestOfWorld': { name: 'includeRestOfWorld'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CountryCode': { name: 'CountryCode'; enumValues: 'AF' | 'AX' | 'AL' | 'DZ' | 'AD' | 'AO' | 'AI' | 'AG' | 'AR' | 'AM' | 'AW' | 'AC' | 'AU' | 'AT' | 'AZ' | 'BS' | 'BH' | 'BD' | 'BB' | 'BY' | 'BE' | 'BZ' | 'BJ' | 'BM' | 'BT' | 'BO' | 'BA' | 'BW' | 'BV' | 'BR' | 'IO' | 'BN' | 'BG' | 'BF' | 'BI' | 'KH' | 'CA' | 'CV' | 'BQ' | 'KY' | 'CF' | 'TD' | 'CL' | 'CN' | 'CX' | 'CC' | 'CO' | 'KM' | 'CG' | 'CD' | 'CK' | 'CR' | 'HR' | 'CU' | 'CW' | 'CY' | 'CZ' | 'CI' | 'DK' | 'DJ' | 'DM' | 'DO' | 'EC' | 'EG' | 'SV' | 'GQ' | 'ER' | 'EE' | 'SZ' | 'ET' | 'FK' | 'FO' | 'FJ' | 'FI' | 'FR' | 'GF' | 'PF' | 'TF' | 'GA' | 'GM' | 'GE' | 'DE' | 'GH' | 'GI' | 'GR' | 'GL' | 'GD' | 'GP' | 'GT' | 'GG' | 'GN' | 'GW' | 'GY' | 'HT' | 'HM' | 'VA' | 'HN' | 'HK' | 'HU' | 'IS' | 'IN' | 'ID' | 'IR' | 'IQ' | 'IE' | 'IM' | 'IL' | 'IT' | 'JM' | 'JP' | 'JE' | 'JO' | 'KZ' | 'KE' | 'KI' | 'KP' | 'XK' | 'KW' | 'KG' | 'LA' | 'LV' | 'LB' | 'LS' | 'LR' | 'LY' | 'LI' | 'LT' | 'LU' | 'MO' | 'MG' | 'MW' | 'MY' | 'MV' | 'ML' | 'MT' | 'MQ' | 'MR' | 'MU' | 'YT' | 'MX' | 'MD' | 'MC' | 'MN' | 'ME' | 'MS' | 'MA' | 'MZ' | 'MM' | 'NA' | 'NR' | 'NP' | 'NL' | 'AN' | 'NC' | 'NZ' | 'NI' | 'NE' | 'NG' | 'NU' | 'NF' | 'MK' | 'NO' | 'OM' | 'PK' | 'PS' | 'PA' | 'PG' | 'PY' | 'PE' | 'PH' | 'PN' | 'PL' | 'PT' | 'QA' | 'CM' | 'RE' | 'RO' | 'RU' | 'RW' | 'BL' | 'SH' | 'KN' | 'LC' | 'MF' | 'PM' | 'WS' | 'SM' | 'ST' | 'SA' | 'SN' | 'RS' | 'SC' | 'SL' | 'SG' | 'SX' | 'SK' | 'SI' | 'SB' | 'SO' | 'ZA' | 'GS' | 'KR' | 'SS' | 'ES' | 'LK' | 'VC' | 'SD' | 'SR' | 'SJ' | 'SE' | 'CH' | 'SY' | 'TW' | 'TJ' | 'TZ' | 'TH' | 'TL' | 'TG' | 'TK' | 'TO' | 'TT' | 'TA' | 'TN' | 'TR' | 'TM' | 'TC' | 'TV' | 'UG' | 'UA' | 'AE' | 'GB' | 'US' | 'UM' | 'UY' | 'UZ' | 'VU' | 'VE' | 'VN' | 'VG' | 'WF' | 'EH' | 'YE' | 'ZM' | 'ZW' | 'ZZ'; };
    'CountryHarmonizedSystemCode': { kind: 'OBJECT'; name: 'CountryHarmonizedSystemCode'; fields: { 'countryCode': { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; } }; 'harmonizedSystemCode': { name: 'harmonizedSystemCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CountryHarmonizedSystemCodeConnection': { kind: 'OBJECT'; name: 'CountryHarmonizedSystemCodeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryHarmonizedSystemCodeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryHarmonizedSystemCode'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CountryHarmonizedSystemCodeEdge': { kind: 'OBJECT'; name: 'CountryHarmonizedSystemCodeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryHarmonizedSystemCode'; ofType: null; }; } }; }; };
    'CountryHarmonizedSystemCodeInput': { kind: 'INPUT_OBJECT'; name: 'CountryHarmonizedSystemCodeInput'; isOneOf: false; inputFields: [{ name: 'harmonizedSystemCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; defaultValue: null }]; };
    'CreateMediaInput': { kind: 'INPUT_OBJECT'; name: 'CreateMediaInput'; isOneOf: false; inputFields: [{ name: 'originalSource'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'mediaContentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaContentType'; ofType: null; }; }; defaultValue: null }]; };
    'CropRegion': { name: 'CropRegion'; enumValues: 'CENTER' | 'TOP' | 'BOTTOM' | 'LEFT' | 'RIGHT'; };
    'CurrencyCode': { name: 'CurrencyCode'; enumValues: 'USD' | 'EUR' | 'GBP' | 'CAD' | 'AFN' | 'ALL' | 'DZD' | 'AOA' | 'ARS' | 'AMD' | 'AWG' | 'AUD' | 'BBD' | 'AZN' | 'BDT' | 'BSD' | 'BHD' | 'BIF' | 'BYN' | 'BZD' | 'BMD' | 'BTN' | 'BAM' | 'BRL' | 'BOB' | 'BWP' | 'BND' | 'BGN' | 'MMK' | 'KHR' | 'CVE' | 'KYD' | 'XAF' | 'CLP' | 'CNY' | 'COP' | 'KMF' | 'CDF' | 'CRC' | 'HRK' | 'CZK' | 'DKK' | 'DJF' | 'DOP' | 'XCD' | 'EGP' | 'ERN' | 'ETB' | 'FKP' | 'XPF' | 'FJD' | 'GIP' | 'GMD' | 'GHS' | 'GTQ' | 'GYD' | 'GEL' | 'GNF' | 'HTG' | 'HNL' | 'HKD' | 'HUF' | 'ISK' | 'INR' | 'IDR' | 'ILS' | 'IRR' | 'IQD' | 'JMD' | 'JPY' | 'JEP' | 'JOD' | 'KZT' | 'KES' | 'KID' | 'KWD' | 'KGS' | 'LAK' | 'LVL' | 'LBP' | 'LSL' | 'LRD' | 'LYD' | 'LTL' | 'MGA' | 'MKD' | 'MOP' | 'MWK' | 'MVR' | 'MRU' | 'MXN' | 'MYR' | 'MUR' | 'MDL' | 'MAD' | 'MNT' | 'MZN' | 'NAD' | 'NPR' | 'ANG' | 'NZD' | 'NIO' | 'NGN' | 'NOK' | 'OMR' | 'PAB' | 'PKR' | 'PGK' | 'PYG' | 'PEN' | 'PHP' | 'PLN' | 'QAR' | 'RON' | 'RUB' | 'RWF' | 'WST' | 'SHP' | 'SAR' | 'RSD' | 'SCR' | 'SLL' | 'SGD' | 'SDG' | 'SOS' | 'SYP' | 'ZAR' | 'KRW' | 'SSP' | 'SBD' | 'LKR' | 'SRD' | 'SZL' | 'SEK' | 'CHF' | 'TWD' | 'THB' | 'TJS' | 'TZS' | 'TOP' | 'TTD' | 'TND' | 'TRY' | 'TMT' | 'UGX' | 'UAH' | 'AED' | 'UYU' | 'UZS' | 'VUV' | 'VES' | 'VND' | 'XOF' | 'YER' | 'ZMW' | 'BYR' | 'STD' | 'STN' | 'VED' | 'VEF' | 'XXX'; };
    'CurrencyFormats': { kind: 'OBJECT'; name: 'CurrencyFormats'; fields: { 'moneyFormat': { name: 'moneyFormat'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'FormattedString'; ofType: null; }; } }; 'moneyInEmailsFormat': { name: 'moneyInEmailsFormat'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'moneyWithCurrencyFormat': { name: 'moneyWithCurrencyFormat'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'FormattedString'; ofType: null; }; } }; 'moneyWithCurrencyInEmailsFormat': { name: 'moneyWithCurrencyInEmailsFormat'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CurrencySetting': { kind: 'OBJECT'; name: 'CurrencySetting'; fields: { 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'currencyName': { name: 'currencyName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'rateUpdatedAt': { name: 'rateUpdatedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; }; };
    'CurrencySettingConnection': { kind: 'OBJECT'; name: 'CurrencySettingConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CurrencySettingEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CurrencySetting'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CurrencySettingEdge': { kind: 'OBJECT'; name: 'CurrencySettingEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CurrencySetting'; ofType: null; }; } }; }; };
    'CustomShippingPackageInput': { kind: 'INPUT_OBJECT'; name: 'CustomShippingPackageInput'; isOneOf: false; inputFields: [{ name: 'weight'; type: { kind: 'INPUT_OBJECT'; name: 'WeightInput'; ofType: null; }; defaultValue: null }, { name: 'dimensions'; type: { kind: 'INPUT_OBJECT'; name: 'ObjectDimensionsInput'; ofType: null; }; defaultValue: null }, { name: 'default'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'ShippingPackageType'; ofType: null; }; defaultValue: null }]; };
    'Customer': { kind: 'OBJECT'; name: 'Customer'; fields: { 'addresses': { name: 'addresses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; }; }; }; } }; 'amountSpent': { name: 'amountSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'canDelete': { name: 'canDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'companyContactProfiles': { name: 'companyContactProfiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; }; }; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'dataSaleOptOut': { name: 'dataSaleOptOut'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'defaultAddress': { name: 'defaultAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'displayName': { name: 'displayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emailMarketingConsent': { name: 'emailMarketingConsent'; type: { kind: 'OBJECT'; name: 'CustomerEmailMarketingConsentState'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastOrder': { name: 'lastOrder'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'lifetimeDuration': { name: 'lifetimeDuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'locale': { name: 'locale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'mergeable': { name: 'mergeable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerMergeable'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'multipassIdentifier': { name: 'multipassIdentifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'numberOfOrders': { name: 'numberOfOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'paymentMethods': { name: 'paymentMethods'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethodConnection'; ofType: null; }; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'productSubscriberStatus': { name: 'productSubscriberStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerProductSubscriberStatus'; ofType: null; }; } }; 'smsMarketingConsent': { name: 'smsMarketingConsent'; type: { kind: 'OBJECT'; name: 'CustomerSmsMarketingConsentState'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerState'; ofType: null; }; } }; 'statistics': { name: 'statistics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerStatistics'; ofType: null; }; } }; 'storeCreditAccounts': { name: 'storeCreditAccounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccountConnection'; ofType: null; }; } }; 'subscriptionContracts': { name: 'subscriptionContracts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractConnection'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'taxExempt': { name: 'taxExempt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'taxExemptions': { name: 'taxExemptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxExemption'; ofType: null; }; }; }; } }; 'unsubscribeUrl': { name: 'unsubscribeUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'validEmailAddress': { name: 'validEmailAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'verifiedEmail': { name: 'verifiedEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CustomerAccountsV2': { kind: 'OBJECT'; name: 'CustomerAccountsV2'; fields: { 'customerAccountsVersion': { name: 'customerAccountsVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerAccountsVersion'; ofType: null; }; } }; 'loginLinksVisibleOnStorefrontAndCheckout': { name: 'loginLinksVisibleOnStorefrontAndCheckout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'loginRequiredAtCheckout': { name: 'loginRequiredAtCheckout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; };
    'CustomerAccountsVersion': { name: 'CustomerAccountsVersion'; enumValues: 'CLASSIC' | 'NEW_CUSTOMER_ACCOUNTS'; };
    'CustomerAddTaxExemptionsPayload': { kind: 'OBJECT'; name: 'CustomerAddTaxExemptionsPayload'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerCancelDataErasureErrorCode': { name: 'CustomerCancelDataErasureErrorCode'; enumValues: 'DOES_NOT_EXIST' | 'FAILED_TO_CANCEL' | 'NOT_BEING_ERASED'; };
    'CustomerCancelDataErasurePayload': { kind: 'OBJECT'; name: 'CustomerCancelDataErasurePayload'; fields: { 'customerId': { name: 'customerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerCancelDataErasureUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerCancelDataErasureUserError': { kind: 'OBJECT'; name: 'CustomerCancelDataErasureUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerCancelDataErasureErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerConnection': { kind: 'OBJECT'; name: 'CustomerConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Customer'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomerConsentCollectedFrom': { name: 'CustomerConsentCollectedFrom'; enumValues: 'SHOPIFY' | 'OTHER'; };
    'CustomerCreatePayload': { kind: 'OBJECT'; name: 'CustomerCreatePayload'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerCreditCard': { kind: 'OBJECT'; name: 'CustomerCreditCard'; fields: { 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'CustomerCreditCardBillingAddress'; ofType: null; } }; 'brand': { name: 'brand'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'expiresSoon': { name: 'expiresSoon'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'expiryMonth': { name: 'expiryMonth'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'expiryYear': { name: 'expiryYear'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'firstDigits': { name: 'firstDigits'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isRevocable': { name: 'isRevocable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lastDigits': { name: 'lastDigits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'maskedNumber': { name: 'maskedNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'source': { name: 'source'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'virtualLastDigits': { name: 'virtualLastDigits'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CustomerCreditCardBillingAddress': { kind: 'OBJECT'; name: 'CustomerCreditCardBillingAddress'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provinceCode': { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CustomerDeleteInput': { kind: 'INPUT_OBJECT'; name: 'CustomerDeleteInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CustomerDeletePayload': { kind: 'OBJECT'; name: 'CustomerDeletePayload'; fields: { 'deletedCustomerId': { name: 'deletedCustomerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerEdge': { kind: 'OBJECT'; name: 'CustomerEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Customer'; ofType: null; }; } }; }; };
    'CustomerEmailAddress': { kind: 'OBJECT'; name: 'CustomerEmailAddress'; fields: { 'emailAddress': { name: 'emailAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'marketingState': { name: 'marketingState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerEmailAddressMarketingState'; ofType: null; }; } }; 'marketingUnsubscribeUrl': { name: 'marketingUnsubscribeUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'openTrackingLevel': { name: 'openTrackingLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerEmailAddressOpenTrackingLevel'; ofType: null; }; } }; 'openTrackingUrl': { name: 'openTrackingUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'CustomerEmailAddressMarketingState': { name: 'CustomerEmailAddressMarketingState'; enumValues: 'INVALID' | 'NOT_SUBSCRIBED' | 'PENDING' | 'SUBSCRIBED' | 'UNSUBSCRIBED'; };
    'CustomerEmailAddressOpenTrackingLevel': { name: 'CustomerEmailAddressOpenTrackingLevel'; enumValues: 'UNKNOWN' | 'OPTED_IN' | 'OPTED_OUT'; };
    'CustomerEmailMarketingConsentInput': { kind: 'INPUT_OBJECT'; name: 'CustomerEmailMarketingConsentInput'; isOneOf: false; inputFields: [{ name: 'marketingOptInLevel'; type: { kind: 'ENUM'; name: 'CustomerMarketingOptInLevel'; ofType: null; }; defaultValue: null }, { name: 'marketingState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerEmailMarketingState'; ofType: null; }; }; defaultValue: null }, { name: 'consentUpdatedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'CustomerEmailMarketingConsentState': { kind: 'OBJECT'; name: 'CustomerEmailMarketingConsentState'; fields: { 'consentUpdatedAt': { name: 'consentUpdatedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'marketingOptInLevel': { name: 'marketingOptInLevel'; type: { kind: 'ENUM'; name: 'CustomerMarketingOptInLevel'; ofType: null; } }; 'marketingState': { name: 'marketingState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerEmailMarketingState'; ofType: null; }; } }; }; };
    'CustomerEmailMarketingConsentUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CustomerEmailMarketingConsentUpdateInput'; isOneOf: false; inputFields: [{ name: 'customerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'emailMarketingConsent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CustomerEmailMarketingConsentInput'; ofType: null; }; }; defaultValue: null }]; };
    'CustomerEmailMarketingConsentUpdatePayload': { kind: 'OBJECT'; name: 'CustomerEmailMarketingConsentUpdatePayload'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerEmailMarketingConsentUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerEmailMarketingConsentUpdateUserError': { kind: 'OBJECT'; name: 'CustomerEmailMarketingConsentUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerEmailMarketingConsentUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerEmailMarketingConsentUpdateUserErrorCode': { name: 'CustomerEmailMarketingConsentUpdateUserErrorCode'; enumValues: 'INVALID' | 'INCLUSION' | 'INTERNAL_ERROR' | 'MISSING_ARGUMENT'; };
    'CustomerEmailMarketingState': { name: 'CustomerEmailMarketingState'; enumValues: 'NOT_SUBSCRIBED' | 'PENDING' | 'SUBSCRIBED' | 'UNSUBSCRIBED' | 'REDACTED' | 'INVALID'; };
    'CustomerGenerateAccountActivationUrlPayload': { kind: 'OBJECT'; name: 'CustomerGenerateAccountActivationUrlPayload'; fields: { 'accountActivationUrl': { name: 'accountActivationUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerInput': { kind: 'INPUT_OBJECT'; name: 'CustomerInput'; isOneOf: false; inputFields: [{ name: 'addresses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MailingAddressInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'locale'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'privateMetafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'emailMarketingConsent'; type: { kind: 'INPUT_OBJECT'; name: 'CustomerEmailMarketingConsentInput'; ofType: null; }; defaultValue: null }, { name: 'smsMarketingConsent'; type: { kind: 'INPUT_OBJECT'; name: 'CustomerSmsMarketingConsentInput'; ofType: null; }; defaultValue: null }, { name: 'taxExempt'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'taxExemptions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxExemption'; ofType: null; }; }; }; defaultValue: null }]; };
    'CustomerJourney': { kind: 'OBJECT'; name: 'CustomerJourney'; fields: { 'customerOrderIndex': { name: 'customerOrderIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'daysToConversion': { name: 'daysToConversion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'firstVisit': { name: 'firstVisit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerVisit'; ofType: null; }; } }; 'lastVisit': { name: 'lastVisit'; type: { kind: 'OBJECT'; name: 'CustomerVisit'; ofType: null; } }; 'moments': { name: 'moments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'CustomerMoment'; ofType: null; }; }; }; } }; }; };
    'CustomerJourneySummary': { kind: 'OBJECT'; name: 'CustomerJourneySummary'; fields: { 'customerOrderIndex': { name: 'customerOrderIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'daysToConversion': { name: 'daysToConversion'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'firstVisit': { name: 'firstVisit'; type: { kind: 'OBJECT'; name: 'CustomerVisit'; ofType: null; } }; 'lastVisit': { name: 'lastVisit'; type: { kind: 'OBJECT'; name: 'CustomerVisit'; ofType: null; } }; 'moments': { name: 'moments'; type: { kind: 'OBJECT'; name: 'CustomerMomentConnection'; ofType: null; } }; 'momentsCount': { name: 'momentsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'ready': { name: 'ready'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CustomerMarketingOptInLevel': { name: 'CustomerMarketingOptInLevel'; enumValues: 'SINGLE_OPT_IN' | 'CONFIRMED_OPT_IN' | 'UNKNOWN'; };
    'CustomerMergeError': { kind: 'OBJECT'; name: 'CustomerMergeError'; fields: { 'errorFields': { name: 'errorFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerMergeErrorFieldType'; ofType: null; }; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerMergeErrorCode': { name: 'CustomerMergeErrorCode'; enumValues: 'INTERNAL_ERROR' | 'INVALID_CUSTOMER' | 'INVALID_CUSTOMER_ID' | 'CUSTOMER_HAS_GIFT_CARDS' | 'MISSING_OVERRIDE_ATTRIBUTE' | 'OVERRIDE_ATTRIBUTE_INVALID'; };
    'CustomerMergeErrorFieldType': { name: 'CustomerMergeErrorFieldType'; enumValues: 'DELETED_AT' | 'REDACTED_AT' | 'SUBSCRIPTIONS' | 'MERGE_IN_PROGRESS' | 'GIFT_CARDS' | 'STORE_CREDIT' | 'COMPANY_CONTACT' | 'CUSTOMER_PAYMENT_METHODS' | 'PENDING_DATA_REQUEST' | 'MULTIPASS_IDENTIFIER'; };
    'CustomerMergeOverrideFields': { kind: 'INPUT_OBJECT'; name: 'CustomerMergeOverrideFields'; isOneOf: false; inputFields: [{ name: 'customerIdOfFirstNameToKeep'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'customerIdOfLastNameToKeep'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'customerIdOfEmailToKeep'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'customerIdOfPhoneNumberToKeep'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'customerIdOfDefaultAddressToKeep'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'CustomerMergePayload': { kind: 'OBJECT'; name: 'CustomerMergePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'resultingCustomerId': { name: 'resultingCustomerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerMergeUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerMergePreview': { kind: 'OBJECT'; name: 'CustomerMergePreview'; fields: { 'alternateFields': { name: 'alternateFields'; type: { kind: 'OBJECT'; name: 'CustomerMergePreviewAlternateFields'; ofType: null; } }; 'blockingFields': { name: 'blockingFields'; type: { kind: 'OBJECT'; name: 'CustomerMergePreviewBlockingFields'; ofType: null; } }; 'customerMergeErrors': { name: 'customerMergeErrors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerMergeError'; ofType: null; }; }; } }; 'defaultFields': { name: 'defaultFields'; type: { kind: 'OBJECT'; name: 'CustomerMergePreviewDefaultFields'; ofType: null; } }; 'resultingCustomerId': { name: 'resultingCustomerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'CustomerMergePreviewAlternateFields': { kind: 'OBJECT'; name: 'CustomerMergePreviewAlternateFields'; fields: { 'defaultAddress': { name: 'defaultAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'OBJECT'; name: 'CustomerEmailAddress'; ofType: null; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phoneNumber': { name: 'phoneNumber'; type: { kind: 'OBJECT'; name: 'CustomerPhoneNumber'; ofType: null; } }; }; };
    'CustomerMergePreviewBlockingFields': { kind: 'OBJECT'; name: 'CustomerMergePreviewBlockingFields'; fields: { 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CustomerMergePreviewDefaultFields': { kind: 'OBJECT'; name: 'CustomerMergePreviewDefaultFields'; fields: { 'addresses': { name: 'addresses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MailingAddressConnection'; ofType: null; }; } }; 'defaultAddress': { name: 'defaultAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'discountNodeCount': { name: 'discountNodeCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'discountNodes': { name: 'discountNodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountNodeConnection'; ofType: null; }; } }; 'displayName': { name: 'displayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'draftOrderCount': { name: 'draftOrderCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'draftOrders': { name: 'draftOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderConnection'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'OBJECT'; name: 'CustomerEmailAddress'; ofType: null; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'giftCardCount': { name: 'giftCardCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'giftCards': { name: 'giftCards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardConnection'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafieldCount': { name: 'metafieldCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orderCount': { name: 'orderCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'phoneNumber': { name: 'phoneNumber'; type: { kind: 'OBJECT'; name: 'CustomerPhoneNumber'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CustomerMergeRequest': { kind: 'OBJECT'; name: 'CustomerMergeRequest'; fields: { 'customerMergeErrors': { name: 'customerMergeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerMergeError'; ofType: null; }; }; }; } }; 'jobId': { name: 'jobId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'resultingCustomerId': { name: 'resultingCustomerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerMergeRequestStatus'; ofType: null; }; } }; }; };
    'CustomerMergeRequestStatus': { name: 'CustomerMergeRequestStatus'; enumValues: 'REQUESTED' | 'IN_PROGRESS' | 'COMPLETED' | 'FAILED'; };
    'CustomerMergeUserError': { kind: 'OBJECT'; name: 'CustomerMergeUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerMergeErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerMergeable': { kind: 'OBJECT'; name: 'CustomerMergeable'; fields: { 'errorFields': { name: 'errorFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerMergeErrorFieldType'; ofType: null; }; }; }; } }; 'isMergeable': { name: 'isMergeable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mergeInProgress': { name: 'mergeInProgress'; type: { kind: 'OBJECT'; name: 'CustomerMergeRequest'; ofType: null; } }; 'reason': { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CustomerMoment': { kind: 'INTERFACE'; name: 'CustomerMoment'; fields: { 'occurredAt': { name: 'occurredAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; possibleTypes: 'CustomerVisit'; };
    'CustomerMomentConnection': { kind: 'OBJECT'; name: 'CustomerMomentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerMomentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'CustomerMoment'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomerMomentEdge': { kind: 'OBJECT'; name: 'CustomerMomentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'CustomerMoment'; ofType: null; }; } }; }; };
    'CustomerPaymentInstrument': { kind: 'UNION'; name: 'CustomerPaymentInstrument'; fields: {}; possibleTypes: 'CustomerCreditCard' | 'CustomerPaypalBillingAgreement' | 'CustomerShopPayAgreement'; };
    'CustomerPaymentInstrumentBillingAddress': { kind: 'OBJECT'; name: 'CustomerPaymentInstrumentBillingAddress'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provinceCode': { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CustomerPaymentMethod': { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'instrument': { name: 'instrument'; type: { kind: 'UNION'; name: 'CustomerPaymentInstrument'; ofType: null; } }; 'revokedAt': { name: 'revokedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'revokedReason': { name: 'revokedReason'; type: { kind: 'ENUM'; name: 'CustomerPaymentMethodRevocationReason'; ofType: null; } }; 'subscriptionContracts': { name: 'subscriptionContracts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractConnection'; ofType: null; }; } }; }; };
    'CustomerPaymentMethodConnection': { kind: 'OBJECT'; name: 'CustomerPaymentMethodConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethodEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomerPaymentMethodCreateFromDuplicationDataPayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodCreateFromDuplicationDataPayload'; fields: { 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethodCreateFromDuplicationDataUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodCreateFromDuplicationDataUserError': { kind: 'OBJECT'; name: 'CustomerPaymentMethodCreateFromDuplicationDataUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerPaymentMethodCreateFromDuplicationDataUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerPaymentMethodCreateFromDuplicationDataUserErrorCode': { name: 'CustomerPaymentMethodCreateFromDuplicationDataUserErrorCode'; enumValues: 'TOO_MANY_REQUESTS' | 'CUSTOMER_DOES_NOT_EXIST' | 'INVALID_ENCRYPTED_DUPLICATION_DATA'; };
    'CustomerPaymentMethodCreditCardCreatePayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodCreditCardCreatePayload'; fields: { 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'processing': { name: 'processing'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodCreditCardUpdatePayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodCreditCardUpdatePayload'; fields: { 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'processing': { name: 'processing'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodEdge': { kind: 'OBJECT'; name: 'CustomerPaymentMethodEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; }; } }; }; };
    'CustomerPaymentMethodGetDuplicationDataPayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodGetDuplicationDataPayload'; fields: { 'encryptedDuplicationData': { name: 'encryptedDuplicationData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethodGetDuplicationDataUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodGetDuplicationDataUserError': { kind: 'OBJECT'; name: 'CustomerPaymentMethodGetDuplicationDataUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerPaymentMethodGetDuplicationDataUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerPaymentMethodGetDuplicationDataUserErrorCode': { name: 'CustomerPaymentMethodGetDuplicationDataUserErrorCode'; enumValues: 'PAYMENT_METHOD_DOES_NOT_EXIST' | 'INVALID_INSTRUMENT' | 'TOO_MANY_REQUESTS' | 'CUSTOMER_DOES_NOT_EXIST' | 'SAME_SHOP' | 'INVALID_ORGANIZATION_SHOP'; };
    'CustomerPaymentMethodGetUpdateUrlPayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodGetUpdateUrlPayload'; fields: { 'updatePaymentMethodUrl': { name: 'updatePaymentMethodUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethodGetUpdateUrlUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodGetUpdateUrlUserError': { kind: 'OBJECT'; name: 'CustomerPaymentMethodGetUpdateUrlUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerPaymentMethodGetUpdateUrlUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerPaymentMethodGetUpdateUrlUserErrorCode': { name: 'CustomerPaymentMethodGetUpdateUrlUserErrorCode'; enumValues: 'PAYMENT_METHOD_DOES_NOT_EXIST' | 'INVALID_INSTRUMENT' | 'TOO_MANY_REQUESTS' | 'CUSTOMER_DOES_NOT_EXIST'; };
    'CustomerPaymentMethodPaypalBillingAgreementCreatePayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodPaypalBillingAgreementCreatePayload'; fields: { 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethodUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodPaypalBillingAgreementUpdatePayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodPaypalBillingAgreementUpdatePayload'; fields: { 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethodUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodRemoteCreatePayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodRemoteCreatePayload'; fields: { 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethodRemoteUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodRemoteCreditCardCreatePayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodRemoteCreditCardCreatePayload'; fields: { 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerPaymentMethodUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodRemoteInput': { kind: 'INPUT_OBJECT'; name: 'CustomerPaymentMethodRemoteInput'; isOneOf: false; inputFields: [{ name: 'stripePaymentMethod'; type: { kind: 'INPUT_OBJECT'; name: 'RemoteStripePaymentMethodInput'; ofType: null; }; defaultValue: null }, { name: 'authorizeNetCustomerPaymentProfile'; type: { kind: 'INPUT_OBJECT'; name: 'RemoteAuthorizeNetCustomerPaymentProfileInput'; ofType: null; }; defaultValue: null }, { name: 'braintreePaymentMethod'; type: { kind: 'INPUT_OBJECT'; name: 'RemoteBraintreePaymentMethodInput'; ofType: null; }; defaultValue: null }]; };
    'CustomerPaymentMethodRemoteUserError': { kind: 'OBJECT'; name: 'CustomerPaymentMethodRemoteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerPaymentMethodRemoteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerPaymentMethodRemoteUserErrorCode': { name: 'CustomerPaymentMethodRemoteUserErrorCode'; enumValues: 'INVALID' | 'PRESENT' | 'TAKEN' | 'EXACTLY_ONE_REMOTE_REFERENCE_REQUIRED' | 'AUTHORIZE_NET_NOT_ENABLED_FOR_SUBSCRIPTIONS' | 'BRAINTREE_NOT_ENABLED_FOR_SUBSCRIPTIONS'; };
    'CustomerPaymentMethodRevocationReason': { name: 'CustomerPaymentMethodRevocationReason'; enumValues: 'AUTHORIZE_NET_GATEWAY_NOT_ENABLED' | 'AUTHORIZE_NET_RETURNED_NO_PAYMENT_METHOD' | 'FAILED_TO_UPDATE_CREDIT_CARD' | 'STRIPE_API_AUTHENTICATION_ERROR' | 'STRIPE_API_INVALID_REQUEST_ERROR' | 'STRIPE_GATEWAY_NOT_ENABLED' | 'STRIPE_RETURNED_NO_PAYMENT_METHOD' | 'STRIPE_PAYMENT_METHOD_NOT_CARD' | 'BRAINTREE_API_AUTHENTICATION_ERROR' | 'BRAINTREE_GATEWAY_NOT_ENABLED' | 'BRAINTREE_RETURNED_NO_PAYMENT_METHOD' | 'BRAINTREE_PAYMENT_METHOD_NOT_CARD' | 'MANUALLY_REVOKED' | 'MERGED'; };
    'CustomerPaymentMethodRevokePayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodRevokePayload'; fields: { 'revokedCustomerPaymentMethodId': { name: 'revokedCustomerPaymentMethodId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodSendUpdateEmailPayload': { kind: 'OBJECT'; name: 'CustomerPaymentMethodSendUpdateEmailPayload'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerPaymentMethodUserError': { kind: 'OBJECT'; name: 'CustomerPaymentMethodUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerPaymentMethodUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerPaymentMethodUserErrorCode': { name: 'CustomerPaymentMethodUserErrorCode'; enumValues: 'INVALID' | 'PRESENT' | 'TAKEN'; };
    'CustomerPaypalBillingAgreement': { kind: 'OBJECT'; name: 'CustomerPaypalBillingAgreement'; fields: { 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'CustomerPaymentInstrumentBillingAddress'; ofType: null; } }; 'inactive': { name: 'inactive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isRevocable': { name: 'isRevocable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'paypalAccountEmail': { name: 'paypalAccountEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CustomerPhoneNumber': { kind: 'OBJECT'; name: 'CustomerPhoneNumber'; fields: { 'marketingState': { name: 'marketingState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerSmsMarketingState'; ofType: null; }; } }; 'phoneNumber': { name: 'phoneNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerPredictedSpendTier': { name: 'CustomerPredictedSpendTier'; enumValues: 'HIGH' | 'MEDIUM' | 'LOW'; };
    'CustomerProductSubscriberStatus': { name: 'CustomerProductSubscriberStatus'; enumValues: 'ACTIVE' | 'CANCELLED' | 'EXPIRED' | 'FAILED' | 'NEVER_SUBSCRIBED' | 'PAUSED'; };
    'CustomerRemoveTaxExemptionsPayload': { kind: 'OBJECT'; name: 'CustomerRemoveTaxExemptionsPayload'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerReplaceTaxExemptionsPayload': { kind: 'OBJECT'; name: 'CustomerReplaceTaxExemptionsPayload'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerRequestDataErasureErrorCode': { name: 'CustomerRequestDataErasureErrorCode'; enumValues: 'DOES_NOT_EXIST' | 'FAILED_TO_REQUEST'; };
    'CustomerRequestDataErasurePayload': { kind: 'OBJECT'; name: 'CustomerRequestDataErasurePayload'; fields: { 'customerId': { name: 'customerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerRequestDataErasureUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerRequestDataErasureUserError': { kind: 'OBJECT'; name: 'CustomerRequestDataErasureUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerRequestDataErasureErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerSavedSearchSortKeys': { name: 'CustomerSavedSearchSortKeys'; enumValues: 'NAME' | 'ID' | 'RELEVANCE'; };
    'CustomerSegmentMember': { kind: 'OBJECT'; name: 'CustomerSegmentMember'; fields: { 'amountSpent': { name: 'amountSpent'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'defaultAddress': { name: 'defaultAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'defaultEmailAddress': { name: 'defaultEmailAddress'; type: { kind: 'OBJECT'; name: 'CustomerEmailAddress'; ofType: null; } }; 'defaultPhoneNumber': { name: 'defaultPhoneNumber'; type: { kind: 'OBJECT'; name: 'CustomerPhoneNumber'; ofType: null; } }; 'displayName': { name: 'displayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastOrderId': { name: 'lastOrderId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'mergeable': { name: 'mergeable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerMergeable'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'numberOfOrders': { name: 'numberOfOrders'; type: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; }; };
    'CustomerSegmentMemberConnection': { kind: 'OBJECT'; name: 'CustomerSegmentMemberConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerSegmentMemberEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'statistics': { name: 'statistics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentStatistics'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'CustomerSegmentMemberEdge': { kind: 'OBJECT'; name: 'CustomerSegmentMemberEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerSegmentMember'; ofType: null; }; } }; }; };
    'CustomerSegmentMembersQuery': { kind: 'OBJECT'; name: 'CustomerSegmentMembersQuery'; fields: { 'currentCount': { name: 'currentCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'done': { name: 'done'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'CustomerSegmentMembersQueryCreatePayload': { kind: 'OBJECT'; name: 'CustomerSegmentMembersQueryCreatePayload'; fields: { 'customerSegmentMembersQuery': { name: 'customerSegmentMembersQuery'; type: { kind: 'OBJECT'; name: 'CustomerSegmentMembersQuery'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerSegmentMembersQueryUserError'; ofType: null; }; }; }; } }; }; };
    'CustomerSegmentMembersQueryInput': { kind: 'INPUT_OBJECT'; name: 'CustomerSegmentMembersQueryInput'; isOneOf: false; inputFields: [{ name: 'segmentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'query'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'reverse'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'sortKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CustomerSegmentMembersQueryUserError': { kind: 'OBJECT'; name: 'CustomerSegmentMembersQueryUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerSegmentMembersQueryUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerSegmentMembersQueryUserErrorCode': { name: 'CustomerSegmentMembersQueryUserErrorCode'; enumValues: 'INVALID'; };
    'CustomerShopPayAgreement': { kind: 'OBJECT'; name: 'CustomerShopPayAgreement'; fields: { 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'CustomerCreditCardBillingAddress'; ofType: null; } }; 'expiresSoon': { name: 'expiresSoon'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'expiryMonth': { name: 'expiryMonth'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'expiryYear': { name: 'expiryYear'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'inactive': { name: 'inactive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isRevocable': { name: 'isRevocable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lastDigits': { name: 'lastDigits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'maskedNumber': { name: 'maskedNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerSmsMarketingConsentError': { kind: 'OBJECT'; name: 'CustomerSmsMarketingConsentError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'CustomerSmsMarketingConsentErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerSmsMarketingConsentErrorCode': { name: 'CustomerSmsMarketingConsentErrorCode'; enumValues: 'INVALID' | 'INCLUSION' | 'INTERNAL_ERROR' | 'MISSING_ARGUMENT'; };
    'CustomerSmsMarketingConsentInput': { kind: 'INPUT_OBJECT'; name: 'CustomerSmsMarketingConsentInput'; isOneOf: false; inputFields: [{ name: 'marketingOptInLevel'; type: { kind: 'ENUM'; name: 'CustomerMarketingOptInLevel'; ofType: null; }; defaultValue: null }, { name: 'marketingState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerSmsMarketingState'; ofType: null; }; }; defaultValue: null }, { name: 'consentUpdatedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'CustomerSmsMarketingConsentState': { kind: 'OBJECT'; name: 'CustomerSmsMarketingConsentState'; fields: { 'consentCollectedFrom': { name: 'consentCollectedFrom'; type: { kind: 'ENUM'; name: 'CustomerConsentCollectedFrom'; ofType: null; } }; 'consentUpdatedAt': { name: 'consentUpdatedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'marketingOptInLevel': { name: 'marketingOptInLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerMarketingOptInLevel'; ofType: null; }; } }; 'marketingState': { name: 'marketingState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerSmsMarketingState'; ofType: null; }; } }; }; };
    'CustomerSmsMarketingConsentUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CustomerSmsMarketingConsentUpdateInput'; isOneOf: false; inputFields: [{ name: 'customerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'smsMarketingConsent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CustomerSmsMarketingConsentInput'; ofType: null; }; }; defaultValue: null }]; };
    'CustomerSmsMarketingConsentUpdatePayload': { kind: 'OBJECT'; name: 'CustomerSmsMarketingConsentUpdatePayload'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerSmsMarketingConsentError'; ofType: null; }; }; }; } }; }; };
    'CustomerSmsMarketingState': { name: 'CustomerSmsMarketingState'; enumValues: 'NOT_SUBSCRIBED' | 'PENDING' | 'SUBSCRIBED' | 'UNSUBSCRIBED' | 'REDACTED'; };
    'CustomerSortKeys': { name: 'CustomerSortKeys'; enumValues: 'CREATED_AT' | 'NAME' | 'LOCATION' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'; };
    'CustomerState': { name: 'CustomerState'; enumValues: 'DECLINED' | 'DISABLED' | 'ENABLED' | 'INVITED'; };
    'CustomerStatistics': { kind: 'OBJECT'; name: 'CustomerStatistics'; fields: { 'predictedSpendTier': { name: 'predictedSpendTier'; type: { kind: 'ENUM'; name: 'CustomerPredictedSpendTier'; ofType: null; } }; }; };
    'CustomerUpdateDefaultAddressPayload': { kind: 'OBJECT'; name: 'CustomerUpdateDefaultAddressPayload'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerUpdatePayload': { kind: 'OBJECT'; name: 'CustomerUpdatePayload'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'CustomerVisit': { kind: 'OBJECT'; name: 'CustomerVisit'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'landingPage': { name: 'landingPage'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'landingPageHtml': { name: 'landingPageHtml'; type: { kind: 'SCALAR'; name: 'HTML'; ofType: null; } }; 'marketingEvent': { name: 'marketingEvent'; type: { kind: 'OBJECT'; name: 'MarketingEvent'; ofType: null; } }; 'occurredAt': { name: 'occurredAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'referralCode': { name: 'referralCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'referralInfoHtml': { name: 'referralInfoHtml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'FormattedString'; ofType: null; }; } }; 'referrerUrl': { name: 'referrerUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'source': { name: 'source'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sourceDescription': { name: 'sourceDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sourceType': { name: 'sourceType'; type: { kind: 'ENUM'; name: 'MarketingTactic'; ofType: null; } }; 'utmParameters': { name: 'utmParameters'; type: { kind: 'OBJECT'; name: 'UTMParameters'; ofType: null; } }; }; };
    'CustomerVisitProductInfo': { kind: 'OBJECT'; name: 'CustomerVisitProductInfo'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'CustomerVisitProductInfoConnection': { kind: 'OBJECT'; name: 'CustomerVisitProductInfoConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerVisitProductInfoEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerVisitProductInfo'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomerVisitProductInfoEdge': { kind: 'OBJECT'; name: 'CustomerVisitProductInfoEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerVisitProductInfo'; ofType: null; }; } }; }; };
    'DataSaleOptOutPayload': { kind: 'OBJECT'; name: 'DataSaleOptOutPayload'; fields: { 'customerId': { name: 'customerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DataSaleOptOutUserError'; ofType: null; }; }; }; } }; }; };
    'DataSaleOptOutUserError': { kind: 'OBJECT'; name: 'DataSaleOptOutUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'DataSaleOptOutUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DataSaleOptOutUserErrorCode': { name: 'DataSaleOptOutUserErrorCode'; enumValues: 'FAILED'; };
    'Date': unknown;
    'DateTime': unknown;
    'DayOfTheWeek': { name: 'DayOfTheWeek'; enumValues: 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'; };
    'Decimal': unknown;
    'DelegateAccessToken': { kind: 'OBJECT'; name: 'DelegateAccessToken'; fields: { 'accessScopes': { name: 'accessScopes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'accessToken': { name: 'accessToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'DelegateAccessTokenCreatePayload': { kind: 'OBJECT'; name: 'DelegateAccessTokenCreatePayload'; fields: { 'delegateAccessToken': { name: 'delegateAccessToken'; type: { kind: 'OBJECT'; name: 'DelegateAccessToken'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DelegateAccessTokenCreateUserError'; ofType: null; }; }; }; } }; }; };
    'DelegateAccessTokenCreateUserError': { kind: 'OBJECT'; name: 'DelegateAccessTokenCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'DelegateAccessTokenCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DelegateAccessTokenCreateUserErrorCode': { name: 'DelegateAccessTokenCreateUserErrorCode'; enumValues: 'EMPTY_ACCESS_SCOPE' | 'DELEGATE_ACCESS_TOKEN' | 'NEGATIVE_EXPIRES_IN' | 'EXPIRES_AFTER_PARENT' | 'REFRESH_TOKEN' | 'PERSISTENCE_FAILED' | 'UNKNOWN_SCOPES'; };
    'DelegateAccessTokenDestroyPayload': { kind: 'OBJECT'; name: 'DelegateAccessTokenDestroyPayload'; fields: { 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DelegateAccessTokenDestroyUserError'; ofType: null; }; }; }; } }; }; };
    'DelegateAccessTokenDestroyUserError': { kind: 'OBJECT'; name: 'DelegateAccessTokenDestroyUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'DelegateAccessTokenDestroyUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DelegateAccessTokenDestroyUserErrorCode': { name: 'DelegateAccessTokenDestroyUserErrorCode'; enumValues: 'PERSISTENCE_FAILED' | 'ACCESS_TOKEN_NOT_FOUND' | 'CAN_ONLY_DELETE_DELEGATE_TOKENS' | 'ACCESS_DENIED'; };
    'DelegateAccessTokenInput': { kind: 'INPUT_OBJECT'; name: 'DelegateAccessTokenInput'; isOneOf: false; inputFields: [{ name: 'delegateAccessScope'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'expiresIn'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'DeletionEvent': { kind: 'OBJECT'; name: 'DeletionEvent'; fields: { 'occurredAt': { name: 'occurredAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'subjectId': { name: 'subjectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'subjectType': { name: 'subjectType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeletionEventSubjectType'; ofType: null; }; } }; }; };
    'DeletionEventConnection': { kind: 'OBJECT'; name: 'DeletionEventConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeletionEventEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeletionEvent'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DeletionEventEdge': { kind: 'OBJECT'; name: 'DeletionEventEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeletionEvent'; ofType: null; }; } }; }; };
    'DeletionEventSortKeys': { name: 'DeletionEventSortKeys'; enumValues: 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'DeletionEventSubjectType': { name: 'DeletionEventSubjectType'; enumValues: 'COLLECTION' | 'PRODUCT'; };
    'DeliveryAvailableService': { kind: 'OBJECT'; name: 'DeliveryAvailableService'; fields: { 'countries': { name: 'countries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCountryCodesOrRestOfWorld'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryBrandedPromise': { kind: 'OBJECT'; name: 'DeliveryBrandedPromise'; fields: { 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryCarrierService': { kind: 'OBJECT'; name: 'DeliveryCarrierService'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'availableServicesForCountries': { name: 'availableServicesForCountries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryAvailableService'; ofType: null; }; }; }; } }; 'callbackUrl': { name: 'callbackUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'formattedName': { name: 'formattedName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'supportsServiceDiscovery': { name: 'supportsServiceDiscovery'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DeliveryCarrierServiceAndLocations': { kind: 'OBJECT'; name: 'DeliveryCarrierServiceAndLocations'; fields: { 'carrierService': { name: 'carrierService'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCarrierService'; ofType: null; }; } }; 'locations': { name: 'locations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; }; }; } }; }; };
    'DeliveryCarrierServiceConnection': { kind: 'OBJECT'; name: 'DeliveryCarrierServiceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCarrierServiceEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCarrierService'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DeliveryCarrierServiceCreateInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryCarrierServiceCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'callbackUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; }; defaultValue: null }, { name: 'supportsServiceDiscovery'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'DeliveryCarrierServiceEdge': { kind: 'OBJECT'; name: 'DeliveryCarrierServiceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCarrierService'; ofType: null; }; } }; }; };
    'DeliveryCarrierServiceUpdateInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryCarrierServiceUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'callbackUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; defaultValue: null }, { name: 'supportsServiceDiscovery'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DeliveryCondition': { kind: 'OBJECT'; name: 'DeliveryCondition'; fields: { 'conditionCriteria': { name: 'conditionCriteria'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DeliveryConditionCriteria'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeliveryConditionField'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'operator': { name: 'operator'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeliveryConditionOperator'; ofType: null; }; } }; }; };
    'DeliveryConditionCriteria': { kind: 'UNION'; name: 'DeliveryConditionCriteria'; fields: {}; possibleTypes: 'MoneyV2' | 'Weight'; };
    'DeliveryConditionField': { name: 'DeliveryConditionField'; enumValues: 'TOTAL_WEIGHT' | 'TOTAL_PRICE'; };
    'DeliveryConditionOperator': { name: 'DeliveryConditionOperator'; enumValues: 'GREATER_THAN_OR_EQUAL_TO' | 'LESS_THAN_OR_EQUAL_TO'; };
    'DeliveryCountry': { kind: 'OBJECT'; name: 'DeliveryCountry'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCountryCodeOrRestOfWorld'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'provinces': { name: 'provinces'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProvince'; ofType: null; }; }; }; } }; 'translatedName': { name: 'translatedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryCountryAndZone': { kind: 'OBJECT'; name: 'DeliveryCountryAndZone'; fields: { 'country': { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCountry'; ofType: null; }; } }; 'zone': { name: 'zone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryCountryCodeOrRestOfWorld': { kind: 'OBJECT'; name: 'DeliveryCountryCodeOrRestOfWorld'; fields: { 'countryCode': { name: 'countryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'restOfWorld': { name: 'restOfWorld'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DeliveryCountryCodesOrRestOfWorld': { kind: 'OBJECT'; name: 'DeliveryCountryCodesOrRestOfWorld'; fields: { 'countryCodes': { name: 'countryCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; } }; 'restOfWorld': { name: 'restOfWorld'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DeliveryCountryInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryCountryInput'; isOneOf: false; inputFields: [{ name: 'code'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }, { name: 'restOfWorld'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'provinces'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryProvinceInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'includeAllProvinces'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DeliveryCustomization': { kind: 'OBJECT'; name: 'DeliveryCustomization'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'errorHistory': { name: 'errorHistory'; type: { kind: 'OBJECT'; name: 'FunctionsErrorHistory'; ofType: null; } }; 'functionId': { name: 'functionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'shopifyFunction': { name: 'shopifyFunction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyFunction'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryCustomizationActivationPayload': { kind: 'OBJECT'; name: 'DeliveryCustomizationActivationPayload'; fields: { 'ids': { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCustomizationError'; ofType: null; }; }; }; } }; }; };
    'DeliveryCustomizationConnection': { kind: 'OBJECT'; name: 'DeliveryCustomizationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCustomizationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCustomization'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DeliveryCustomizationCreatePayload': { kind: 'OBJECT'; name: 'DeliveryCustomizationCreatePayload'; fields: { 'deliveryCustomization': { name: 'deliveryCustomization'; type: { kind: 'OBJECT'; name: 'DeliveryCustomization'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCustomizationError'; ofType: null; }; }; }; } }; }; };
    'DeliveryCustomizationDeletePayload': { kind: 'OBJECT'; name: 'DeliveryCustomizationDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCustomizationError'; ofType: null; }; }; }; } }; }; };
    'DeliveryCustomizationEdge': { kind: 'OBJECT'; name: 'DeliveryCustomizationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCustomization'; ofType: null; }; } }; }; };
    'DeliveryCustomizationError': { kind: 'OBJECT'; name: 'DeliveryCustomizationError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'DeliveryCustomizationErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryCustomizationErrorCode': { name: 'DeliveryCustomizationErrorCode'; enumValues: 'INVALID' | 'FUNCTION_NOT_FOUND' | 'DELIVERY_CUSTOMIZATION_NOT_FOUND' | 'DELIVERY_CUSTOMIZATION_FUNCTION_NOT_ELIGIBLE' | 'UNAUTHORIZED_APP_SCOPE' | 'MAXIMUM_ACTIVE_DELIVERY_CUSTOMIZATIONS' | 'CUSTOM_APP_FUNCTION_NOT_ELIGIBLE' | 'FUNCTION_DOES_NOT_IMPLEMENT' | 'FUNCTION_PENDING_DELETION' | 'FUNCTION_ID_CANNOT_BE_CHANGED' | 'REQUIRED_INPUT_FIELD' | 'INVALID_METAFIELDS'; };
    'DeliveryCustomizationInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryCustomizationInput'; isOneOf: false; inputFields: [{ name: 'functionId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'DeliveryCustomizationUpdatePayload': { kind: 'OBJECT'; name: 'DeliveryCustomizationUpdatePayload'; fields: { 'deliveryCustomization': { name: 'deliveryCustomization'; type: { kind: 'OBJECT'; name: 'DeliveryCustomization'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCustomizationError'; ofType: null; }; }; }; } }; }; };
    'DeliveryLegacyModeBlocked': { kind: 'OBJECT'; name: 'DeliveryLegacyModeBlocked'; fields: { 'blocked': { name: 'blocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'reasons': { name: 'reasons'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeliveryLegacyModeBlockedReason'; ofType: null; }; }; } }; }; };
    'DeliveryLegacyModeBlockedReason': { name: 'DeliveryLegacyModeBlockedReason'; enumValues: 'MULTI_LOCATION_DISABLED' | 'NO_LOCATIONS_FULFILLING_ONLINE_ORDERS'; };
    'DeliveryLocalPickupSettings': { kind: 'OBJECT'; name: 'DeliveryLocalPickupSettings'; fields: { 'instructions': { name: 'instructions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pickupTime': { name: 'pickupTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeliveryLocalPickupTime'; ofType: null; }; } }; }; };
    'DeliveryLocalPickupTime': { name: 'DeliveryLocalPickupTime'; enumValues: 'ONE_HOUR' | 'TWO_HOURS' | 'FOUR_HOURS' | 'TWENTY_FOUR_HOURS' | 'TWO_TO_FOUR_DAYS' | 'FIVE_OR_MORE_DAYS'; };
    'DeliveryLocationGroup': { kind: 'OBJECT'; name: 'DeliveryLocationGroup'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'locations': { name: 'locations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationConnection'; ofType: null; }; } }; 'locationsCount': { name: 'locationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; }; };
    'DeliveryLocationGroupZone': { kind: 'OBJECT'; name: 'DeliveryLocationGroupZone'; fields: { 'methodDefinitionCounts': { name: 'methodDefinitionCounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryMethodDefinitionCounts'; ofType: null; }; } }; 'methodDefinitions': { name: 'methodDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryMethodDefinitionConnection'; ofType: null; }; } }; 'zone': { name: 'zone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryZone'; ofType: null; }; } }; }; };
    'DeliveryLocationGroupZoneConnection': { kind: 'OBJECT'; name: 'DeliveryLocationGroupZoneConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryLocationGroupZoneEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryLocationGroupZone'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DeliveryLocationGroupZoneEdge': { kind: 'OBJECT'; name: 'DeliveryLocationGroupZoneEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryLocationGroupZone'; ofType: null; }; } }; }; };
    'DeliveryLocationGroupZoneInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryLocationGroupZoneInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'countries'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryCountryInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'methodDefinitionsToCreate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryMethodDefinitionInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'methodDefinitionsToUpdate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryMethodDefinitionInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'DeliveryLocationLocalPickupEnableInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryLocationLocalPickupEnableInput'; isOneOf: false; inputFields: [{ name: 'locationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'pickupTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeliveryLocalPickupTime'; ofType: null; }; }; defaultValue: null }, { name: 'instructions'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DeliveryLocationLocalPickupSettingsError': { kind: 'OBJECT'; name: 'DeliveryLocationLocalPickupSettingsError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'DeliveryLocationLocalPickupSettingsErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryLocationLocalPickupSettingsErrorCode': { name: 'DeliveryLocationLocalPickupSettingsErrorCode'; enumValues: 'ACTIVE_LOCATION_NOT_FOUND' | 'GENERIC_ERROR'; };
    'DeliveryMethod': { kind: 'OBJECT'; name: 'DeliveryMethod'; fields: { 'additionalInformation': { name: 'additionalInformation'; type: { kind: 'OBJECT'; name: 'DeliveryMethodAdditionalInformation'; ofType: null; } }; 'brandedPromise': { name: 'brandedPromise'; type: { kind: 'OBJECT'; name: 'DeliveryBrandedPromise'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'maxDeliveryDateTime': { name: 'maxDeliveryDateTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'methodType': { name: 'methodType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeliveryMethodType'; ofType: null; }; } }; 'minDeliveryDateTime': { name: 'minDeliveryDateTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'serviceCode': { name: 'serviceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sourceReference': { name: 'sourceReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DeliveryMethodAdditionalInformation': { kind: 'OBJECT'; name: 'DeliveryMethodAdditionalInformation'; fields: { 'instructions': { name: 'instructions'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DeliveryMethodDefinition': { kind: 'OBJECT'; name: 'DeliveryMethodDefinition'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'methodConditions': { name: 'methodConditions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCondition'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rateProvider': { name: 'rateProvider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DeliveryRateProvider'; ofType: null; }; } }; }; };
    'DeliveryMethodDefinitionConnection': { kind: 'OBJECT'; name: 'DeliveryMethodDefinitionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryMethodDefinitionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryMethodDefinition'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DeliveryMethodDefinitionCounts': { kind: 'OBJECT'; name: 'DeliveryMethodDefinitionCounts'; fields: { 'participantDefinitionsCount': { name: 'participantDefinitionsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'rateDefinitionsCount': { name: 'rateDefinitionsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DeliveryMethodDefinitionEdge': { kind: 'OBJECT'; name: 'DeliveryMethodDefinitionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryMethodDefinition'; ofType: null; }; } }; }; };
    'DeliveryMethodDefinitionInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryMethodDefinitionInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'rateDefinition'; type: { kind: 'INPUT_OBJECT'; name: 'DeliveryRateDefinitionInput'; ofType: null; }; defaultValue: null }, { name: 'participant'; type: { kind: 'INPUT_OBJECT'; name: 'DeliveryParticipantInput'; ofType: null; }; defaultValue: null }, { name: 'weightConditionsToCreate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryWeightConditionInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'priceConditionsToCreate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryPriceConditionInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'conditionsToUpdate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryUpdateConditionInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'DeliveryMethodDefinitionType': { name: 'DeliveryMethodDefinitionType'; enumValues: 'MERCHANT' | 'PARTICIPANT'; };
    'DeliveryMethodType': { name: 'DeliveryMethodType'; enumValues: 'SHIPPING' | 'PICK_UP' | 'NONE' | 'RETAIL' | 'LOCAL' | 'PICKUP_POINT'; };
    'DeliveryParticipant': { kind: 'OBJECT'; name: 'DeliveryParticipant'; fields: { 'adaptToNewServicesFlag': { name: 'adaptToNewServicesFlag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'carrierService': { name: 'carrierService'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCarrierService'; ofType: null; }; } }; 'fixedFee': { name: 'fixedFee'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'participantServices': { name: 'participantServices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryParticipantService'; ofType: null; }; }; }; } }; 'percentageOfRateFee': { name: 'percentageOfRateFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'DeliveryParticipantInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryParticipantInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'carrierServiceId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'fixedFee'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'percentageOfRateFee'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'participantServices'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryParticipantServiceInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'adaptToNewServices'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DeliveryParticipantService': { kind: 'OBJECT'; name: 'DeliveryParticipantService'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryParticipantServiceInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryParticipantServiceInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'DeliveryPriceConditionInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryPriceConditionInput'; isOneOf: false; inputFields: [{ name: 'criteria'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'operator'; type: { kind: 'ENUM'; name: 'DeliveryConditionOperator'; ofType: null; }; defaultValue: null }]; };
    'DeliveryProductVariantsCount': { kind: 'OBJECT'; name: 'DeliveryProductVariantsCount'; fields: { 'capped': { name: 'capped'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DeliveryProfile': { kind: 'OBJECT'; name: 'DeliveryProfile'; fields: { 'activeMethodDefinitionsCount': { name: 'activeMethodDefinitionsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'default': { name: 'default'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'legacyMode': { name: 'legacyMode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'locationsWithoutRatesCount': { name: 'locationsWithoutRatesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'originLocationCount': { name: 'originLocationCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'productVariantsCount': { name: 'productVariantsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'productVariantsCountV2': { name: 'productVariantsCountV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProductVariantsCount'; ofType: null; }; } }; 'profileItems': { name: 'profileItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProfileItemConnection'; ofType: null; }; } }; 'profileLocationGroups': { name: 'profileLocationGroups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProfileLocationGroup'; ofType: null; }; }; }; } }; 'sellingPlanGroups': { name: 'sellingPlanGroups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupConnection'; ofType: null; }; } }; 'unassignedLocations': { name: 'unassignedLocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; }; }; } }; 'unassignedLocationsPaginated': { name: 'unassignedLocationsPaginated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationConnection'; ofType: null; }; } }; 'zoneCountryCount': { name: 'zoneCountryCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DeliveryProfileConnection': { kind: 'OBJECT'; name: 'DeliveryProfileConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProfileEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProfile'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DeliveryProfileCreatePayload': { kind: 'OBJECT'; name: 'DeliveryProfileCreatePayload'; fields: { 'profile': { name: 'profile'; type: { kind: 'OBJECT'; name: 'DeliveryProfile'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DeliveryProfileEdge': { kind: 'OBJECT'; name: 'DeliveryProfileEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProfile'; ofType: null; }; } }; }; };
    'DeliveryProfileInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryProfileInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'profileLocationGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryProfileLocationGroupInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'locationGroupsToCreate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryProfileLocationGroupInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'locationGroupsToUpdate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryProfileLocationGroupInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'locationGroupsToDelete'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'variantsToAssociate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'variantsToDissociate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'zonesToDelete'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'methodDefinitionsToDelete'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'conditionsToDelete'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'sellingPlanGroupsToAssociate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'sellingPlanGroupsToDissociate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'DeliveryProfileItem': { kind: 'OBJECT'; name: 'DeliveryProfileItem'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; 'variants': { name: 'variants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantConnection'; ofType: null; }; } }; }; };
    'DeliveryProfileItemConnection': { kind: 'OBJECT'; name: 'DeliveryProfileItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProfileItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProfileItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DeliveryProfileItemEdge': { kind: 'OBJECT'; name: 'DeliveryProfileItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProfileItem'; ofType: null; }; } }; }; };
    'DeliveryProfileLocationGroup': { kind: 'OBJECT'; name: 'DeliveryProfileLocationGroup'; fields: { 'countriesInAnyZone': { name: 'countriesInAnyZone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCountryAndZone'; ofType: null; }; }; }; } }; 'locationGroup': { name: 'locationGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryLocationGroup'; ofType: null; }; } }; 'locationGroupZones': { name: 'locationGroupZones'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryLocationGroupZoneConnection'; ofType: null; }; } }; }; };
    'DeliveryProfileLocationGroupInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryProfileLocationGroupInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'locations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'locationsToAdd'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'locationsToRemove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'zonesToCreate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryLocationGroupZoneInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'zonesToUpdate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DeliveryLocationGroupZoneInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'DeliveryProfileRemovePayload': { kind: 'OBJECT'; name: 'DeliveryProfileRemovePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DeliveryProfileUpdatePayload': { kind: 'OBJECT'; name: 'DeliveryProfileUpdatePayload'; fields: { 'profile': { name: 'profile'; type: { kind: 'OBJECT'; name: 'DeliveryProfile'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DeliveryPromiseProvider': { kind: 'OBJECT'; name: 'DeliveryPromiseProvider'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'fulfillmentDelay': { name: 'fulfillmentDelay'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; } }; 'timeZone': { name: 'timeZone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryPromiseProviderUpsertPayload': { kind: 'OBJECT'; name: 'DeliveryPromiseProviderUpsertPayload'; fields: { 'deliveryPromiseProvider': { name: 'deliveryPromiseProvider'; type: { kind: 'OBJECT'; name: 'DeliveryPromiseProvider'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryPromiseProviderUpsertUserError'; ofType: null; }; }; }; } }; }; };
    'DeliveryPromiseProviderUpsertUserError': { kind: 'OBJECT'; name: 'DeliveryPromiseProviderUpsertUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'DeliveryPromiseProviderUpsertUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryPromiseProviderUpsertUserErrorCode': { name: 'DeliveryPromiseProviderUpsertUserErrorCode'; enumValues: 'NOT_FOUND' | 'TOO_LONG' | 'MUST_BELONG_TO_APP' | 'INVALID_TIME_ZONE'; };
    'DeliveryProvince': { kind: 'OBJECT'; name: 'DeliveryProvince'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translatedName': { name: 'translatedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DeliveryProvinceInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryProvinceInput'; isOneOf: false; inputFields: [{ name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeliveryRateDefinition': { kind: 'OBJECT'; name: 'DeliveryRateDefinition'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'DeliveryRateDefinitionInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryRateDefinitionInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }]; };
    'DeliveryRateProvider': { kind: 'UNION'; name: 'DeliveryRateProvider'; fields: {}; possibleTypes: 'DeliveryParticipant' | 'DeliveryRateDefinition'; };
    'DeliverySetting': { kind: 'OBJECT'; name: 'DeliverySetting'; fields: { 'legacyModeBlocked': { name: 'legacyModeBlocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryLegacyModeBlocked'; ofType: null; }; } }; 'legacyModeProfiles': { name: 'legacyModeProfiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DeliverySettingInput': { kind: 'INPUT_OBJECT'; name: 'DeliverySettingInput'; isOneOf: false; inputFields: [{ name: 'legacyModeProfiles'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DeliverySettingUpdatePayload': { kind: 'OBJECT'; name: 'DeliverySettingUpdatePayload'; fields: { 'setting': { name: 'setting'; type: { kind: 'OBJECT'; name: 'DeliverySetting'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DeliveryShippingOriginAssignPayload': { kind: 'OBJECT'; name: 'DeliveryShippingOriginAssignPayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DeliveryUpdateConditionInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryUpdateConditionInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'criteria'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'criteriaUnit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'field'; type: { kind: 'ENUM'; name: 'DeliveryConditionField'; ofType: null; }; defaultValue: null }, { name: 'operator'; type: { kind: 'ENUM'; name: 'DeliveryConditionOperator'; ofType: null; }; defaultValue: null }]; };
    'DeliveryWeightConditionInput': { kind: 'INPUT_OBJECT'; name: 'DeliveryWeightConditionInput'; isOneOf: false; inputFields: [{ name: 'criteria'; type: { kind: 'INPUT_OBJECT'; name: 'WeightInput'; ofType: null; }; defaultValue: null }, { name: 'operator'; type: { kind: 'ENUM'; name: 'DeliveryConditionOperator'; ofType: null; }; defaultValue: null }]; };
    'DeliveryZone': { kind: 'OBJECT'; name: 'DeliveryZone'; fields: { 'countries': { name: 'countries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCountry'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DigitalWallet': { name: 'DigitalWallet'; enumValues: 'APPLE_PAY' | 'ANDROID_PAY' | 'GOOGLE_PAY' | 'SHOPIFY_PAY'; };
    'Discount': { kind: 'UNION'; name: 'Discount'; fields: {}; possibleTypes: 'DiscountAutomaticApp' | 'DiscountAutomaticBasic' | 'DiscountAutomaticBxgy' | 'DiscountAutomaticFreeShipping' | 'DiscountCodeApp' | 'DiscountCodeBasic' | 'DiscountCodeBxgy' | 'DiscountCodeFreeShipping'; };
    'DiscountAllocation': { kind: 'OBJECT'; name: 'DiscountAllocation'; fields: { 'allocatedAmount': { name: 'allocatedAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'allocatedAmountSet': { name: 'allocatedAmountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountApplication': { name: 'discountApplication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'DiscountApplication'; ofType: null; }; } }; }; };
    'DiscountAmount': { kind: 'OBJECT'; name: 'DiscountAmount'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'appliesOnEachItem': { name: 'appliesOnEachItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DiscountAmountInput': { kind: 'INPUT_OBJECT'; name: 'DiscountAmountInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'appliesOnEachItem'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DiscountApplication': { kind: 'INTERFACE'; name: 'DiscountApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'index': { name: 'index'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; possibleTypes: 'AutomaticDiscountApplication' | 'DiscountCodeApplication' | 'ManualDiscountApplication' | 'ScriptDiscountApplication'; };
    'DiscountApplicationAllocationMethod': { name: 'DiscountApplicationAllocationMethod'; enumValues: 'ACROSS' | 'EACH' | 'ONE'; };
    'DiscountApplicationConnection': { kind: 'OBJECT'; name: 'DiscountApplicationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountApplicationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'DiscountApplication'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DiscountApplicationEdge': { kind: 'OBJECT'; name: 'DiscountApplicationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'DiscountApplication'; ofType: null; }; } }; }; };
    'DiscountApplicationLevel': { name: 'DiscountApplicationLevel'; enumValues: 'ORDER' | 'LINE'; };
    'DiscountApplicationTargetSelection': { name: 'DiscountApplicationTargetSelection'; enumValues: 'ALL' | 'ENTITLED' | 'EXPLICIT'; };
    'DiscountApplicationTargetType': { name: 'DiscountApplicationTargetType'; enumValues: 'LINE_ITEM' | 'SHIPPING_LINE'; };
    'DiscountAutomatic': { kind: 'UNION'; name: 'DiscountAutomatic'; fields: {}; possibleTypes: 'DiscountAutomaticApp' | 'DiscountAutomaticBasic' | 'DiscountAutomaticBxgy' | 'DiscountAutomaticFreeShipping'; };
    'DiscountAutomaticActivatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticActivatePayload'; fields: { 'automaticDiscountNode': { name: 'automaticDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticApp': { kind: 'OBJECT'; name: 'DiscountAutomaticApp'; fields: { 'appDiscountType': { name: 'appDiscountType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppDiscountType'; ofType: null; }; } }; 'asyncUsageCount': { name: 'asyncUsageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'combinesWith': { name: 'combinesWith'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCombinesWith'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountClass'; ofType: null; }; } }; 'discountId': { name: 'discountId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'errorHistory': { name: 'errorHistory'; type: { kind: 'OBJECT'; name: 'FunctionsErrorHistory'; ofType: null; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatus'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'DiscountAutomaticAppCreatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticAppCreatePayload'; fields: { 'automaticAppDiscount': { name: 'automaticAppDiscount'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticApp'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticAppInput': { kind: 'INPUT_OBJECT'; name: 'DiscountAutomaticAppInput'; isOneOf: false; inputFields: [{ name: 'combinesWith'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; ofType: null; }; defaultValue: null }, { name: 'functionId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'DiscountAutomaticAppUpdatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticAppUpdatePayload'; fields: { 'automaticAppDiscount': { name: 'automaticAppDiscount'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticApp'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticBasic': { kind: 'OBJECT'; name: 'DiscountAutomaticBasic'; fields: { 'asyncUsageCount': { name: 'asyncUsageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'combinesWith': { name: 'combinesWith'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCombinesWith'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customerGets': { name: 'customerGets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCustomerGets'; ofType: null; }; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MerchandiseDiscountClass'; ofType: null; }; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'minimumRequirement': { name: 'minimumRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountMinimumRequirement'; ofType: null; }; } }; 'recurringCycleLimit': { name: 'recurringCycleLimit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'shortSummary': { name: 'shortSummary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatus'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'usageCount': { name: 'usageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DiscountAutomaticBasicCreatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticBasicCreatePayload'; fields: { 'automaticDiscountNode': { name: 'automaticDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticBasicInput': { kind: 'INPUT_OBJECT'; name: 'DiscountAutomaticBasicInput'; isOneOf: false; inputFields: [{ name: 'combinesWith'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'minimumRequirement'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountMinimumRequirementInput'; ofType: null; }; defaultValue: null }, { name: 'customerGets'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerGetsInput'; ofType: null; }; defaultValue: null }, { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'DiscountAutomaticBasicUpdatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticBasicUpdatePayload'; fields: { 'automaticDiscountNode': { name: 'automaticDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticBulkDeletePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticBulkDeletePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticBxgy': { kind: 'OBJECT'; name: 'DiscountAutomaticBxgy'; fields: { 'asyncUsageCount': { name: 'asyncUsageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'combinesWith': { name: 'combinesWith'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCombinesWith'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customerBuys': { name: 'customerBuys'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCustomerBuys'; ofType: null; }; } }; 'customerGets': { name: 'customerGets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCustomerGets'; ofType: null; }; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MerchandiseDiscountClass'; ofType: null; }; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatus'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'usageCount': { name: 'usageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'usesPerOrderLimit': { name: 'usesPerOrderLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DiscountAutomaticBxgyCreatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticBxgyCreatePayload'; fields: { 'automaticDiscountNode': { name: 'automaticDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticBxgyInput': { kind: 'INPUT_OBJECT'; name: 'DiscountAutomaticBxgyInput'; isOneOf: false; inputFields: [{ name: 'combinesWith'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'usesPerOrderLimit'; type: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; defaultValue: null }, { name: 'customerBuys'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerBuysInput'; ofType: null; }; defaultValue: null }, { name: 'customerGets'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerGetsInput'; ofType: null; }; defaultValue: null }]; };
    'DiscountAutomaticBxgyUpdatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticBxgyUpdatePayload'; fields: { 'automaticDiscountNode': { name: 'automaticDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticConnection': { kind: 'OBJECT'; name: 'DiscountAutomaticConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAutomaticEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountAutomatic'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DiscountAutomaticDeactivatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticDeactivatePayload'; fields: { 'automaticDiscountNode': { name: 'automaticDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticDeletePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticDeletePayload'; fields: { 'deletedAutomaticDiscountId': { name: 'deletedAutomaticDiscountId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticEdge': { kind: 'OBJECT'; name: 'DiscountAutomaticEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountAutomatic'; ofType: null; }; } }; }; };
    'DiscountAutomaticFreeShipping': { kind: 'OBJECT'; name: 'DiscountAutomaticFreeShipping'; fields: { 'appliesOnOneTimePurchase': { name: 'appliesOnOneTimePurchase'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'appliesOnSubscription': { name: 'appliesOnSubscription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'asyncUsageCount': { name: 'asyncUsageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'combinesWith': { name: 'combinesWith'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCombinesWith'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'destinationSelection': { name: 'destinationSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountShippingDestinationSelection'; ofType: null; }; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShippingDiscountClass'; ofType: null; }; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'maximumShippingPrice': { name: 'maximumShippingPrice'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'minimumRequirement': { name: 'minimumRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountMinimumRequirement'; ofType: null; }; } }; 'recurringCycleLimit': { name: 'recurringCycleLimit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'shortSummary': { name: 'shortSummary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatus'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalSales': { name: 'totalSales'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'DiscountAutomaticFreeShippingCreatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticFreeShippingCreatePayload'; fields: { 'automaticDiscountNode': { name: 'automaticDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticFreeShippingInput': { kind: 'INPUT_OBJECT'; name: 'DiscountAutomaticFreeShippingInput'; isOneOf: false; inputFields: [{ name: 'combinesWith'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'minimumRequirement'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountMinimumRequirementInput'; ofType: null; }; defaultValue: null }, { name: 'destination'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountShippingDestinationSelectionInput'; ofType: null; }; defaultValue: null }, { name: 'maximumShippingPrice'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'appliesOnOneTimePurchase'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }, { name: 'appliesOnSubscription'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'DiscountAutomaticFreeShippingUpdatePayload': { kind: 'OBJECT'; name: 'DiscountAutomaticFreeShippingUpdatePayload'; fields: { 'automaticDiscountNode': { name: 'automaticDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountAutomaticNode': { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; fields: { 'automaticDiscount': { name: 'automaticDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountAutomatic'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; }; };
    'DiscountAutomaticNodeConnection': { kind: 'OBJECT'; name: 'DiscountAutomaticNodeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAutomaticNodeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DiscountAutomaticNodeEdge': { kind: 'OBJECT'; name: 'DiscountAutomaticNodeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; }; } }; }; };
    'DiscountClass': { name: 'DiscountClass'; enumValues: 'PRODUCT' | 'ORDER' | 'SHIPPING'; };
    'DiscountCode': { kind: 'UNION'; name: 'DiscountCode'; fields: {}; possibleTypes: 'DiscountCodeApp' | 'DiscountCodeBasic' | 'DiscountCodeBxgy' | 'DiscountCodeFreeShipping'; };
    'DiscountCodeActivatePayload': { kind: 'OBJECT'; name: 'DiscountCodeActivatePayload'; fields: { 'codeDiscountNode': { name: 'codeDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeApp': { kind: 'OBJECT'; name: 'DiscountCodeApp'; fields: { 'appDiscountType': { name: 'appDiscountType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppDiscountType'; ofType: null; }; } }; 'appliesOncePerCustomer': { name: 'appliesOncePerCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'asyncUsageCount': { name: 'asyncUsageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'codes': { name: 'codes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCodeConnection'; ofType: null; }; } }; 'codesCount': { name: 'codesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'combinesWith': { name: 'combinesWith'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCombinesWith'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customerSelection': { name: 'customerSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountCustomerSelection'; ofType: null; }; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountClass'; ofType: null; }; } }; 'discountId': { name: 'discountId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'errorHistory': { name: 'errorHistory'; type: { kind: 'OBJECT'; name: 'FunctionsErrorHistory'; ofType: null; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'recurringCycleLimit': { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'shareableUrls': { name: 'shareableUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountShareableUrl'; ofType: null; }; }; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatus'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalSales': { name: 'totalSales'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'usageLimit': { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DiscountCodeAppCreatePayload': { kind: 'OBJECT'; name: 'DiscountCodeAppCreatePayload'; fields: { 'codeAppDiscount': { name: 'codeAppDiscount'; type: { kind: 'OBJECT'; name: 'DiscountCodeApp'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeAppInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCodeAppInput'; isOneOf: false; inputFields: [{ name: 'combinesWith'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; ofType: null; }; defaultValue: null }, { name: 'functionId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'appliesOncePerCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'customerSelection'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerSelectionInput'; ofType: null; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'DiscountCodeAppUpdatePayload': { kind: 'OBJECT'; name: 'DiscountCodeAppUpdatePayload'; fields: { 'codeAppDiscount': { name: 'codeAppDiscount'; type: { kind: 'OBJECT'; name: 'DiscountCodeApp'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeApplication': { kind: 'OBJECT'; name: 'DiscountCodeApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'index': { name: 'index'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'DiscountCodeBasic': { kind: 'OBJECT'; name: 'DiscountCodeBasic'; fields: { 'appliesOncePerCustomer': { name: 'appliesOncePerCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'asyncUsageCount': { name: 'asyncUsageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'codes': { name: 'codes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCodeConnection'; ofType: null; }; } }; 'codesCount': { name: 'codesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'combinesWith': { name: 'combinesWith'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCombinesWith'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customerGets': { name: 'customerGets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCustomerGets'; ofType: null; }; } }; 'customerSelection': { name: 'customerSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountCustomerSelection'; ofType: null; }; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MerchandiseDiscountClass'; ofType: null; }; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'minimumRequirement': { name: 'minimumRequirement'; type: { kind: 'UNION'; name: 'DiscountMinimumRequirement'; ofType: null; } }; 'recurringCycleLimit': { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'shareableUrls': { name: 'shareableUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountShareableUrl'; ofType: null; }; }; }; } }; 'shortSummary': { name: 'shortSummary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatus'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalSales': { name: 'totalSales'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'usageLimit': { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DiscountCodeBasicCreatePayload': { kind: 'OBJECT'; name: 'DiscountCodeBasicCreatePayload'; fields: { 'codeDiscountNode': { name: 'codeDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeBasicInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCodeBasicInput'; isOneOf: false; inputFields: [{ name: 'combinesWith'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'appliesOncePerCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'minimumRequirement'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountMinimumRequirementInput'; ofType: null; }; defaultValue: null }, { name: 'customerGets'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerGetsInput'; ofType: null; }; defaultValue: null }, { name: 'customerSelection'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerSelectionInput'; ofType: null; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'DiscountCodeBasicUpdatePayload': { kind: 'OBJECT'; name: 'DiscountCodeBasicUpdatePayload'; fields: { 'codeDiscountNode': { name: 'codeDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeBulkActivatePayload': { kind: 'OBJECT'; name: 'DiscountCodeBulkActivatePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeBulkDeactivatePayload': { kind: 'OBJECT'; name: 'DiscountCodeBulkDeactivatePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeBulkDeletePayload': { kind: 'OBJECT'; name: 'DiscountCodeBulkDeletePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeBxgy': { kind: 'OBJECT'; name: 'DiscountCodeBxgy'; fields: { 'appliesOncePerCustomer': { name: 'appliesOncePerCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'asyncUsageCount': { name: 'asyncUsageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'codes': { name: 'codes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCodeConnection'; ofType: null; }; } }; 'codesCount': { name: 'codesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'combinesWith': { name: 'combinesWith'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCombinesWith'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customerBuys': { name: 'customerBuys'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCustomerBuys'; ofType: null; }; } }; 'customerGets': { name: 'customerGets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCustomerGets'; ofType: null; }; } }; 'customerSelection': { name: 'customerSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountCustomerSelection'; ofType: null; }; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MerchandiseDiscountClass'; ofType: null; }; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'shareableUrls': { name: 'shareableUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountShareableUrl'; ofType: null; }; }; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatus'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalSales': { name: 'totalSales'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'usageLimit': { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'usesPerOrderLimit': { name: 'usesPerOrderLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DiscountCodeBxgyCreatePayload': { kind: 'OBJECT'; name: 'DiscountCodeBxgyCreatePayload'; fields: { 'codeDiscountNode': { name: 'codeDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeBxgyInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCodeBxgyInput'; isOneOf: false; inputFields: [{ name: 'combinesWith'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'customerBuys'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerBuysInput'; ofType: null; }; defaultValue: null }, { name: 'customerGets'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerGetsInput'; ofType: null; }; defaultValue: null }, { name: 'customerSelection'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerSelectionInput'; ofType: null; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'usesPerOrderLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'appliesOncePerCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DiscountCodeBxgyUpdatePayload': { kind: 'OBJECT'; name: 'DiscountCodeBxgyUpdatePayload'; fields: { 'codeDiscountNode': { name: 'codeDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeDeactivatePayload': { kind: 'OBJECT'; name: 'DiscountCodeDeactivatePayload'; fields: { 'codeDiscountNode': { name: 'codeDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeDeletePayload': { kind: 'OBJECT'; name: 'DiscountCodeDeletePayload'; fields: { 'deletedCodeDiscountId': { name: 'deletedCodeDiscountId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeFreeShipping': { kind: 'OBJECT'; name: 'DiscountCodeFreeShipping'; fields: { 'appliesOnOneTimePurchase': { name: 'appliesOnOneTimePurchase'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'appliesOnSubscription': { name: 'appliesOnSubscription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'appliesOncePerCustomer': { name: 'appliesOncePerCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'asyncUsageCount': { name: 'asyncUsageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'codes': { name: 'codes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCodeConnection'; ofType: null; }; } }; 'codesCount': { name: 'codesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'combinesWith': { name: 'combinesWith'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCombinesWith'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customerSelection': { name: 'customerSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountCustomerSelection'; ofType: null; }; } }; 'destinationSelection': { name: 'destinationSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountShippingDestinationSelection'; ofType: null; }; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShippingDiscountClass'; ofType: null; }; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'maximumShippingPrice': { name: 'maximumShippingPrice'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'minimumRequirement': { name: 'minimumRequirement'; type: { kind: 'UNION'; name: 'DiscountMinimumRequirement'; ofType: null; } }; 'recurringCycleLimit': { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'shareableUrls': { name: 'shareableUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountShareableUrl'; ofType: null; }; }; }; } }; 'shortSummary': { name: 'shortSummary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatus'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalSales': { name: 'totalSales'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'usageLimit': { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DiscountCodeFreeShippingCreatePayload': { kind: 'OBJECT'; name: 'DiscountCodeFreeShippingCreatePayload'; fields: { 'codeDiscountNode': { name: 'codeDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeFreeShippingInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCodeFreeShippingInput'; isOneOf: false; inputFields: [{ name: 'combinesWith'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'appliesOncePerCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'minimumRequirement'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountMinimumRequirementInput'; ofType: null; }; defaultValue: null }, { name: 'customerSelection'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerSelectionInput'; ofType: null; }; defaultValue: null }, { name: 'destination'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountShippingDestinationSelectionInput'; ofType: null; }; defaultValue: null }, { name: 'maximumShippingPrice'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'appliesOnOneTimePurchase'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'appliesOnSubscription'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DiscountCodeFreeShippingUpdatePayload': { kind: 'OBJECT'; name: 'DiscountCodeFreeShippingUpdatePayload'; fields: { 'codeDiscountNode': { name: 'codeDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeNode': { kind: 'OBJECT'; name: 'DiscountCodeNode'; fields: { 'codeDiscount': { name: 'codeDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountCode'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; }; };
    'DiscountCodeNodeConnection': { kind: 'OBJECT'; name: 'DiscountCodeNodeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCodeNodeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DiscountCodeNodeEdge': { kind: 'OBJECT'; name: 'DiscountCodeNodeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; }; } }; }; };
    'DiscountCodeRedeemCodeBulkDeletePayload': { kind: 'OBJECT'; name: 'DiscountCodeRedeemCodeBulkDeletePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountCodeSortKeys': { name: 'DiscountCodeSortKeys'; enumValues: 'CODE' | 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'DiscountCollections': { kind: 'OBJECT'; name: 'DiscountCollections'; fields: { 'collections': { name: 'collections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionConnection'; ofType: null; }; } }; }; };
    'DiscountCollectionsInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCollectionsInput'; isOneOf: false; inputFields: [{ name: 'add'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'remove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'DiscountCombinesWith': { kind: 'OBJECT'; name: 'DiscountCombinesWith'; fields: { 'orderDiscounts': { name: 'orderDiscounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'productDiscounts': { name: 'productDiscounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'shippingDiscounts': { name: 'shippingDiscounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DiscountCombinesWithInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; isOneOf: false; inputFields: [{ name: 'productDiscounts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'orderDiscounts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'shippingDiscounts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'DiscountCountries': { kind: 'OBJECT'; name: 'DiscountCountries'; fields: { 'countries': { name: 'countries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; } }; 'includeRestOfWorld': { name: 'includeRestOfWorld'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DiscountCountriesInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCountriesInput'; isOneOf: false; inputFields: [{ name: 'add'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; defaultValue: null }, { name: 'remove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; defaultValue: null }, { name: 'includeRestOfWorld'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'DiscountCountryAll': { kind: 'OBJECT'; name: 'DiscountCountryAll'; fields: { 'allCountries': { name: 'allCountries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DiscountCustomerAll': { kind: 'OBJECT'; name: 'DiscountCustomerAll'; fields: { 'allCustomers': { name: 'allCustomers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DiscountCustomerBuys': { kind: 'OBJECT'; name: 'DiscountCustomerBuys'; fields: { 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountItems'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountCustomerBuysValue'; ofType: null; }; } }; }; };
    'DiscountCustomerBuysInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerBuysInput'; isOneOf: false; inputFields: [{ name: 'value'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerBuysValueInput'; ofType: null; }; defaultValue: null }, { name: 'items'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountItemsInput'; ofType: null; }; defaultValue: null }]; };
    'DiscountCustomerBuysValue': { kind: 'UNION'; name: 'DiscountCustomerBuysValue'; fields: {}; possibleTypes: 'DiscountPurchaseAmount' | 'DiscountQuantity'; };
    'DiscountCustomerBuysValueInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerBuysValueInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; defaultValue: null }, { name: 'amount'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }]; };
    'DiscountCustomerGets': { kind: 'OBJECT'; name: 'DiscountCustomerGets'; fields: { 'appliesOnOneTimePurchase': { name: 'appliesOnOneTimePurchase'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'appliesOnSubscription': { name: 'appliesOnSubscription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountItems'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountCustomerGetsValue'; ofType: null; }; } }; }; };
    'DiscountCustomerGetsInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerGetsInput'; isOneOf: false; inputFields: [{ name: 'value'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerGetsValueInput'; ofType: null; }; defaultValue: null }, { name: 'items'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountItemsInput'; ofType: null; }; defaultValue: null }, { name: 'appliesOnOneTimePurchase'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'appliesOnSubscription'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DiscountCustomerGetsValue': { kind: 'UNION'; name: 'DiscountCustomerGetsValue'; fields: {}; possibleTypes: 'DiscountAmount' | 'DiscountOnQuantity' | 'DiscountPercentage'; };
    'DiscountCustomerGetsValueInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerGetsValueInput'; isOneOf: false; inputFields: [{ name: 'discountOnQuantity'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountOnQuantityInput'; ofType: null; }; defaultValue: null }, { name: 'percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'discountAmount'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountAmountInput'; ofType: null; }; defaultValue: null }]; };
    'DiscountCustomerSegments': { kind: 'OBJECT'; name: 'DiscountCustomerSegments'; fields: { 'segments': { name: 'segments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Segment'; ofType: null; }; }; }; } }; }; };
    'DiscountCustomerSegmentsInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerSegmentsInput'; isOneOf: false; inputFields: [{ name: 'add'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'remove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'DiscountCustomerSelection': { kind: 'UNION'; name: 'DiscountCustomerSelection'; fields: {}; possibleTypes: 'DiscountCustomerAll' | 'DiscountCustomerSegments' | 'DiscountCustomers'; };
    'DiscountCustomerSelectionInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerSelectionInput'; isOneOf: false; inputFields: [{ name: 'all'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'customers'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomersInput'; ofType: null; }; defaultValue: null }, { name: 'customerSegments'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCustomerSegmentsInput'; ofType: null; }; defaultValue: null }]; };
    'DiscountCustomers': { kind: 'OBJECT'; name: 'DiscountCustomers'; fields: { 'customers': { name: 'customers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Customer'; ofType: null; }; }; }; } }; }; };
    'DiscountCustomersInput': { kind: 'INPUT_OBJECT'; name: 'DiscountCustomersInput'; isOneOf: false; inputFields: [{ name: 'add'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'remove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'DiscountEffect': { kind: 'UNION'; name: 'DiscountEffect'; fields: {}; possibleTypes: 'DiscountAmount' | 'DiscountPercentage'; };
    'DiscountEffectInput': { kind: 'INPUT_OBJECT'; name: 'DiscountEffectInput'; isOneOf: false; inputFields: [{ name: 'percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'amount'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }]; };
    'DiscountErrorCode': { name: 'DiscountErrorCode'; enumValues: 'BLANK' | 'PRESENT' | 'EQUAL_TO' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'INVALID' | 'LESS_THAN_OR_EQUAL_TO' | 'LESS_THAN' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'INTERNAL_ERROR' | 'TOO_MANY_ARGUMENTS' | 'MISSING_ARGUMENT' | 'ACTIVE_PERIOD_OVERLAP' | 'EXCEEDED_MAX' | 'MINIMUM_SUBTOTAL_AND_QUANTITY_RANGE_BOTH_PRESENT' | 'VALUE_OUTSIDE_RANGE' | 'CONFLICT' | 'IMPLICIT_DUPLICATE' | 'DUPLICATE' | 'INCLUSION' | 'INVALID_COMBINES_WITH_FOR_DISCOUNT_CLASS' | 'INVALID_DISCOUNT_CLASS_FOR_PRICE_RULE' | 'MAX_APP_DISCOUNTS'; };
    'DiscountItems': { kind: 'UNION'; name: 'DiscountItems'; fields: {}; possibleTypes: 'AllDiscountItems' | 'DiscountCollections' | 'DiscountProducts'; };
    'DiscountItemsInput': { kind: 'INPUT_OBJECT'; name: 'DiscountItemsInput'; isOneOf: false; inputFields: [{ name: 'products'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountProductsInput'; ofType: null; }; defaultValue: null }, { name: 'collections'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCollectionsInput'; ofType: null; }; defaultValue: null }, { name: 'all'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DiscountMinimumQuantity': { kind: 'OBJECT'; name: 'DiscountMinimumQuantity'; fields: { 'greaterThanOrEqualToQuantity': { name: 'greaterThanOrEqualToQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; }; };
    'DiscountMinimumQuantityInput': { kind: 'INPUT_OBJECT'; name: 'DiscountMinimumQuantityInput'; isOneOf: false; inputFields: [{ name: 'greaterThanOrEqualToQuantity'; type: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; defaultValue: null }]; };
    'DiscountMinimumRequirement': { kind: 'UNION'; name: 'DiscountMinimumRequirement'; fields: {}; possibleTypes: 'DiscountMinimumQuantity' | 'DiscountMinimumSubtotal'; };
    'DiscountMinimumRequirementInput': { kind: 'INPUT_OBJECT'; name: 'DiscountMinimumRequirementInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountMinimumQuantityInput'; ofType: null; }; defaultValue: null }, { name: 'subtotal'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountMinimumSubtotalInput'; ofType: null; }; defaultValue: null }]; };
    'DiscountMinimumSubtotal': { kind: 'OBJECT'; name: 'DiscountMinimumSubtotal'; fields: { 'greaterThanOrEqualToSubtotal': { name: 'greaterThanOrEqualToSubtotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'DiscountMinimumSubtotalInput': { kind: 'INPUT_OBJECT'; name: 'DiscountMinimumSubtotalInput'; isOneOf: false; inputFields: [{ name: 'greaterThanOrEqualToSubtotal'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }]; };
    'DiscountNode': { kind: 'OBJECT'; name: 'DiscountNode'; fields: { 'discount': { name: 'discount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'Discount'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; }; };
    'DiscountNodeConnection': { kind: 'OBJECT'; name: 'DiscountNodeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountNodeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountNode'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DiscountNodeEdge': { kind: 'OBJECT'; name: 'DiscountNodeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountNode'; ofType: null; }; } }; }; };
    'DiscountOnQuantity': { kind: 'OBJECT'; name: 'DiscountOnQuantity'; fields: { 'effect': { name: 'effect'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'DiscountEffect'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountQuantity'; ofType: null; }; } }; }; };
    'DiscountOnQuantityInput': { kind: 'INPUT_OBJECT'; name: 'DiscountOnQuantityInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; defaultValue: null }, { name: 'effect'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountEffectInput'; ofType: null; }; defaultValue: null }]; };
    'DiscountPercentage': { kind: 'OBJECT'; name: 'DiscountPercentage'; fields: { 'percentage': { name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'DiscountProducts': { kind: 'OBJECT'; name: 'DiscountProducts'; fields: { 'productVariants': { name: 'productVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantConnection'; ofType: null; }; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductConnection'; ofType: null; }; } }; }; };
    'DiscountProductsInput': { kind: 'INPUT_OBJECT'; name: 'DiscountProductsInput'; isOneOf: false; inputFields: [{ name: 'productsToAdd'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'productsToRemove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'productVariantsToAdd'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'productVariantsToRemove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'DiscountPurchaseAmount': { kind: 'OBJECT'; name: 'DiscountPurchaseAmount'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; } }; }; };
    'DiscountQuantity': { kind: 'OBJECT'; name: 'DiscountQuantity'; fields: { 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; }; };
    'DiscountRedeemCode': { kind: 'OBJECT'; name: 'DiscountRedeemCode'; fields: { 'asyncUsageCount': { name: 'asyncUsageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'DiscountRedeemCodeBulkAddPayload': { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkAddPayload'; fields: { 'bulkCreation': { name: 'bulkCreation'; type: { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountRedeemCodeBulkCreation': { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreation'; fields: { 'codes': { name: 'codes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreationCodeConnection'; ofType: null; }; } }; 'codesCount': { name: 'codesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'discountCode': { name: 'discountCode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'done': { name: 'done'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'failedCount': { name: 'failedCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'importedCount': { name: 'importedCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DiscountRedeemCodeBulkCreationCode': { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreationCode'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'discountRedeemCode': { name: 'discountRedeemCode'; type: { kind: 'OBJECT'; name: 'DiscountRedeemCode'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountUserError'; ofType: null; }; }; }; } }; }; };
    'DiscountRedeemCodeBulkCreationCodeConnection': { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreationCodeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreationCodeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreationCode'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DiscountRedeemCodeBulkCreationCodeEdge': { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreationCodeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreationCode'; ofType: null; }; } }; }; };
    'DiscountRedeemCodeConnection': { kind: 'OBJECT'; name: 'DiscountRedeemCodeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCodeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCode'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DiscountRedeemCodeEdge': { kind: 'OBJECT'; name: 'DiscountRedeemCodeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountRedeemCode'; ofType: null; }; } }; }; };
    'DiscountRedeemCodeInput': { kind: 'INPUT_OBJECT'; name: 'DiscountRedeemCodeInput'; isOneOf: false; inputFields: [{ name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DiscountShareableUrl': { kind: 'OBJECT'; name: 'DiscountShareableUrl'; fields: { 'targetItemImage': { name: 'targetItemImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountShareableUrlTargetType'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'DiscountShareableUrlTargetType': { name: 'DiscountShareableUrlTargetType'; enumValues: 'HOME' | 'PRODUCT' | 'COLLECTION'; };
    'DiscountShippingDestinationSelection': { kind: 'UNION'; name: 'DiscountShippingDestinationSelection'; fields: {}; possibleTypes: 'DiscountCountries' | 'DiscountCountryAll'; };
    'DiscountShippingDestinationSelectionInput': { kind: 'INPUT_OBJECT'; name: 'DiscountShippingDestinationSelectionInput'; isOneOf: false; inputFields: [{ name: 'all'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'countries'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCountriesInput'; ofType: null; }; defaultValue: null }]; };
    'DiscountSortKeys': { name: 'DiscountSortKeys'; enumValues: 'STARTS_AT' | 'ENDS_AT' | 'TITLE' | 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'; };
    'DiscountStatus': { name: 'DiscountStatus'; enumValues: 'ACTIVE' | 'EXPIRED' | 'SCHEDULED'; };
    'DiscountTargetType': { name: 'DiscountTargetType'; enumValues: 'LINE_ITEM' | 'SHIPPING_LINE'; };
    'DiscountType': { name: 'DiscountType'; enumValues: 'MANUAL' | 'CODE_DISCOUNT' | 'AUTOMATIC_DISCOUNT'; };
    'DiscountUserError': { kind: 'OBJECT'; name: 'DiscountUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'DiscountErrorCode'; ofType: null; } }; 'extraInfo': { name: 'extraInfo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DisplayableError': { kind: 'INTERFACE'; name: 'DisplayableError'; fields: { 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'AbandonmentEmailStateUpdateUserError' | 'AbandonmentUpdateActivitiesDeliveryStatusesUserError' | 'AppSubscriptionTrialExtendUserError' | 'BillingAttemptUserError' | 'BulkMutationUserError' | 'BulkProductResourceFeedbackCreateUserError' | 'BusinessCustomerUserError' | 'CarrierServiceCreateUserError' | 'CarrierServiceDeleteUserError' | 'CarrierServiceUpdateUserError' | 'CartTransformCreateUserError' | 'CartTransformDeleteUserError' | 'CatalogUserError' | 'CheckoutBrandingUpsertUserError' | 'CollectionAddProductsV2UserError' | 'CombinedListingUpdateUserError' | 'CustomerCancelDataErasureUserError' | 'CustomerEmailMarketingConsentUpdateUserError' | 'CustomerMergeUserError' | 'CustomerPaymentMethodCreateFromDuplicationDataUserError' | 'CustomerPaymentMethodGetDuplicationDataUserError' | 'CustomerPaymentMethodGetUpdateUrlUserError' | 'CustomerPaymentMethodRemoteUserError' | 'CustomerPaymentMethodUserError' | 'CustomerRequestDataErasureUserError' | 'CustomerSegmentMembersQueryUserError' | 'CustomerSmsMarketingConsentError' | 'DataSaleOptOutUserError' | 'DelegateAccessTokenCreateUserError' | 'DelegateAccessTokenDestroyUserError' | 'DeliveryCustomizationError' | 'DeliveryLocationLocalPickupSettingsError' | 'DeliveryPromiseProviderUpsertUserError' | 'DiscountUserError' | 'DisputeEvidenceUpdateUserError' | 'ErrorsServerPixelUserError' | 'ErrorsWebPixelUserError' | 'FilesUserError' | 'FulfillmentConstraintRuleCreateUserError' | 'FulfillmentConstraintRuleDeleteUserError' | 'FulfillmentOrderHoldUserError' | 'FulfillmentOrderLineItemsPreparedForPickupUserError' | 'FulfillmentOrderMergeUserError' | 'FulfillmentOrderReleaseHoldUserError' | 'FulfillmentOrderRescheduleUserError' | 'FulfillmentOrderSplitUserError' | 'FulfillmentOrdersReleaseHoldsUserError' | 'FulfillmentOrdersSetFulfillmentDeadlineUserError' | 'GiftCardUserError' | 'InventoryAdjustQuantitiesUserError' | 'InventoryBulkToggleActivationUserError' | 'InventoryMoveQuantitiesUserError' | 'InventorySetOnHandQuantitiesUserError' | 'InventorySetQuantitiesUserError' | 'InventorySetScheduledChangesUserError' | 'LocationActivateUserError' | 'LocationAddUserError' | 'LocationDeactivateUserError' | 'LocationDeleteUserError' | 'LocationEditUserError' | 'MarketCurrencySettingsUserError' | 'MarketUserError' | 'MarketingActivityUserError' | 'MediaUserError' | 'MenuCreateUserError' | 'MenuDeleteUserError' | 'MenuUpdateUserError' | 'MetafieldDefinitionCreateUserError' | 'MetafieldDefinitionDeleteUserError' | 'MetafieldDefinitionPinUserError' | 'MetafieldDefinitionUnpinUserError' | 'MetafieldDefinitionUpdateUserError' | 'MetafieldsSetUserError' | 'MetaobjectUserError' | 'MobilePlatformApplicationUserError' | 'OrderCancelUserError' | 'OrderCreateMandatePaymentUserError' | 'OrderDeleteUserError' | 'OrderEditAddShippingLineUserError' | 'OrderEditRemoveDiscountUserError' | 'OrderEditRemoveShippingLineUserError' | 'OrderEditUpdateDiscountUserError' | 'OrderEditUpdateShippingLineUserError' | 'OrderInvoiceSendUserError' | 'OrderRiskAssessmentCreateUserError' | 'PaymentCustomizationError' | 'PaymentReminderSendUserError' | 'PaymentTermsCreateUserError' | 'PaymentTermsDeleteUserError' | 'PaymentTermsUpdateUserError' | 'PriceListFixedPricesByProductBulkUpdateUserError' | 'PriceListPriceUserError' | 'PriceListUserError' | 'PriceRuleUserError' | 'ProductBundleMutationUserError' | 'ProductChangeStatusUserError' | 'ProductDeleteUserError' | 'ProductDuplicateUserError' | 'ProductFeedCreateUserError' | 'ProductFeedDeleteUserError' | 'ProductFullSyncUserError' | 'ProductOptionUpdateUserError' | 'ProductOptionsCreateUserError' | 'ProductOptionsDeleteUserError' | 'ProductOptionsReorderUserError' | 'ProductSetUserError' | 'ProductVariantRelationshipBulkUpdateUserError' | 'ProductVariantsBulkCreateUserError' | 'ProductVariantsBulkDeleteUserError' | 'ProductVariantsBulkReorderUserError' | 'ProductVariantsBulkUpdateUserError' | 'PubSubWebhookSubscriptionCreateUserError' | 'PubSubWebhookSubscriptionUpdateUserError' | 'PublicationUserError' | 'QuantityPricingByVariantUserError' | 'QuantityRuleUserError' | 'ReturnUserError' | 'SellingPlanGroupUserError' | 'ShopPolicyUserError' | 'ShopResourceFeedbackCreateUserError' | 'StandardMetafieldDefinitionEnableUserError' | 'StoreCreditAccountCreditUserError' | 'StoreCreditAccountDebitUserError' | 'SubscriptionBillingCycleBulkUserError' | 'SubscriptionBillingCycleSkipUserError' | 'SubscriptionBillingCycleUnskipUserError' | 'SubscriptionBillingCycleUserError' | 'SubscriptionContractStatusUpdateUserError' | 'SubscriptionContractUserError' | 'SubscriptionDraftUserError' | 'TaxAppConfigureUserError' | 'TransactionVoidUserError' | 'TranslationUserError' | 'UrlRedirectBulkDeleteByIdsUserError' | 'UrlRedirectBulkDeleteBySavedSearchUserError' | 'UrlRedirectBulkDeleteBySearchUserError' | 'UrlRedirectImportUserError' | 'UrlRedirectUserError' | 'UserError' | 'ValidationUserError'; };
    'DisputeEvidenceUpdatePayload': { kind: 'OBJECT'; name: 'DisputeEvidenceUpdatePayload'; fields: { 'disputeEvidence': { name: 'disputeEvidence'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeEvidence'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DisputeEvidenceUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'DisputeEvidenceUpdateUserError': { kind: 'OBJECT'; name: 'DisputeEvidenceUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'DisputeEvidenceUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DisputeEvidenceUpdateUserErrorCode': { name: 'DisputeEvidenceUpdateUserErrorCode'; enumValues: 'DISPUTE_EVIDENCE_NOT_FOUND' | 'EVIDENCE_ALREADY_ACCEPTED' | 'EVIDENCE_PAST_DUE_DATE' | 'FILES_SIZE_EXCEEDED_LIMIT' | 'TOO_LARGE' | 'INVALID'; };
    'DisputeStatus': { name: 'DisputeStatus'; enumValues: 'ACCEPTED' | 'LOST' | 'NEEDS_RESPONSE' | 'UNDER_REVIEW' | 'WON' | 'CHARGE_REFUNDED'; };
    'DisputeType': { name: 'DisputeType'; enumValues: 'CHARGEBACK' | 'INQUIRY'; };
    'Domain': { kind: 'OBJECT'; name: 'Domain'; fields: { 'host': { name: 'host'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'localization': { name: 'localization'; type: { kind: 'OBJECT'; name: 'DomainLocalization'; ofType: null; } }; 'marketWebPresence': { name: 'marketWebPresence'; type: { kind: 'OBJECT'; name: 'MarketWebPresence'; ofType: null; } }; 'sslEnabled': { name: 'sslEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'DomainLocalization': { kind: 'OBJECT'; name: 'DomainLocalization'; fields: { 'alternateLocales': { name: 'alternateLocales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'defaultLocale': { name: 'defaultLocale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DraftOrder': { kind: 'OBJECT'; name: 'DraftOrder'; fields: { 'acceptAutomaticDiscounts': { name: 'acceptAutomaticDiscounts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'allowDiscountCodesInCheckout': { name: 'allowDiscountCodesInCheckout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'appliedDiscount': { name: 'appliedDiscount'; type: { kind: 'OBJECT'; name: 'DraftOrderAppliedDiscount'; ofType: null; } }; 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'billingAddressMatchesShippingAddress': { name: 'billingAddressMatchesShippingAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'defaultCursor': { name: 'defaultCursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'discountCodes': { name: 'discountCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'invoiceEmailTemplateSubject': { name: 'invoiceEmailTemplateSubject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'invoiceSentAt': { name: 'invoiceSentAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'invoiceUrl': { name: 'invoiceUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderLineItemConnection'; ofType: null; }; } }; 'lineItemsSubtotalPrice': { name: 'lineItemsSubtotalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'localizationExtensions': { name: 'localizationExtensions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocalizationExtensionConnection'; ofType: null; }; } }; 'marketName': { name: 'marketName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'marketRegionCountryCode': { name: 'marketRegionCountryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'note2': { name: 'note2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'paymentTerms': { name: 'paymentTerms'; type: { kind: 'OBJECT'; name: 'PaymentTerms'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'platformDiscounts': { name: 'platformDiscounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderPlatformDiscount'; ofType: null; }; }; }; } }; 'poNumber': { name: 'poNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'presentmentCurrencyCode': { name: 'presentmentCurrencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'purchasingEntity': { name: 'purchasingEntity'; type: { kind: 'UNION'; name: 'PurchasingEntity'; ofType: null; } }; 'ready': { name: 'ready'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'reserveInventoryUntil': { name: 'reserveInventoryUntil'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'shippingAddress': { name: 'shippingAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'shippingLine': { name: 'shippingLine'; type: { kind: 'OBJECT'; name: 'ShippingLine'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DraftOrderStatus'; ofType: null; }; } }; 'subtotalPrice': { name: 'subtotalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'subtotalPriceSet': { name: 'subtotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'taxExempt': { name: 'taxExempt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'taxesIncluded': { name: 'taxesIncluded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'totalDiscountsSet': { name: 'totalDiscountsSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalLineItemsPriceSet': { name: 'totalLineItemsPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalPrice': { name: 'totalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalPriceSet': { name: 'totalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalQuantityOfLineItems': { name: 'totalQuantityOfLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalShippingPrice': { name: 'totalShippingPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalShippingPriceSet': { name: 'totalShippingPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTax': { name: 'totalTax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalTaxSet': { name: 'totalTaxSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalWeight': { name: 'totalWeight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'transformerFingerprint': { name: 'transformerFingerprint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'visibleToCustomer': { name: 'visibleToCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'warnings': { name: 'warnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'DraftOrderWarning'; ofType: null; }; }; }; } }; }; };
    'DraftOrderAppliedDiscount': { kind: 'OBJECT'; name: 'DraftOrderAppliedDiscount'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'amountV2': { name: 'amountV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'valueType': { name: 'valueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DraftOrderAppliedDiscountType'; ofType: null; }; } }; }; };
    'DraftOrderAppliedDiscountInput': { kind: 'INPUT_OBJECT'; name: 'DraftOrderAppliedDiscountInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'amountWithCurrency'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'valueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DraftOrderAppliedDiscountType'; ofType: null; }; }; defaultValue: null }]; };
    'DraftOrderAppliedDiscountType': { name: 'DraftOrderAppliedDiscountType'; enumValues: 'FIXED_AMOUNT' | 'PERCENTAGE'; };
    'DraftOrderBulkAddTagsPayload': { kind: 'OBJECT'; name: 'DraftOrderBulkAddTagsPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderBulkDeletePayload': { kind: 'OBJECT'; name: 'DraftOrderBulkDeletePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderBulkRemoveTagsPayload': { kind: 'OBJECT'; name: 'DraftOrderBulkRemoveTagsPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderBundleAddedWarning': { kind: 'OBJECT'; name: 'DraftOrderBundleAddedWarning'; fields: { 'errorCode': { name: 'errorCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DraftOrderCalculatePayload': { kind: 'OBJECT'; name: 'DraftOrderCalculatePayload'; fields: { 'calculatedDraftOrder': { name: 'calculatedDraftOrder'; type: { kind: 'OBJECT'; name: 'CalculatedDraftOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderCompletePayload': { kind: 'OBJECT'; name: 'DraftOrderCompletePayload'; fields: { 'draftOrder': { name: 'draftOrder'; type: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderConnection': { kind: 'OBJECT'; name: 'DraftOrderConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DraftOrderCreateFromOrderPayload': { kind: 'OBJECT'; name: 'DraftOrderCreateFromOrderPayload'; fields: { 'draftOrder': { name: 'draftOrder'; type: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderCreateMerchantCheckoutPayload': { kind: 'OBJECT'; name: 'DraftOrderCreateMerchantCheckoutPayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderCreatePayload': { kind: 'OBJECT'; name: 'DraftOrderCreatePayload'; fields: { 'draftOrder': { name: 'draftOrder'; type: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderDeleteInput': { kind: 'INPUT_OBJECT'; name: 'DraftOrderDeleteInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DraftOrderDeletePayload': { kind: 'OBJECT'; name: 'DraftOrderDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderDiscountNotAppliedWarning': { kind: 'OBJECT'; name: 'DraftOrderDiscountNotAppliedWarning'; fields: { 'discountCode': { name: 'discountCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discountTitle': { name: 'discountTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errorCode': { name: 'errorCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'priceRule': { name: 'priceRule'; type: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; } }; }; };
    'DraftOrderDuplicatePayload': { kind: 'OBJECT'; name: 'DraftOrderDuplicatePayload'; fields: { 'draftOrder': { name: 'draftOrder'; type: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderEdge': { kind: 'OBJECT'; name: 'DraftOrderEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; }; } }; }; };
    'DraftOrderInput': { kind: 'INPUT_OBJECT'; name: 'DraftOrderInput'; isOneOf: false; inputFields: [{ name: 'appliedDiscount'; type: { kind: 'INPUT_OBJECT'; name: 'DraftOrderAppliedDiscountInput'; ofType: null; }; defaultValue: null }, { name: 'discountCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'acceptAutomaticDiscounts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'billingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'MailingAddressInput'; ofType: null; }; defaultValue: null }, { name: 'customerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'customAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DraftOrderLineItemInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'localizationExtensions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'LocalizationExtensionInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'MailingAddressInput'; ofType: null; }; defaultValue: null }, { name: 'shippingLine'; type: { kind: 'INPUT_OBJECT'; name: 'ShippingLineInput'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'taxExempt'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'useCustomerDefaultAddress'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'visibleToCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'reserveInventoryUntil'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'presentmentCurrencyCode'; type: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; defaultValue: null }, { name: 'marketRegionCountryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'paymentTerms'; type: { kind: 'INPUT_OBJECT'; name: 'PaymentTermsInput'; ofType: null; }; defaultValue: null }, { name: 'purchasingEntity'; type: { kind: 'INPUT_OBJECT'; name: 'PurchasingEntityInput'; ofType: null; }; defaultValue: null }, { name: 'sourceName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'allowDiscountCodesInCheckout'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'poNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'sessionToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'transformerFingerprint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DraftOrderInvoicePreviewPayload': { kind: 'OBJECT'; name: 'DraftOrderInvoicePreviewPayload'; fields: { 'previewHtml': { name: 'previewHtml'; type: { kind: 'SCALAR'; name: 'HTML'; ofType: null; } }; 'previewSubject': { name: 'previewSubject'; type: { kind: 'SCALAR'; name: 'HTML'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderInvoiceSendPayload': { kind: 'OBJECT'; name: 'DraftOrderInvoiceSendPayload'; fields: { 'draftOrder': { name: 'draftOrder'; type: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderLineItem': { kind: 'OBJECT'; name: 'DraftOrderLineItem'; fields: { 'appliedDiscount': { name: 'appliedDiscount'; type: { kind: 'OBJECT'; name: 'DraftOrderAppliedDiscount'; ofType: null; } }; 'approximateDiscountedUnitPriceSet': { name: 'approximateDiscountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'bundleComponents': { name: 'bundleComponents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderLineItem'; ofType: null; }; }; }; } }; 'custom': { name: 'custom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'customAttributesV2': { name: 'customAttributesV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TypedAttribute'; ofType: null; }; }; }; } }; 'discountedTotal': { name: 'discountedTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'discountedTotalSet': { name: 'discountedTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedUnitPrice': { name: 'discountedUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'discountedUnitPriceSet': { name: 'discountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'fulfillmentService': { name: 'fulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'grams': { name: 'grams'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'isGiftCard': { name: 'isGiftCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'originalTotal': { name: 'originalTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'originalTotalSet': { name: 'originalTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'originalUnitPrice': { name: 'originalUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'originalUnitPriceWithCurrency': { name: 'originalUnitPriceWithCurrency'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'taxable': { name: 'taxable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalDiscount': { name: 'totalDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalDiscountSet': { name: 'totalDiscountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'uuid': { name: 'uuid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variantTitle': { name: 'variantTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vendor': { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'weight': { name: 'weight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; }; };
    'DraftOrderLineItemConnection': { kind: 'OBJECT'; name: 'DraftOrderLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DraftOrderLineItemEdge': { kind: 'OBJECT'; name: 'DraftOrderLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderLineItem'; ofType: null; }; } }; }; };
    'DraftOrderLineItemInput': { kind: 'INPUT_OBJECT'; name: 'DraftOrderLineItemInput'; isOneOf: false; inputFields: [{ name: 'appliedDiscount'; type: { kind: 'INPUT_OBJECT'; name: 'DraftOrderAppliedDiscountInput'; ofType: null; }; defaultValue: null }, { name: 'customAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'grams'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'originalUnitPrice'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'originalUnitPriceWithCurrency'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'requiresShipping'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'taxable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'variantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'INPUT_OBJECT'; name: 'WeightInput'; ofType: null; }; defaultValue: null }, { name: 'uuid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'bundleComponents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BundlesDraftOrderBundleLineItemComponentInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'DraftOrderPlatformDiscount': { kind: 'OBJECT'; name: 'DraftOrderPlatformDiscount'; fields: { 'allocations': { name: 'allocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderPlatformDiscountAllocation'; ofType: null; }; }; }; } }; 'automaticDiscount': { name: 'automaticDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'bxgyDiscount': { name: 'bxgyDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'code': { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountClass'; ofType: null; }; } }; 'discountNode': { name: 'discountNode'; type: { kind: 'OBJECT'; name: 'DiscountNode'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'presentationLevel': { name: 'presentationLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'shortSummary': { name: 'shortSummary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'totalAmountPriceSet': { name: 'totalAmountPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'DraftOrderPlatformDiscountAllocation': { kind: 'OBJECT'; name: 'DraftOrderPlatformDiscountAllocation'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'reductionAmount': { name: 'reductionAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'reductionAmountSet': { name: 'reductionAmountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'target': { name: 'target'; type: { kind: 'UNION'; name: 'DraftOrderPlatformDiscountAllocationTarget'; ofType: null; } }; }; };
    'DraftOrderPlatformDiscountAllocationTarget': { kind: 'UNION'; name: 'DraftOrderPlatformDiscountAllocationTarget'; fields: {}; possibleTypes: 'CalculatedDraftOrderLineItem' | 'DraftOrderLineItem' | 'ShippingLine'; };
    'DraftOrderSortKeys': { name: 'DraftOrderSortKeys'; enumValues: 'NUMBER' | 'UPDATED_AT' | 'STATUS' | 'TOTAL_PRICE' | 'CUSTOMER_NAME' | 'ID' | 'RELEVANCE'; };
    'DraftOrderStatus': { name: 'DraftOrderStatus'; enumValues: 'COMPLETED' | 'INVOICE_SENT' | 'OPEN'; };
    'DraftOrderTag': { kind: 'OBJECT'; name: 'DraftOrderTag'; fields: { 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DraftOrderUpdatePayload': { kind: 'OBJECT'; name: 'DraftOrderUpdatePayload'; fields: { 'draftOrder': { name: 'draftOrder'; type: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderWarning': { kind: 'INTERFACE'; name: 'DraftOrderWarning'; fields: { 'errorCode': { name: 'errorCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'DraftOrderBundleAddedWarning' | 'DraftOrderDiscountNotAppliedWarning'; };
    'Duty': { kind: 'OBJECT'; name: 'Duty'; fields: { 'countryCodeOfOrigin': { name: 'countryCodeOfOrigin'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'harmonizedSystemCode': { name: 'harmonizedSystemCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; }; };
    'DutySale': { kind: 'OBJECT'; name: 'DutySale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'duty': { name: 'duty'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Duty'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'EditableProperty': { kind: 'OBJECT'; name: 'EditableProperty'; fields: { 'locked': { name: 'locked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'SCALAR'; name: 'FormattedString'; ofType: null; } }; }; };
    'EmailInput': { kind: 'INPUT_OBJECT'; name: 'EmailInput'; isOneOf: false; inputFields: [{ name: 'subject'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'to'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'from'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'body'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'bcc'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'customMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ErrorsServerPixelUserError': { kind: 'OBJECT'; name: 'ErrorsServerPixelUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ErrorsServerPixelUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ErrorsServerPixelUserErrorCode': { name: 'ErrorsServerPixelUserErrorCode'; enumValues: 'NOT_FOUND' | 'ALREADY_EXISTS' | 'PUB_SUB_ERROR' | 'NEEDS_CONFIGURATION_TO_CONNECT'; };
    'ErrorsWebPixelUserError': { kind: 'OBJECT'; name: 'ErrorsWebPixelUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ErrorsWebPixelUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ErrorsWebPixelUserErrorCode': { name: 'ErrorsWebPixelUserErrorCode'; enumValues: 'BLANK' | 'TAKEN' | 'NOT_FOUND' | 'INVALID_SETTINGS' | 'UNABLE_TO_DELETE'; };
    'Event': { kind: 'INTERFACE'; name: 'Event'; fields: { 'appTitle': { name: 'appTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'attributeToApp': { name: 'attributeToApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'attributeToUser': { name: 'attributeToUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'criticalAlert': { name: 'criticalAlert'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'FormattedString'; ofType: null; }; } }; }; possibleTypes: 'BasicEvent' | 'CommentEvent'; };
    'EventBridgeServerPixelUpdatePayload': { kind: 'OBJECT'; name: 'EventBridgeServerPixelUpdatePayload'; fields: { 'serverPixel': { name: 'serverPixel'; type: { kind: 'OBJECT'; name: 'ServerPixel'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ErrorsServerPixelUserError'; ofType: null; }; }; }; } }; }; };
    'EventBridgeWebhookSubscriptionCreatePayload': { kind: 'OBJECT'; name: 'EventBridgeWebhookSubscriptionCreatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; 'webhookSubscription': { name: 'webhookSubscription'; type: { kind: 'OBJECT'; name: 'WebhookSubscription'; ofType: null; } }; }; };
    'EventBridgeWebhookSubscriptionInput': { kind: 'INPUT_OBJECT'; name: 'EventBridgeWebhookSubscriptionInput'; isOneOf: false; inputFields: [{ name: 'arn'; type: { kind: 'SCALAR'; name: 'ARN'; ofType: null; }; defaultValue: null }, { name: 'format'; type: { kind: 'ENUM'; name: 'WebhookSubscriptionFormat'; ofType: null; }; defaultValue: null }, { name: 'includeFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'filter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metafieldNamespaces'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'EventBridgeWebhookSubscriptionUpdatePayload': { kind: 'OBJECT'; name: 'EventBridgeWebhookSubscriptionUpdatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; 'webhookSubscription': { name: 'webhookSubscription'; type: { kind: 'OBJECT'; name: 'WebhookSubscription'; ofType: null; } }; }; };
    'EventConnection': { kind: 'OBJECT'; name: 'EventConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Event'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'EventEdge': { kind: 'OBJECT'; name: 'EventEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Event'; ofType: null; }; } }; }; };
    'EventSortKeys': { name: 'EventSortKeys'; enumValues: 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'ExchangeLineItem': { kind: 'OBJECT'; name: 'ExchangeLineItem'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; } }; }; };
    'ExchangeLineItemAppliedDiscountInput': { kind: 'INPUT_OBJECT'; name: 'ExchangeLineItemAppliedDiscountInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ExchangeLineItemAppliedDiscountValueInput'; ofType: null; }; }; defaultValue: null }]; };
    'ExchangeLineItemAppliedDiscountValueInput': { kind: 'INPUT_OBJECT'; name: 'ExchangeLineItemAppliedDiscountValueInput'; isOneOf: true; inputFields: [{ name: 'amount'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'ExchangeLineItemConnection': { kind: 'OBJECT'; name: 'ExchangeLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ExchangeLineItemEdge': { kind: 'OBJECT'; name: 'ExchangeLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeLineItem'; ofType: null; }; } }; }; };
    'ExchangeLineItemInput': { kind: 'INPUT_OBJECT'; name: 'ExchangeLineItemInput'; isOneOf: false; inputFields: [{ name: 'giftCardCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'variantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'appliedDiscount'; type: { kind: 'INPUT_OBJECT'; name: 'ExchangeLineItemAppliedDiscountInput'; ofType: null; }; defaultValue: null }]; };
    'ExchangeV2': { kind: 'OBJECT'; name: 'ExchangeV2'; fields: { 'additions': { name: 'additions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeV2Additions'; ofType: null; }; } }; 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refunds': { name: 'refunds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Refund'; ofType: null; }; }; }; } }; 'returns': { name: 'returns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeV2Returns'; ofType: null; }; } }; 'staffMember': { name: 'staffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'totalAmountProcessedSet': { name: 'totalAmountProcessedSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalPriceSet': { name: 'totalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'transactions': { name: 'transactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderTransaction'; ofType: null; }; }; }; } }; }; };
    'ExchangeV2Additions': { kind: 'OBJECT'; name: 'ExchangeV2Additions'; fields: { 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeV2LineItem'; ofType: null; }; }; }; } }; 'subtotalPriceSet': { name: 'subtotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'totalPriceSet': { name: 'totalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'ExchangeV2Connection': { kind: 'OBJECT'; name: 'ExchangeV2Connection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeV2Edge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeV2'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ExchangeV2Edge': { kind: 'OBJECT'; name: 'ExchangeV2Edge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeV2'; ofType: null; }; } }; }; };
    'ExchangeV2LineItem': { kind: 'OBJECT'; name: 'ExchangeV2LineItem'; fields: { 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'discountedTotalSet': { name: 'discountedTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedUnitPriceSet': { name: 'discountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'fulfillmentService': { name: 'fulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'giftCards': { name: 'giftCards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; }; }; }; } }; 'isGiftCard': { name: 'isGiftCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'originalTotalSet': { name: 'originalTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'taxable': { name: 'taxable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variantTitle': { name: 'variantTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vendor': { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ExchangeV2Returns': { kind: 'OBJECT'; name: 'ExchangeV2Returns'; fields: { 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeV2LineItem'; ofType: null; }; }; }; } }; 'orderDiscountAmountSet': { name: 'orderDiscountAmountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'shippingRefundAmountSet': { name: 'shippingRefundAmountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'subtotalPriceSet': { name: 'subtotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'tipRefundAmountSet': { name: 'tipRefundAmountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalPriceSet': { name: 'totalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'ExternalVideo': { kind: 'OBJECT'; name: 'ExternalVideo'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'embedUrl': { name: 'embedUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'embeddedUrl': { name: 'embeddedUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'fileErrors': { name: 'fileErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FileError'; ofType: null; }; }; }; } }; 'fileStatus': { name: 'fileStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileStatus'; ofType: null; }; } }; 'host': { name: 'host'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaHost'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mediaContentType': { name: 'mediaContentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaContentType'; ofType: null; }; } }; 'mediaErrors': { name: 'mediaErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaError'; ofType: null; }; }; }; } }; 'mediaWarnings': { name: 'mediaWarnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaWarning'; ofType: null; }; }; }; } }; 'originUrl': { name: 'originUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'preview': { name: 'preview'; type: { kind: 'OBJECT'; name: 'MediaPreviewImage'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaStatus'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'FailedRequirement': { kind: 'OBJECT'; name: 'FailedRequirement'; fields: { 'action': { name: 'action'; type: { kind: 'OBJECT'; name: 'NavigationItem'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Fee': { kind: 'INTERFACE'; name: 'Fee'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'RestockingFee' | 'ReturnShippingFee'; };
    'FeeSale': { kind: 'OBJECT'; name: 'FeeSale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'fee': { name: 'fee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Fee'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'File': { kind: 'INTERFACE'; name: 'File'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'fileErrors': { name: 'fileErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FileError'; ofType: null; }; }; }; } }; 'fileStatus': { name: 'fileStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileStatus'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'preview': { name: 'preview'; type: { kind: 'OBJECT'; name: 'MediaPreviewImage'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; possibleTypes: 'ExternalVideo' | 'GenericFile' | 'MediaImage' | 'Model3d' | 'Video'; };
    'FileAcknowledgeUpdateFailedPayload': { kind: 'OBJECT'; name: 'FileAcknowledgeUpdateFailedPayload'; fields: { 'files': { name: 'files'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'File'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FilesUserError'; ofType: null; }; }; }; } }; }; };
    'FileConnection': { kind: 'OBJECT'; name: 'FileConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FileEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'File'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'FileContentType': { name: 'FileContentType'; enumValues: 'IMAGE' | 'FILE' | 'VIDEO' | 'EXTERNAL_VIDEO' | 'MODEL_3D'; };
    'FileCreateInput': { kind: 'INPUT_OBJECT'; name: 'FileCreateInput'; isOneOf: false; inputFields: [{ name: 'filename'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'contentType'; type: { kind: 'ENUM'; name: 'FileContentType'; ofType: null; }; defaultValue: null }, { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'duplicateResolutionMode'; type: { kind: 'ENUM'; name: 'FileCreateInputDuplicateResolutionMode'; ofType: null; }; defaultValue: "APPEND_UUID" }, { name: 'originalSource'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'FileCreateInputDuplicateResolutionMode': { name: 'FileCreateInputDuplicateResolutionMode'; enumValues: 'APPEND_UUID' | 'RAISE_ERROR' | 'REPLACE'; };
    'FileCreatePayload': { kind: 'OBJECT'; name: 'FileCreatePayload'; fields: { 'files': { name: 'files'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'File'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FilesUserError'; ofType: null; }; }; }; } }; }; };
    'FileDeletePayload': { kind: 'OBJECT'; name: 'FileDeletePayload'; fields: { 'deletedFileIds': { name: 'deletedFileIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FilesUserError'; ofType: null; }; }; }; } }; }; };
    'FileEdge': { kind: 'OBJECT'; name: 'FileEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'File'; ofType: null; }; } }; }; };
    'FileError': { kind: 'OBJECT'; name: 'FileError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileErrorCode'; ofType: null; }; } }; 'details': { name: 'details'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FileErrorCode': { name: 'FileErrorCode'; enumValues: 'UNKNOWN' | 'INVALID_SIGNED_URL' | 'IMAGE_DOWNLOAD_FAILURE' | 'IMAGE_PROCESSING_FAILURE' | 'MEDIA_TIMEOUT_ERROR' | 'EXTERNAL_VIDEO_NOT_FOUND' | 'EXTERNAL_VIDEO_UNLISTED' | 'EXTERNAL_VIDEO_INVALID_ASPECT_RATIO' | 'EXTERNAL_VIDEO_EMBED_DISABLED' | 'EXTERNAL_VIDEO_EMBED_NOT_FOUND_OR_TRANSCODING' | 'GENERIC_FILE_DOWNLOAD_FAILURE' | 'GENERIC_FILE_INVALID_SIZE' | 'VIDEO_METADATA_READ_ERROR' | 'VIDEO_INVALID_FILETYPE_ERROR' | 'VIDEO_MIN_WIDTH_ERROR' | 'VIDEO_MAX_WIDTH_ERROR' | 'VIDEO_MIN_HEIGHT_ERROR' | 'VIDEO_MAX_HEIGHT_ERROR' | 'VIDEO_MIN_DURATION_ERROR' | 'VIDEO_MAX_DURATION_ERROR' | 'VIDEO_VALIDATION_ERROR' | 'MODEL3D_VALIDATION_ERROR' | 'MODEL3D_THUMBNAIL_GENERATION_ERROR' | 'MODEL3D_THUMBNAIL_REGENERATION_ERROR' | 'MODEL3D_GLB_TO_USDZ_CONVERSION_ERROR' | 'MODEL3D_GLB_OUTPUT_CREATION_ERROR' | 'MODEL3D_PROCESSING_FAILURE' | 'UNSUPPORTED_IMAGE_FILE_TYPE' | 'INVALID_IMAGE_FILE_SIZE' | 'INVALID_IMAGE_ASPECT_RATIO' | 'INVALID_IMAGE_RESOLUTION' | 'FILE_STORAGE_LIMIT_EXCEEDED' | 'DUPLICATE_FILENAME_ERROR'; };
    'FileSortKeys': { name: 'FileSortKeys'; enumValues: 'FILENAME' | 'ORIGINAL_UPLOAD_SIZE' | 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'; };
    'FileStatus': { name: 'FileStatus'; enumValues: 'UPLOADED' | 'PROCESSING' | 'READY' | 'FAILED'; };
    'FileUpdateInput': { kind: 'INPUT_OBJECT'; name: 'FileUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'originalSource'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'previewImageSource'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filename'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'referencesToAdd'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'referencesToRemove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'FileUpdatePayload': { kind: 'OBJECT'; name: 'FileUpdatePayload'; fields: { 'files': { name: 'files'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'File'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FilesUserError'; ofType: null; }; }; }; } }; }; };
    'FilesErrorCode': { name: 'FilesErrorCode'; enumValues: 'INVALID' | 'FILE_DOES_NOT_EXIST' | 'FILE_LOCKED' | 'UNSUPPORTED_MEDIA_TYPE_FOR_FILENAME_UPDATE' | 'TOO_MANY_ARGUMENTS' | 'BLANK_SEARCH' | 'MISSING_ARGUMENTS' | 'INVALID_QUERY' | 'INVALID_FILENAME_EXTENSION' | 'INVALID_FILENAME' | 'FILENAME_ALREADY_EXISTS' | 'UNACCEPTABLE_UNVERIFIED_TRIAL_ASSET' | 'UNACCEPTABLE_ASSET' | 'UNACCEPTABLE_TRIAL_ASSET' | 'ALT_VALUE_LIMIT_EXCEEDED' | 'NON_READY_STATE' | 'NON_IMAGE_MEDIA_PER_SHOP_LIMIT_EXCEEDED' | 'MISMATCHED_FILENAME_AND_ORIGINAL_SOURCE' | 'INVALID_DUPLICATE_MODE_FOR_TYPE' | 'INVALID_IMAGE_SOURCE_URL' | 'MISSING_FILENAME_FOR_DUPLICATE_MODE_REPLACE' | 'PRODUCT_MEDIA_LIMIT_EXCEEDED' | 'UNSUPPORTED_FILE_REFERENCE' | 'REFERENCE_TARGET_DOES_NOT_EXIST' | 'TOO_MANY_FILE_REFERENCE'; };
    'FilesUserError': { kind: 'OBJECT'; name: 'FilesUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FilesErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FilterOption': { kind: 'OBJECT'; name: 'FilterOption'; fields: { 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FinancialSummaryDiscountAllocation': { kind: 'OBJECT'; name: 'FinancialSummaryDiscountAllocation'; fields: { 'approximateAllocatedAmountPerItem': { name: 'approximateAllocatedAmountPerItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountApplication': { name: 'discountApplication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FinancialSummaryDiscountApplication'; ofType: null; }; } }; }; };
    'FinancialSummaryDiscountApplication': { kind: 'OBJECT'; name: 'FinancialSummaryDiscountApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; }; };
    'Float': unknown;
    'FlowGenerateSignaturePayload': { kind: 'OBJECT'; name: 'FlowGenerateSignaturePayload'; fields: { 'payload': { name: 'payload'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'signature': { name: 'signature'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FlowTriggerReceivePayload': { kind: 'OBJECT'; name: 'FlowTriggerReceivePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FormattedString': unknown;
    'Fulfillment': { kind: 'OBJECT'; name: 'Fulfillment'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'deliveredAt': { name: 'deliveredAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'displayStatus': { name: 'displayStatus'; type: { kind: 'ENUM'; name: 'FulfillmentDisplayStatus'; ofType: null; } }; 'estimatedDeliveryAt': { name: 'estimatedDeliveryAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentEventConnection'; ofType: null; }; } }; 'fulfillmentLineItems': { name: 'fulfillmentLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLineItemConnection'; ofType: null; }; } }; 'fulfillmentOrders': { name: 'fulfillmentOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inTransitAt': { name: 'inTransitAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; 'originAddress': { name: 'originAddress'; type: { kind: 'OBJECT'; name: 'FulfillmentOriginAddress'; ofType: null; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'service': { name: 'service'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentStatus'; ofType: null; }; } }; 'totalQuantity': { name: 'totalQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'trackingInfo': { name: 'trackingInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentTrackingInfo'; ofType: null; }; }; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'FulfillmentCancelPayload': { kind: 'OBJECT'; name: 'FulfillmentCancelPayload'; fields: { 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentConnection': { kind: 'OBJECT'; name: 'FulfillmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'FulfillmentConstraintRule': { kind: 'OBJECT'; name: 'FulfillmentConstraintRule'; fields: { 'function': { name: 'function'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyFunction'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; }; };
    'FulfillmentConstraintRuleCreatePayload': { kind: 'OBJECT'; name: 'FulfillmentConstraintRuleCreatePayload'; fields: { 'fulfillmentConstraintRule': { name: 'fulfillmentConstraintRule'; type: { kind: 'OBJECT'; name: 'FulfillmentConstraintRule'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentConstraintRuleCreateUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentConstraintRuleCreateUserError': { kind: 'OBJECT'; name: 'FulfillmentConstraintRuleCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentConstraintRuleCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentConstraintRuleCreateUserErrorCode': { name: 'FulfillmentConstraintRuleCreateUserErrorCode'; enumValues: 'INPUT_INVALID' | 'FUNCTION_NOT_FOUND' | 'FUNCTION_ALREADY_REGISTERED' | 'FUNCTION_DOES_NOT_IMPLEMENT' | 'CUSTOM_APP_FUNCTION_NOT_ELIGIBLE' | 'FUNCTION_PENDING_DELETION' | 'MAXIMUM_FULFILLMENT_CONSTRAINT_RULES_REACHED'; };
    'FulfillmentConstraintRuleDeletePayload': { kind: 'OBJECT'; name: 'FulfillmentConstraintRuleDeletePayload'; fields: { 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentConstraintRuleDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentConstraintRuleDeleteUserError': { kind: 'OBJECT'; name: 'FulfillmentConstraintRuleDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentConstraintRuleDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentConstraintRuleDeleteUserErrorCode': { name: 'FulfillmentConstraintRuleDeleteUserErrorCode'; enumValues: 'NOT_FOUND' | 'UNAUTHORIZED_APP_SCOPE'; };
    'FulfillmentCreateV2Payload': { kind: 'OBJECT'; name: 'FulfillmentCreateV2Payload'; fields: { 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentDisplayStatus': { name: 'FulfillmentDisplayStatus'; enumValues: 'ATTEMPTED_DELIVERY' | 'CANCELED' | 'CONFIRMED' | 'DELIVERED' | 'FAILURE' | 'FULFILLED' | 'IN_TRANSIT' | 'LABEL_PRINTED' | 'LABEL_PURCHASED' | 'LABEL_VOIDED' | 'MARKED_AS_FULFILLED' | 'NOT_DELIVERED' | 'OUT_FOR_DELIVERY' | 'READY_FOR_PICKUP' | 'PICKED_UP' | 'SUBMITTED'; };
    'FulfillmentEdge': { kind: 'OBJECT'; name: 'FulfillmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; }; } }; }; };
    'FulfillmentEvent': { kind: 'OBJECT'; name: 'FulfillmentEvent'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'estimatedDeliveryAt': { name: 'estimatedDeliveryAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'happenedAt': { name: 'happenedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'latitude': { name: 'latitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'longitude': { name: 'longitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentEventStatus'; ofType: null; }; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentEventConnection': { kind: 'OBJECT'; name: 'FulfillmentEventConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentEventEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentEvent'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'FulfillmentEventCreatePayload': { kind: 'OBJECT'; name: 'FulfillmentEventCreatePayload'; fields: { 'fulfillmentEvent': { name: 'fulfillmentEvent'; type: { kind: 'OBJECT'; name: 'FulfillmentEvent'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentEventEdge': { kind: 'OBJECT'; name: 'FulfillmentEventEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentEvent'; ofType: null; }; } }; }; };
    'FulfillmentEventInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentEventInput'; isOneOf: false; inputFields: [{ name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'estimatedDeliveryAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'happenedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'fulfillmentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'latitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'longitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentEventStatus'; ofType: null; }; }; defaultValue: null }, { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'FulfillmentEventSortKeys': { name: 'FulfillmentEventSortKeys'; enumValues: 'HAPPENED_AT' | 'ID' | 'RELEVANCE'; };
    'FulfillmentEventStatus': { name: 'FulfillmentEventStatus'; enumValues: 'LABEL_PURCHASED' | 'LABEL_PRINTED' | 'READY_FOR_PICKUP' | 'CONFIRMED' | 'IN_TRANSIT' | 'OUT_FOR_DELIVERY' | 'ATTEMPTED_DELIVERY' | 'DELIVERED' | 'FAILURE'; };
    'FulfillmentHold': { kind: 'OBJECT'; name: 'FulfillmentHold'; fields: { 'heldBy': { name: 'heldBy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentHoldReason'; ofType: null; }; } }; 'reasonNotes': { name: 'reasonNotes'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentHoldReason': { name: 'FulfillmentHoldReason'; enumValues: 'AWAITING_PAYMENT' | 'HIGH_RISK_OF_FRAUD' | 'INCORRECT_ADDRESS' | 'INVENTORY_OUT_OF_STOCK' | 'UNKNOWN_DELIVERY_DATE' | 'ONLINE_STORE_POST_PURCHASE_CROSS_SELL' | 'AWAITING_RETURN_ITEMS' | 'OTHER'; };
    'FulfillmentLineItem': { kind: 'OBJECT'; name: 'FulfillmentLineItem'; fields: { 'discountedTotal': { name: 'discountedTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'discountedTotalSet': { name: 'discountedTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; } }; 'originalTotal': { name: 'originalTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'originalTotalSet': { name: 'originalTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'FulfillmentLineItemConnection': { kind: 'OBJECT'; name: 'FulfillmentLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'FulfillmentLineItemEdge': { kind: 'OBJECT'; name: 'FulfillmentLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLineItem'; ofType: null; }; } }; }; };
    'FulfillmentOrder': { kind: 'OBJECT'; name: 'FulfillmentOrder'; fields: { 'assignedLocation': { name: 'assignedLocation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderAssignedLocation'; ofType: null; }; } }; 'channelId': { name: 'channelId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'deliveryMethod': { name: 'deliveryMethod'; type: { kind: 'OBJECT'; name: 'DeliveryMethod'; ofType: null; } }; 'destination': { name: 'destination'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderDestination'; ofType: null; } }; 'fulfillAt': { name: 'fulfillAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'fulfillBy': { name: 'fulfillBy'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'fulfillmentHolds': { name: 'fulfillmentHolds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentHold'; ofType: null; }; }; }; } }; 'fulfillmentOrdersForMerge': { name: 'fulfillmentOrdersForMerge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderConnection'; ofType: null; }; } }; 'fulfillments': { name: 'fulfillments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'internationalDuties': { name: 'internationalDuties'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderInternationalDuties'; ofType: null; } }; 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemConnection'; ofType: null; }; } }; 'locationsForMove': { name: 'locationsForMove'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLocationForMoveConnection'; ofType: null; }; } }; 'merchantRequests': { name: 'merchantRequests'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderMerchantRequestConnection'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; 'orderId': { name: 'orderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'orderName': { name: 'orderName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'orderProcessedAt': { name: 'orderProcessedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'requestStatus': { name: 'requestStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentOrderRequestStatus'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentOrderStatus'; ofType: null; }; } }; 'supportedActions': { name: 'supportedActions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderSupportedAction'; ofType: null; }; }; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'FulfillmentOrderAcceptCancellationRequestPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderAcceptCancellationRequestPayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderAcceptFulfillmentRequestPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderAcceptFulfillmentRequestPayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderAction': { name: 'FulfillmentOrderAction'; enumValues: 'CREATE_FULFILLMENT' | 'REQUEST_FULFILLMENT' | 'CANCEL_FULFILLMENT_ORDER' | 'MOVE' | 'REQUEST_CANCELLATION' | 'MARK_AS_OPEN' | 'RELEASE_HOLD' | 'HOLD' | 'EXTERNAL' | 'SPLIT' | 'MERGE'; };
    'FulfillmentOrderAssignedLocation': { kind: 'OBJECT'; name: 'FulfillmentOrderAssignedLocation'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address2': { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentOrderAssignmentStatus': { name: 'FulfillmentOrderAssignmentStatus'; enumValues: 'CANCELLATION_REQUESTED' | 'FULFILLMENT_REQUESTED' | 'FULFILLMENT_ACCEPTED' | 'FULFILLMENT_UNSUBMITTED'; };
    'FulfillmentOrderCancelPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderCancelPayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'replacementFulfillmentOrder': { name: 'replacementFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderClosePayload': { kind: 'OBJECT'; name: 'FulfillmentOrderClosePayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderConnection': { kind: 'OBJECT'; name: 'FulfillmentOrderConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'FulfillmentOrderDestination': { kind: 'OBJECT'; name: 'FulfillmentOrderDestination'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address2': { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'company': { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentOrderEdge': { kind: 'OBJECT'; name: 'FulfillmentOrderEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; }; } }; }; };
    'FulfillmentOrderHoldInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderHoldInput'; isOneOf: false; inputFields: [{ name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentHoldReason'; ofType: null; }; }; defaultValue: null }, { name: 'reasonNotes'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notifyMerchant'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fulfillmentOrderLineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderLineItemInput'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'FulfillmentOrderHoldPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderHoldPayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'remainingFulfillmentOrder': { name: 'remainingFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderHoldUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderHoldUserError': { kind: 'OBJECT'; name: 'FulfillmentOrderHoldUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentOrderHoldUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentOrderHoldUserErrorCode': { name: 'FulfillmentOrderHoldUserErrorCode'; enumValues: 'FULFILLMENT_ORDER_NOT_FOUND' | 'TAKEN' | 'GREATER_THAN_ZERO' | 'INVALID_LINE_ITEM_QUANTITY'; };
    'FulfillmentOrderInternationalDuties': { kind: 'OBJECT'; name: 'FulfillmentOrderInternationalDuties'; fields: { 'incoterm': { name: 'incoterm'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentOrderLineItem': { kind: 'OBJECT'; name: 'FulfillmentOrderLineItem'; fields: { 'financialSummaries': { name: 'financialSummaries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemFinancialSummary'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'inventoryItemId': { name: 'inventoryItemId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'productTitle': { name: 'productTitle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'remainingQuantity': { name: 'remainingQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalQuantity': { name: 'totalQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variantTitle': { name: 'variantTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vendor': { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warnings': { name: 'warnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemWarning'; ofType: null; }; }; }; } }; 'weight': { name: 'weight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; }; };
    'FulfillmentOrderLineItemConnection': { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'FulfillmentOrderLineItemEdge': { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItem'; ofType: null; }; } }; }; };
    'FulfillmentOrderLineItemFinancialSummary': { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemFinancialSummary'; fields: { 'approximateDiscountedUnitPriceSet': { name: 'approximateDiscountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountAllocations': { name: 'discountAllocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FinancialSummaryDiscountAllocation'; ofType: null; }; }; }; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'FulfillmentOrderLineItemInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderLineItemInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'FulfillmentOrderLineItemWarning': { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemWarning'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentOrderLineItemsInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderLineItemsInput'; isOneOf: false; inputFields: [{ name: 'fulfillmentOrderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'fulfillmentOrderLineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderLineItemInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'FulfillmentOrderLineItemsPreparedForPickupInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderLineItemsPreparedForPickupInput'; isOneOf: false; inputFields: [{ name: 'lineItemsByFulfillmentOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PreparedFulfillmentOrderLineItemsInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'FulfillmentOrderLineItemsPreparedForPickupPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemsPreparedForPickupPayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemsPreparedForPickupUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderLineItemsPreparedForPickupUserError': { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemsPreparedForPickupUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentOrderLineItemsPreparedForPickupUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentOrderLineItemsPreparedForPickupUserErrorCode': { name: 'FulfillmentOrderLineItemsPreparedForPickupUserErrorCode'; enumValues: 'NO_LINE_ITEMS_TO_PREPARE_FOR_FULFILLMENT_ORDER' | 'FULFILLMENT_ORDER_INVALID' | 'UNABLE_TO_PREPARE_QUANTITY'; };
    'FulfillmentOrderLocationForMove': { kind: 'OBJECT'; name: 'FulfillmentOrderLocationForMove'; fields: { 'availableLineItems': { name: 'availableLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemConnection'; ofType: null; }; } }; 'availableLineItemsCount': { name: 'availableLineItemsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'movable': { name: 'movable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'unavailableLineItems': { name: 'unavailableLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemConnection'; ofType: null; }; } }; 'unavailableLineItemsCount': { name: 'unavailableLineItemsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; }; };
    'FulfillmentOrderLocationForMoveConnection': { kind: 'OBJECT'; name: 'FulfillmentOrderLocationForMoveConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLocationForMoveEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLocationForMove'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'FulfillmentOrderLocationForMoveEdge': { kind: 'OBJECT'; name: 'FulfillmentOrderLocationForMoveEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderLocationForMove'; ofType: null; }; } }; }; };
    'FulfillmentOrderMerchantRequest': { kind: 'OBJECT'; name: 'FulfillmentOrderMerchantRequest'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentOrderMerchantRequestKind'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'requestOptions': { name: 'requestOptions'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'responseData': { name: 'responseData'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'sentAt': { name: 'sentAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'FulfillmentOrderMerchantRequestConnection': { kind: 'OBJECT'; name: 'FulfillmentOrderMerchantRequestConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderMerchantRequestEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderMerchantRequest'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'FulfillmentOrderMerchantRequestEdge': { kind: 'OBJECT'; name: 'FulfillmentOrderMerchantRequestEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderMerchantRequest'; ofType: null; }; } }; }; };
    'FulfillmentOrderMerchantRequestKind': { name: 'FulfillmentOrderMerchantRequestKind'; enumValues: 'FULFILLMENT_REQUEST' | 'CANCELLATION_REQUEST'; };
    'FulfillmentOrderMergeInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderMergeInput'; isOneOf: false; inputFields: [{ name: 'mergeIntents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderMergeInputMergeIntent'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'FulfillmentOrderMergeInputMergeIntent': { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderMergeInputMergeIntent'; isOneOf: false; inputFields: [{ name: 'fulfillmentOrderLineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderLineItemInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'fulfillmentOrderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'FulfillmentOrderMergePayload': { kind: 'OBJECT'; name: 'FulfillmentOrderMergePayload'; fields: { 'fulfillmentOrderMerges': { name: 'fulfillmentOrderMerges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderMergeResult'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderMergeUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderMergeResult': { kind: 'OBJECT'; name: 'FulfillmentOrderMergeResult'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; }; } }; }; };
    'FulfillmentOrderMergeUserError': { kind: 'OBJECT'; name: 'FulfillmentOrderMergeUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentOrderMergeUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentOrderMergeUserErrorCode': { name: 'FulfillmentOrderMergeUserErrorCode'; enumValues: 'FULFILLMENT_ORDER_NOT_FOUND' | 'GREATER_THAN' | 'INVALID_LINE_ITEM_QUANTITY'; };
    'FulfillmentOrderMovePayload': { kind: 'OBJECT'; name: 'FulfillmentOrderMovePayload'; fields: { 'movedFulfillmentOrder': { name: 'movedFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'originalFulfillmentOrder': { name: 'originalFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'remainingFulfillmentOrder': { name: 'remainingFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderOpenPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderOpenPayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderRejectCancellationRequestPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderRejectCancellationRequestPayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderRejectFulfillmentRequestPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderRejectFulfillmentRequestPayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderRejectionReason': { name: 'FulfillmentOrderRejectionReason'; enumValues: 'INCORRECT_ADDRESS' | 'INVENTORY_OUT_OF_STOCK' | 'INELIGIBLE_PRODUCT' | 'UNDELIVERABLE_DESTINATION' | 'OTHER'; };
    'FulfillmentOrderReleaseHoldPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderReleaseHoldPayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderReleaseHoldUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderReleaseHoldUserError': { kind: 'OBJECT'; name: 'FulfillmentOrderReleaseHoldUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentOrderReleaseHoldUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentOrderReleaseHoldUserErrorCode': { name: 'FulfillmentOrderReleaseHoldUserErrorCode'; enumValues: 'FULFILLMENT_ORDER_NOT_FOUND' | 'GREATER_THAN_ZERO' | 'INVALID_LINE_ITEM_QUANTITY'; };
    'FulfillmentOrderRequestStatus': { name: 'FulfillmentOrderRequestStatus'; enumValues: 'UNSUBMITTED' | 'SUBMITTED' | 'ACCEPTED' | 'REJECTED' | 'CANCELLATION_REQUESTED' | 'CANCELLATION_ACCEPTED' | 'CANCELLATION_REJECTED' | 'CLOSED'; };
    'FulfillmentOrderReschedulePayload': { kind: 'OBJECT'; name: 'FulfillmentOrderReschedulePayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderRescheduleUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderRescheduleUserError': { kind: 'OBJECT'; name: 'FulfillmentOrderRescheduleUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentOrderRescheduleUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentOrderRescheduleUserErrorCode': { name: 'FulfillmentOrderRescheduleUserErrorCode'; enumValues: 'FULFILLMENT_ORDER_NOT_FOUND'; };
    'FulfillmentOrderSortKeys': { name: 'FulfillmentOrderSortKeys'; enumValues: 'ID' | 'UPDATED_AT' | 'RELEVANCE'; };
    'FulfillmentOrderSplitInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderSplitInput'; isOneOf: false; inputFields: [{ name: 'fulfillmentOrderLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderLineItemInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'fulfillmentOrderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'FulfillmentOrderSplitPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderSplitPayload'; fields: { 'fulfillmentOrderSplits': { name: 'fulfillmentOrderSplits'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderSplitResult'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderSplitUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderSplitResult': { kind: 'OBJECT'; name: 'FulfillmentOrderSplitResult'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; }; } }; 'remainingFulfillmentOrder': { name: 'remainingFulfillmentOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; }; } }; 'replacementFulfillmentOrder': { name: 'replacementFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; }; };
    'FulfillmentOrderSplitUserError': { kind: 'OBJECT'; name: 'FulfillmentOrderSplitUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentOrderSplitUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentOrderSplitUserErrorCode': { name: 'FulfillmentOrderSplitUserErrorCode'; enumValues: 'FULFILLMENT_ORDER_NOT_FOUND' | 'GREATER_THAN' | 'INVALID_LINE_ITEM_QUANTITY' | 'NO_LINE_ITEMS_PROVIDED_TO_SPLIT'; };
    'FulfillmentOrderStatus': { name: 'FulfillmentOrderStatus'; enumValues: 'OPEN' | 'IN_PROGRESS' | 'CANCELLED' | 'INCOMPLETE' | 'CLOSED' | 'SCHEDULED' | 'ON_HOLD'; };
    'FulfillmentOrderSubmitCancellationRequestPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderSubmitCancellationRequestPayload'; fields: { 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderSubmitFulfillmentRequestPayload': { kind: 'OBJECT'; name: 'FulfillmentOrderSubmitFulfillmentRequestPayload'; fields: { 'originalFulfillmentOrder': { name: 'originalFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'submittedFulfillmentOrder': { name: 'submittedFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'unsubmittedFulfillmentOrder': { name: 'unsubmittedFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrderSupportedAction': { kind: 'OBJECT'; name: 'FulfillmentOrderSupportedAction'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentOrderAction'; ofType: null; }; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; };
    'FulfillmentOrdersReleaseHoldsPayload': { kind: 'OBJECT'; name: 'FulfillmentOrdersReleaseHoldsPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrdersReleaseHoldsUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrdersReleaseHoldsUserError': { kind: 'OBJECT'; name: 'FulfillmentOrdersReleaseHoldsUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentOrdersReleaseHoldsUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentOrdersReleaseHoldsUserErrorCode': { name: 'FulfillmentOrdersReleaseHoldsUserErrorCode'; enumValues: 'FAILED_TO_CREATE_JOB'; };
    'FulfillmentOrdersSetFulfillmentDeadlinePayload': { kind: 'OBJECT'; name: 'FulfillmentOrdersSetFulfillmentDeadlinePayload'; fields: { 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrdersSetFulfillmentDeadlineUserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentOrdersSetFulfillmentDeadlineUserError': { kind: 'OBJECT'; name: 'FulfillmentOrdersSetFulfillmentDeadlineUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'FulfillmentOrdersSetFulfillmentDeadlineUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FulfillmentOrdersSetFulfillmentDeadlineUserErrorCode': { name: 'FulfillmentOrdersSetFulfillmentDeadlineUserErrorCode'; enumValues: 'FULFILLMENT_ORDERS_NOT_FOUND'; };
    'FulfillmentOriginAddress': { kind: 'OBJECT'; name: 'FulfillmentOriginAddress'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address2': { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'provinceCode': { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentOriginAddressInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentOriginAddressInput'; isOneOf: false; inputFields: [{ name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'FulfillmentService': { kind: 'OBJECT'; name: 'FulfillmentService'; fields: { 'callbackUrl': { name: 'callbackUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'fulfillmentOrdersOptIn': { name: 'fulfillmentOrdersOptIn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inventoryManagement': { name: 'inventoryManagement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'permitsSkuSharing': { name: 'permitsSkuSharing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'serviceName': { name: 'serviceName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'shippingMethods': { name: 'shippingMethods'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; }; } }; 'trackingSupport': { name: 'trackingSupport'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentServiceType'; ofType: null; }; } }; }; };
    'FulfillmentServiceCreatePayload': { kind: 'OBJECT'; name: 'FulfillmentServiceCreatePayload'; fields: { 'fulfillmentService': { name: 'fulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentServiceDeletePayload': { kind: 'OBJECT'; name: 'FulfillmentServiceDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentServiceType': { name: 'FulfillmentServiceType'; enumValues: 'GIFT_CARD' | 'MANUAL' | 'THIRD_PARTY'; };
    'FulfillmentServiceUpdatePayload': { kind: 'OBJECT'; name: 'FulfillmentServiceUpdatePayload'; fields: { 'fulfillmentService': { name: 'fulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentStatus': { name: 'FulfillmentStatus'; enumValues: 'PENDING' | 'OPEN' | 'SUCCESS' | 'CANCELLED' | 'ERROR' | 'FAILURE'; };
    'FulfillmentTrackingInfo': { kind: 'OBJECT'; name: 'FulfillmentTrackingInfo'; fields: { 'company': { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'number': { name: 'number'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; };
    'FulfillmentTrackingInfoUpdateV2Payload': { kind: 'OBJECT'; name: 'FulfillmentTrackingInfoUpdateV2Payload'; fields: { 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentTrackingInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentTrackingInput'; isOneOf: false; inputFields: [{ name: 'number'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; defaultValue: null }, { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'numbers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'urls'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; }; }; defaultValue: null }]; };
    'FulfillmentV2Input': { kind: 'INPUT_OBJECT'; name: 'FulfillmentV2Input'; isOneOf: false; inputFields: [{ name: 'trackingInfo'; type: { kind: 'INPUT_OBJECT'; name: 'FulfillmentTrackingInput'; ofType: null; }; defaultValue: null }, { name: 'notifyCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'lineItemsByFulfillmentOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FulfillmentOrderLineItemsInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'originAddress'; type: { kind: 'INPUT_OBJECT'; name: 'FulfillmentOriginAddressInput'; ofType: null; }; defaultValue: null }]; };
    'FunctionsAppBridge': { kind: 'OBJECT'; name: 'FunctionsAppBridge'; fields: { 'createPath': { name: 'createPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'detailsPath': { name: 'detailsPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FunctionsErrorHistory': { kind: 'OBJECT'; name: 'FunctionsErrorHistory'; fields: { 'errorsFirstOccurredAt': { name: 'errorsFirstOccurredAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'firstOccurredAt': { name: 'firstOccurredAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'hasBeenSharedSinceLastError': { name: 'hasBeenSharedSinceLastError'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasSharedRecentErrors': { name: 'hasSharedRecentErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'GenericFile': { kind: 'OBJECT'; name: 'GenericFile'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'fileErrors': { name: 'fileErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FileError'; ofType: null; }; }; }; } }; 'fileStatus': { name: 'fileStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileStatus'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mimeType': { name: 'mimeType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'originalFileSize': { name: 'originalFileSize'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'preview': { name: 'preview'; type: { kind: 'OBJECT'; name: 'MediaPreviewImage'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; };
    'GiftCard': { kind: 'OBJECT'; name: 'GiftCard'; fields: { 'balance': { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'disabledAt': { name: 'disabledAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'expiresOn': { name: 'expiresOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'initialValue': { name: 'initialValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'lastCharacters': { name: 'lastCharacters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'maskedCode': { name: 'maskedCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; }; };
    'GiftCardConnection': { kind: 'OBJECT'; name: 'GiftCardConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'GiftCardCreateInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardCreateInput'; isOneOf: false; inputFields: [{ name: 'initialValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'expiresOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'templateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'GiftCardCreatePayload': { kind: 'OBJECT'; name: 'GiftCardCreatePayload'; fields: { 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'giftCardCode': { name: 'giftCardCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardUserError'; ofType: null; }; }; }; } }; }; };
    'GiftCardDisablePayload': { kind: 'OBJECT'; name: 'GiftCardDisablePayload'; fields: { 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'GiftCardEdge': { kind: 'OBJECT'; name: 'GiftCardEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; }; } }; }; };
    'GiftCardErrorCode': { name: 'GiftCardErrorCode'; enumValues: 'TOO_LONG' | 'TOO_SHORT' | 'TAKEN' | 'INVALID' | 'INTERNAL_ERROR' | 'MISSING_ARGUMENT' | 'GREATER_THAN'; };
    'GiftCardSale': { kind: 'OBJECT'; name: 'GiftCardSale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'GiftCardSortKeys': { name: 'GiftCardSortKeys'; enumValues: 'CREATED_AT' | 'UPDATED_AT' | 'CUSTOMER_NAME' | 'CODE' | 'BALANCE' | 'AMOUNT_SPENT' | 'INITIAL_VALUE' | 'DISABLED_AT' | 'EXPIRES_ON' | 'ID' | 'RELEVANCE'; };
    'GiftCardUpdateInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardUpdateInput'; isOneOf: false; inputFields: [{ name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'expiresOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'customerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'templateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'GiftCardUpdatePayload': { kind: 'OBJECT'; name: 'GiftCardUpdatePayload'; fields: { 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'GiftCardUserError': { kind: 'OBJECT'; name: 'GiftCardUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'GiftCardErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'HTML': unknown;
    'HasCompareDigest': { kind: 'INTERFACE'; name: 'HasCompareDigest'; fields: { 'compareDigest': { name: 'compareDigest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'Metafield'; };
    'HasEvents': { kind: 'INTERFACE'; name: 'HasEvents'; fields: { 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; }; possibleTypes: 'Company' | 'CompanyLocation' | 'Customer' | 'DiscountAutomaticBxgy' | 'DiscountAutomaticNode' | 'DiscountCodeNode' | 'DiscountNode' | 'DraftOrder' | 'Order' | 'PriceRule'; };
    'HasLocalizationExtensions': { kind: 'INTERFACE'; name: 'HasLocalizationExtensions'; fields: { 'localizationExtensions': { name: 'localizationExtensions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocalizationExtensionConnection'; ofType: null; }; } }; }; possibleTypes: 'DraftOrder' | 'Order'; };
    'HasMetafieldDefinitions': { kind: 'INTERFACE'; name: 'HasMetafieldDefinitions'; fields: { 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; }; possibleTypes: 'Collection' | 'Company' | 'CompanyLocation' | 'Customer' | 'DeliveryCustomization' | 'DiscountAutomaticNode' | 'DiscountCodeNode' | 'DiscountNode' | 'Location' | 'Market' | 'OnlineStoreArticle' | 'OnlineStoreBlog' | 'OnlineStorePage' | 'Order' | 'PaymentCustomization' | 'Product' | 'ProductVariant' | 'SellingPlan' | 'Validation'; };
    'HasMetafields': { kind: 'INTERFACE'; name: 'HasMetafields'; fields: { 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; }; possibleTypes: 'AppInstallation' | 'CartTransform' | 'Collection' | 'Company' | 'CompanyLocation' | 'Customer' | 'CustomerSegmentMember' | 'DeliveryCustomization' | 'DiscountAutomaticNode' | 'DiscountCodeNode' | 'DiscountNode' | 'DraftOrder' | 'FulfillmentConstraintRule' | 'Image' | 'Location' | 'Market' | 'MediaImage' | 'OnlineStoreArticle' | 'OnlineStoreBlog' | 'OnlineStorePage' | 'Order' | 'PaymentCustomization' | 'Product' | 'ProductVariant' | 'SellingPlan' | 'Shop' | 'Validation'; };
    'HasPublishedTranslations': { kind: 'INTERFACE'; name: 'HasPublishedTranslations'; fields: { 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; }; possibleTypes: 'Collection' | 'Link' | 'Menu' | 'OnlineStoreArticle' | 'OnlineStoreBlog' | 'OnlineStorePage' | 'Product' | 'ProductOption' | 'ProductOptionValue' | 'ProductVariant' | 'SellingPlan' | 'SellingPlanGroup' | 'Shop' | 'ShopPolicy'; };
    'HasStoreCreditAccounts': { kind: 'INTERFACE'; name: 'HasStoreCreditAccounts'; fields: { 'storeCreditAccounts': { name: 'storeCreditAccounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccountConnection'; ofType: null; }; } }; }; possibleTypes: 'Customer'; };
    'ID': unknown;
    'Image': { kind: 'OBJECT'; name: 'Image'; fields: { 'altText': { name: 'altText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'height': { name: 'height'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'originalSrc': { name: 'originalSrc'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'src': { name: 'src'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'transformedSrc': { name: 'transformedSrc'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'width': { name: 'width'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ImageConnection': { kind: 'OBJECT'; name: 'ImageConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ImageEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ImageContentType': { name: 'ImageContentType'; enumValues: 'PNG' | 'JPG' | 'WEBP'; };
    'ImageEdge': { kind: 'OBJECT'; name: 'ImageEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; }; };
    'ImageInput': { kind: 'INPUT_OBJECT'; name: 'ImageInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'altText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'src'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ImageTransformInput': { kind: 'INPUT_OBJECT'; name: 'ImageTransformInput'; isOneOf: false; inputFields: [{ name: 'crop'; type: { kind: 'ENUM'; name: 'CropRegion'; ofType: null; }; defaultValue: null }, { name: 'maxWidth'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxHeight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'scale'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: "1" }, { name: 'preferredContentType'; type: { kind: 'ENUM'; name: 'ImageContentType'; ofType: null; }; defaultValue: null }]; };
    'ImageUploadParameter': { kind: 'OBJECT'; name: 'ImageUploadParameter'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'IncomingRequestLineItemInput': { kind: 'INPUT_OBJECT'; name: 'IncomingRequestLineItemInput'; isOneOf: false; inputFields: [{ name: 'fulfillmentOrderLineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Int': unknown;
    'InventoryActivatePayload': { kind: 'OBJECT'; name: 'InventoryActivatePayload'; fields: { 'inventoryLevel': { name: 'inventoryLevel'; type: { kind: 'OBJECT'; name: 'InventoryLevel'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'InventoryAdjustQuantitiesInput': { kind: 'INPUT_OBJECT'; name: 'InventoryAdjustQuantitiesInput'; isOneOf: false; inputFields: [{ name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'referenceDocumentUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'changes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventoryChangeInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'InventoryAdjustQuantitiesPayload': { kind: 'OBJECT'; name: 'InventoryAdjustQuantitiesPayload'; fields: { 'inventoryAdjustmentGroup': { name: 'inventoryAdjustmentGroup'; type: { kind: 'OBJECT'; name: 'InventoryAdjustmentGroup'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryAdjustQuantitiesUserError'; ofType: null; }; }; }; } }; }; };
    'InventoryAdjustQuantitiesUserError': { kind: 'OBJECT'; name: 'InventoryAdjustQuantitiesUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'InventoryAdjustQuantitiesUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InventoryAdjustQuantitiesUserErrorCode': { name: 'InventoryAdjustQuantitiesUserErrorCode'; enumValues: 'INTERNAL_LEDGER_DOCUMENT' | 'INVALID_AVAILABLE_DOCUMENT' | 'INVALID_INVENTORY_ITEM' | 'INVALID_LEDGER_DOCUMENT' | 'INVALID_LOCATION' | 'INVALID_QUANTITY_DOCUMENT' | 'INVALID_QUANTITY_NAME' | 'INVALID_QUANTITY_TOO_LOW' | 'INVALID_QUANTITY_TOO_HIGH' | 'INVALID_REASON' | 'INVALID_REFERENCE_DOCUMENT' | 'ADJUST_QUANTITIES_FAILED' | 'MAX_ONE_LEDGER_DOCUMENT' | 'ITEM_NOT_STOCKED_AT_LOCATION' | 'NON_MUTABLE_INVENTORY_ITEM'; };
    'InventoryAdjustmentGroup': { kind: 'OBJECT'; name: 'InventoryAdjustmentGroup'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'changes': { name: 'changes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryChange'; ofType: null; }; }; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'referenceDocumentUri': { name: 'referenceDocumentUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'staffMember': { name: 'staffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; }; };
    'InventoryBulkToggleActivationInput': { kind: 'INPUT_OBJECT'; name: 'InventoryBulkToggleActivationInput'; isOneOf: false; inputFields: [{ name: 'locationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'activate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'InventoryBulkToggleActivationPayload': { kind: 'OBJECT'; name: 'InventoryBulkToggleActivationPayload'; fields: { 'inventoryItem': { name: 'inventoryItem'; type: { kind: 'OBJECT'; name: 'InventoryItem'; ofType: null; } }; 'inventoryLevels': { name: 'inventoryLevels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryLevel'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryBulkToggleActivationUserError'; ofType: null; }; }; }; } }; }; };
    'InventoryBulkToggleActivationUserError': { kind: 'OBJECT'; name: 'InventoryBulkToggleActivationUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'InventoryBulkToggleActivationUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InventoryBulkToggleActivationUserErrorCode': { name: 'InventoryBulkToggleActivationUserErrorCode'; enumValues: 'GENERIC_ERROR' | 'CANNOT_DEACTIVATE_FROM_ONLY_LOCATION' | 'COMMITTED_AND_INCOMING_INVENTORY_AT_LOCATION' | 'INCOMING_INVENTORY_AT_LOCATION' | 'COMMITTED_INVENTORY_AT_LOCATION' | 'RESERVED_INVENTORY_AT_LOCATION' | 'FAILED_TO_UNSTOCK_FROM_LOCATION' | 'INVENTORY_MANAGED_BY_3RD_PARTY' | 'INVENTORY_MANAGED_BY_SHOPIFY' | 'FAILED_TO_STOCK_AT_LOCATION' | 'MISSING_SKU' | 'LOCATION_NOT_FOUND' | 'INVENTORY_ITEM_NOT_FOUND'; };
    'InventoryChange': { kind: 'OBJECT'; name: 'InventoryChange'; fields: { 'delta': { name: 'delta'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'item': { name: 'item'; type: { kind: 'OBJECT'; name: 'InventoryItem'; ofType: null; } }; 'ledgerDocumentUri': { name: 'ledgerDocumentUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'quantityAfterChange': { name: 'quantityAfterChange'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'InventoryChangeInput': { kind: 'INPUT_OBJECT'; name: 'InventoryChangeInput'; isOneOf: false; inputFields: [{ name: 'delta'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'inventoryItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'locationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'ledgerDocumentUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'InventoryDeactivatePayload': { kind: 'OBJECT'; name: 'InventoryDeactivatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'InventoryItem': { kind: 'OBJECT'; name: 'InventoryItem'; fields: { 'countryCodeOfOrigin': { name: 'countryCodeOfOrigin'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'countryHarmonizedSystemCodes': { name: 'countryHarmonizedSystemCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryHarmonizedSystemCodeConnection'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'duplicateSkuCount': { name: 'duplicateSkuCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'harmonizedSystemCode': { name: 'harmonizedSystemCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inventoryHistoryUrl': { name: 'inventoryHistoryUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'inventoryLevel': { name: 'inventoryLevel'; type: { kind: 'OBJECT'; name: 'InventoryLevel'; ofType: null; } }; 'inventoryLevels': { name: 'inventoryLevels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryLevelConnection'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'locationsCount': { name: 'locationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'measurement': { name: 'measurement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryItemMeasurement'; ofType: null; }; } }; 'provinceCodeOfOrigin': { name: 'provinceCodeOfOrigin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tracked': { name: 'tracked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'trackedEditable': { name: 'trackedEditable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EditableProperty'; ofType: null; }; } }; 'unitCost': { name: 'unitCost'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'InventoryItemConnection': { kind: 'OBJECT'; name: 'InventoryItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'InventoryItemEdge': { kind: 'OBJECT'; name: 'InventoryItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryItem'; ofType: null; }; } }; }; };
    'InventoryItemInput': { kind: 'INPUT_OBJECT'; name: 'InventoryItemInput'; isOneOf: false; inputFields: [{ name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'cost'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'tracked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'countryCodeOfOrigin'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }, { name: 'harmonizedSystemCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'countryHarmonizedSystemCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CountryHarmonizedSystemCodeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'provinceCodeOfOrigin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'measurement'; type: { kind: 'INPUT_OBJECT'; name: 'InventoryItemMeasurementInput'; ofType: null; }; defaultValue: null }, { name: 'requiresShipping'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'InventoryItemMeasurement': { kind: 'OBJECT'; name: 'InventoryItemMeasurement'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; }; };
    'InventoryItemMeasurementInput': { kind: 'INPUT_OBJECT'; name: 'InventoryItemMeasurementInput'; isOneOf: false; inputFields: [{ name: 'weight'; type: { kind: 'INPUT_OBJECT'; name: 'WeightInput'; ofType: null; }; defaultValue: null }]; };
    'InventoryItemUpdatePayload': { kind: 'OBJECT'; name: 'InventoryItemUpdatePayload'; fields: { 'inventoryItem': { name: 'inventoryItem'; type: { kind: 'OBJECT'; name: 'InventoryItem'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'InventoryLevel': { kind: 'OBJECT'; name: 'InventoryLevel'; fields: { 'canDeactivate': { name: 'canDeactivate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'deactivationAlert': { name: 'deactivationAlert'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'item': { name: 'item'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryItem'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; } }; 'quantities': { name: 'quantities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryQuantity'; ofType: null; }; }; }; } }; 'scheduledChanges': { name: 'scheduledChanges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryScheduledChangeConnection'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'InventoryLevelConnection': { kind: 'OBJECT'; name: 'InventoryLevelConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryLevelEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryLevel'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'InventoryLevelEdge': { kind: 'OBJECT'; name: 'InventoryLevelEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryLevel'; ofType: null; }; } }; }; };
    'InventoryLevelInput': { kind: 'INPUT_OBJECT'; name: 'InventoryLevelInput'; isOneOf: false; inputFields: [{ name: 'availableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'locationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'InventoryMoveQuantitiesInput': { kind: 'INPUT_OBJECT'; name: 'InventoryMoveQuantitiesInput'; isOneOf: false; inputFields: [{ name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'referenceDocumentUri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'changes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventoryMoveQuantityChange'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'InventoryMoveQuantitiesPayload': { kind: 'OBJECT'; name: 'InventoryMoveQuantitiesPayload'; fields: { 'inventoryAdjustmentGroup': { name: 'inventoryAdjustmentGroup'; type: { kind: 'OBJECT'; name: 'InventoryAdjustmentGroup'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryMoveQuantitiesUserError'; ofType: null; }; }; }; } }; }; };
    'InventoryMoveQuantitiesUserError': { kind: 'OBJECT'; name: 'InventoryMoveQuantitiesUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'InventoryMoveQuantitiesUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InventoryMoveQuantitiesUserErrorCode': { name: 'InventoryMoveQuantitiesUserErrorCode'; enumValues: 'INTERNAL_LEDGER_DOCUMENT' | 'INVALID_AVAILABLE_DOCUMENT' | 'INVALID_INVENTORY_ITEM' | 'INVALID_LEDGER_DOCUMENT' | 'INVALID_LOCATION' | 'INVALID_QUANTITY_DOCUMENT' | 'INVALID_QUANTITY_NAME' | 'INVALID_QUANTITY_NEGATIVE' | 'INVALID_QUANTITY_TOO_HIGH' | 'INVALID_REASON' | 'INVALID_REFERENCE_DOCUMENT' | 'MOVE_QUANTITIES_FAILED' | 'DIFFERENT_LOCATIONS' | 'SAME_QUANTITY_NAME' | 'MAXIMUM_LEDGER_DOCUMENT_URIS' | 'ITEM_NOT_STOCKED_AT_LOCATION' | 'NON_MUTABLE_INVENTORY_ITEM'; };
    'InventoryMoveQuantityChange': { kind: 'INPUT_OBJECT'; name: 'InventoryMoveQuantityChange'; isOneOf: false; inputFields: [{ name: 'inventoryItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventoryMoveQuantityTerminalInput'; ofType: null; }; }; defaultValue: null }, { name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventoryMoveQuantityTerminalInput'; ofType: null; }; }; defaultValue: null }]; };
    'InventoryMoveQuantityTerminalInput': { kind: 'INPUT_OBJECT'; name: 'InventoryMoveQuantityTerminalInput'; isOneOf: false; inputFields: [{ name: 'locationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'ledgerDocumentUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'InventoryProperties': { kind: 'OBJECT'; name: 'InventoryProperties'; fields: { 'quantityNames': { name: 'quantityNames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryQuantityName'; ofType: null; }; }; }; } }; }; };
    'InventoryQuantity': { kind: 'OBJECT'; name: 'InventoryQuantity'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; }; };
    'InventoryQuantityInput': { kind: 'INPUT_OBJECT'; name: 'InventoryQuantityInput'; isOneOf: false; inputFields: [{ name: 'inventoryItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'locationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'compareQuantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'InventoryQuantityName': { kind: 'OBJECT'; name: 'InventoryQuantityName'; fields: { 'belongsTo': { name: 'belongsTo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'comprises': { name: 'comprises'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'displayName': { name: 'displayName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isInUse': { name: 'isInUse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InventoryScheduledChange': { kind: 'OBJECT'; name: 'InventoryScheduledChange'; fields: { 'expectedAt': { name: 'expectedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'fromName': { name: 'fromName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'inventoryLevel': { name: 'inventoryLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryLevel'; ofType: null; }; } }; 'ledgerDocumentUri': { name: 'ledgerDocumentUri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'toName': { name: 'toName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InventoryScheduledChangeConnection': { kind: 'OBJECT'; name: 'InventoryScheduledChangeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryScheduledChangeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryScheduledChange'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'InventoryScheduledChangeEdge': { kind: 'OBJECT'; name: 'InventoryScheduledChangeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryScheduledChange'; ofType: null; }; } }; }; };
    'InventoryScheduledChangeInput': { kind: 'INPUT_OBJECT'; name: 'InventoryScheduledChangeInput'; isOneOf: false; inputFields: [{ name: 'expectedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'fromName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'toName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'InventoryScheduledChangeItemInput': { kind: 'INPUT_OBJECT'; name: 'InventoryScheduledChangeItemInput'; isOneOf: false; inputFields: [{ name: 'inventoryItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'locationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'ledgerDocumentUri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; }; defaultValue: null }, { name: 'scheduledChanges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventoryScheduledChangeInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'InventorySetOnHandQuantitiesInput': { kind: 'INPUT_OBJECT'; name: 'InventorySetOnHandQuantitiesInput'; isOneOf: false; inputFields: [{ name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'referenceDocumentUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'setQuantities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventorySetQuantityInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'InventorySetOnHandQuantitiesPayload': { kind: 'OBJECT'; name: 'InventorySetOnHandQuantitiesPayload'; fields: { 'inventoryAdjustmentGroup': { name: 'inventoryAdjustmentGroup'; type: { kind: 'OBJECT'; name: 'InventoryAdjustmentGroup'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventorySetOnHandQuantitiesUserError'; ofType: null; }; }; }; } }; }; };
    'InventorySetOnHandQuantitiesUserError': { kind: 'OBJECT'; name: 'InventorySetOnHandQuantitiesUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'InventorySetOnHandQuantitiesUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InventorySetOnHandQuantitiesUserErrorCode': { name: 'InventorySetOnHandQuantitiesUserErrorCode'; enumValues: 'INVALID_INVENTORY_ITEM' | 'INVALID_LOCATION' | 'INVALID_QUANTITY_NEGATIVE' | 'INVALID_REASON' | 'INVALID_REFERENCE_DOCUMENT' | 'SET_ON_HAND_QUANTITIES_FAILED' | 'ITEM_NOT_STOCKED_AT_LOCATION' | 'NON_MUTABLE_INVENTORY_ITEM' | 'INVALID_QUANTITY_TOO_HIGH'; };
    'InventorySetQuantitiesInput': { kind: 'INPUT_OBJECT'; name: 'InventorySetQuantitiesInput'; isOneOf: false; inputFields: [{ name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'referenceDocumentUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'quantities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventoryQuantityInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'ignoreCompareQuantity'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'InventorySetQuantitiesPayload': { kind: 'OBJECT'; name: 'InventorySetQuantitiesPayload'; fields: { 'inventoryAdjustmentGroup': { name: 'inventoryAdjustmentGroup'; type: { kind: 'OBJECT'; name: 'InventoryAdjustmentGroup'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventorySetQuantitiesUserError'; ofType: null; }; }; }; } }; }; };
    'InventorySetQuantitiesUserError': { kind: 'OBJECT'; name: 'InventorySetQuantitiesUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'InventorySetQuantitiesUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InventorySetQuantitiesUserErrorCode': { name: 'InventorySetQuantitiesUserErrorCode'; enumValues: 'INVALID_INVENTORY_ITEM' | 'INVALID_LOCATION' | 'INVALID_QUANTITY_NEGATIVE' | 'INVALID_REASON' | 'INVALID_REFERENCE_DOCUMENT' | 'ITEM_NOT_STOCKED_AT_LOCATION' | 'INVALID_QUANTITY_TOO_HIGH' | 'COMPARE_QUANTITY_REQUIRED' | 'COMPARE_QUANTITY_STALE' | 'INVALID_NAME' | 'NO_DUPLICATE_INVENTORY_ITEM_ID_GROUP_ID_PAIR'; };
    'InventorySetQuantityInput': { kind: 'INPUT_OBJECT'; name: 'InventorySetQuantityInput'; isOneOf: false; inputFields: [{ name: 'inventoryItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'locationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'InventorySetScheduledChangesInput': { kind: 'INPUT_OBJECT'; name: 'InventorySetScheduledChangesInput'; isOneOf: false; inputFields: [{ name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventoryScheduledChangeItemInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'referenceDocumentUri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; }; defaultValue: null }]; };
    'InventorySetScheduledChangesPayload': { kind: 'OBJECT'; name: 'InventorySetScheduledChangesPayload'; fields: { 'scheduledChanges': { name: 'scheduledChanges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryScheduledChange'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventorySetScheduledChangesUserError'; ofType: null; }; }; }; } }; }; };
    'InventorySetScheduledChangesUserError': { kind: 'OBJECT'; name: 'InventorySetScheduledChangesUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'InventorySetScheduledChangesUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InventorySetScheduledChangesUserErrorCode': { name: 'InventorySetScheduledChangesUserErrorCode'; enumValues: 'ERROR_UPDATING_SCHEDULED' | 'SAME_FROM_TO_NAMES' | 'INVALID_FROM_NAME' | 'INVALID_TO_NAME' | 'DUPLICATE_TO_NAME' | 'INVALID_REASON' | 'DUPLICATE_FROM_NAME' | 'LOCATION_NOT_FOUND' | 'INVENTORY_STATE_NOT_FOUND' | 'ITEMS_EMPTY' | 'INVENTORY_ITEM_NOT_FOUND' | 'INCLUSION' | 'LEDGER_DOCUMENT_INVALID'; };
    'JSON': unknown;
    'Job': { kind: 'OBJECT'; name: 'Job'; fields: { 'done': { name: 'done'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'QueryRoot'; ofType: null; } }; }; };
    'JobResult': { kind: 'INTERFACE'; name: 'JobResult'; fields: { 'done': { name: 'done'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'CustomerSegmentMembersQuery'; };
    'LanguageCode': { name: 'LanguageCode'; enumValues: 'AF' | 'AK' | 'AM' | 'AR' | 'AS' | 'AZ' | 'BE' | 'BG' | 'BM' | 'BN' | 'BO' | 'BR' | 'BS' | 'CA' | 'CE' | 'CKB' | 'CS' | 'CY' | 'DA' | 'DE' | 'DZ' | 'EE' | 'EL' | 'EN' | 'EO' | 'ES' | 'ET' | 'EU' | 'FA' | 'FF' | 'FI' | 'FIL' | 'FO' | 'FR' | 'FY' | 'GA' | 'GD' | 'GL' | 'GU' | 'GV' | 'HA' | 'HE' | 'HI' | 'HR' | 'HU' | 'HY' | 'IA' | 'ID' | 'IG' | 'II' | 'IS' | 'IT' | 'JA' | 'JV' | 'KA' | 'KI' | 'KK' | 'KL' | 'KM' | 'KN' | 'KO' | 'KS' | 'KU' | 'KW' | 'KY' | 'LB' | 'LG' | 'LN' | 'LO' | 'LT' | 'LU' | 'LV' | 'MG' | 'MI' | 'MK' | 'ML' | 'MN' | 'MR' | 'MS' | 'MT' | 'MY' | 'NB' | 'ND' | 'NE' | 'NL' | 'NN' | 'NO' | 'OM' | 'OR' | 'OS' | 'PA' | 'PL' | 'PS' | 'PT_BR' | 'PT_PT' | 'QU' | 'RM' | 'RN' | 'RO' | 'RU' | 'RW' | 'SA' | 'SC' | 'SD' | 'SE' | 'SG' | 'SI' | 'SK' | 'SL' | 'SN' | 'SO' | 'SQ' | 'SR' | 'SU' | 'SV' | 'SW' | 'TA' | 'TE' | 'TG' | 'TH' | 'TI' | 'TK' | 'TO' | 'TR' | 'TT' | 'UG' | 'UK' | 'UR' | 'UZ' | 'VI' | 'WO' | 'XH' | 'YI' | 'YO' | 'ZH_CN' | 'ZH_TW' | 'ZU' | 'ZH' | 'PT' | 'CU' | 'VO'; };
    'LegacyInteroperability': { kind: 'INTERFACE'; name: 'LegacyInteroperability'; fields: { 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; }; possibleTypes: 'Customer' | 'DraftOrder' | 'Fulfillment' | 'InventoryItem' | 'Location' | 'MarketingEvent' | 'Metafield' | 'MetafieldStorefrontVisibility' | 'Order' | 'PriceRule' | 'Product' | 'ProductVariant' | 'Refund' | 'SavedSearch' | 'ScriptTag' | 'ShopifyPaymentsDispute' | 'ShopifyPaymentsPayout' | 'WebhookSubscription'; };
    'LengthUnit': { name: 'LengthUnit'; enumValues: 'MILLIMETERS' | 'CENTIMETERS' | 'METERS' | 'INCHES' | 'FEET' | 'YARDS'; };
    'LimitedPendingOrderCount': { kind: 'OBJECT'; name: 'LimitedPendingOrderCount'; fields: { 'atMax': { name: 'atMax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'LineItem': { kind: 'OBJECT'; name: 'LineItem'; fields: { 'canRestock': { name: 'canRestock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'currentQuantity': { name: 'currentQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'discountAllocations': { name: 'discountAllocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAllocation'; ofType: null; }; }; }; } }; 'discountedTotal': { name: 'discountedTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'discountedTotalSet': { name: 'discountedTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedUnitPrice': { name: 'discountedUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'discountedUnitPriceAfterAllDiscountsSet': { name: 'discountedUnitPriceAfterAllDiscountsSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedUnitPriceSet': { name: 'discountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'duties': { name: 'duties'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Duty'; ofType: null; }; }; }; } }; 'fulfillableQuantity': { name: 'fulfillableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'fulfillmentService': { name: 'fulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'fulfillmentStatus': { name: 'fulfillmentStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'isGiftCard': { name: 'isGiftCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lineItemGroup': { name: 'lineItemGroup'; type: { kind: 'OBJECT'; name: 'LineItemGroup'; ofType: null; } }; 'merchantEditable': { name: 'merchantEditable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nonFulfillableQuantity': { name: 'nonFulfillableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'originalTotal': { name: 'originalTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'originalTotalSet': { name: 'originalTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'originalUnitPrice': { name: 'originalUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'refundableQuantity': { name: 'refundableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'restockable': { name: 'restockable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sellingPlan': { name: 'sellingPlan'; type: { kind: 'OBJECT'; name: 'LineItemSellingPlan'; ofType: null; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'staffMember': { name: 'staffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'taxable': { name: 'taxable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalDiscount': { name: 'totalDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalDiscountSet': { name: 'totalDiscountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'unfulfilledDiscountedTotal': { name: 'unfulfilledDiscountedTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'unfulfilledDiscountedTotalSet': { name: 'unfulfilledDiscountedTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'unfulfilledOriginalTotal': { name: 'unfulfilledOriginalTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'unfulfilledOriginalTotalSet': { name: 'unfulfilledOriginalTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'unfulfilledQuantity': { name: 'unfulfilledQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variantTitle': { name: 'variantTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vendor': { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'LineItemConnection': { kind: 'OBJECT'; name: 'LineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'LineItemEdge': { kind: 'OBJECT'; name: 'LineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; } }; }; };
    'LineItemGroup': { kind: 'OBJECT'; name: 'LineItemGroup'; fields: { 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variantId': { name: 'variantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'variantSku': { name: 'variantSku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'LineItemMutable': { kind: 'OBJECT'; name: 'LineItemMutable'; fields: { 'canRestock': { name: 'canRestock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'discountAllocations': { name: 'discountAllocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAllocation'; ofType: null; }; }; }; } }; 'discountedTotal': { name: 'discountedTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'discountedTotalSet': { name: 'discountedTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedUnitPrice': { name: 'discountedUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'discountedUnitPriceSet': { name: 'discountedUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'fulfillableQuantity': { name: 'fulfillableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'fulfillmentService': { name: 'fulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'fulfillmentStatus': { name: 'fulfillmentStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'isGiftCard': { name: 'isGiftCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'merchantEditable': { name: 'merchantEditable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nonFulfillableQuantity': { name: 'nonFulfillableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'originalTotal': { name: 'originalTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'originalTotalSet': { name: 'originalTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'originalUnitPrice': { name: 'originalUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'originalUnitPriceSet': { name: 'originalUnitPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'refundableQuantity': { name: 'refundableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'restockable': { name: 'restockable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'staffMember': { name: 'staffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'taxable': { name: 'taxable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalDiscount': { name: 'totalDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalDiscountSet': { name: 'totalDiscountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'unfulfilledDiscountedTotal': { name: 'unfulfilledDiscountedTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'unfulfilledDiscountedTotalSet': { name: 'unfulfilledDiscountedTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'unfulfilledOriginalTotal': { name: 'unfulfilledOriginalTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'unfulfilledOriginalTotalSet': { name: 'unfulfilledOriginalTotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'unfulfilledQuantity': { name: 'unfulfilledQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variantTitle': { name: 'variantTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vendor': { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'LineItemMutableConnection': { kind: 'OBJECT'; name: 'LineItemMutableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItemMutableEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItemMutable'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'LineItemMutableEdge': { kind: 'OBJECT'; name: 'LineItemMutableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItemMutable'; ofType: null; }; } }; }; };
    'LineItemSellingPlan': { kind: 'OBJECT'; name: 'LineItemSellingPlan'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sellingPlanId': { name: 'sellingPlanId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'Link': { kind: 'OBJECT'; name: 'Link'; fields: { 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'LinkedMetafield': { kind: 'OBJECT'; name: 'LinkedMetafield'; fields: { 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'namespace': { name: 'namespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'LinkedMetafieldCreateInput': { kind: 'INPUT_OBJECT'; name: 'LinkedMetafieldCreateInput'; isOneOf: false; inputFields: [{ name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'LinkedMetafieldInput': { kind: 'INPUT_OBJECT'; name: 'LinkedMetafieldInput'; isOneOf: false; inputFields: [{ name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'LinkedMetafieldUpdateInput': { kind: 'INPUT_OBJECT'; name: 'LinkedMetafieldUpdateInput'; isOneOf: false; inputFields: [{ name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'Locale': { kind: 'OBJECT'; name: 'Locale'; fields: { 'isoCode': { name: 'isoCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LocalizableContentType': { name: 'LocalizableContentType'; enumValues: 'JSON_STRING' | 'JSON' | 'LIST_MULTI_LINE_TEXT_FIELD' | 'LIST_SINGLE_LINE_TEXT_FIELD' | 'LIST_URL' | 'MULTI_LINE_TEXT_FIELD' | 'RICH_TEXT_FIELD' | 'SINGLE_LINE_TEXT_FIELD' | 'STRING' | 'URL' | 'LINK' | 'LIST_LINK' | 'FILE_REFERENCE' | 'LIST_FILE_REFERENCE' | 'HTML' | 'URI' | 'INLINE_RICH_TEXT'; };
    'LocalizationExtension': { kind: 'OBJECT'; name: 'LocalizationExtension'; fields: { 'countryCode': { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocalizationExtensionKey'; ofType: null; }; } }; 'purpose': { name: 'purpose'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocalizationExtensionPurpose'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LocalizationExtensionConnection': { kind: 'OBJECT'; name: 'LocalizationExtensionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocalizationExtensionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocalizationExtension'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'LocalizationExtensionEdge': { kind: 'OBJECT'; name: 'LocalizationExtensionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocalizationExtension'; ofType: null; }; } }; }; };
    'LocalizationExtensionInput': { kind: 'INPUT_OBJECT'; name: 'LocalizationExtensionInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocalizationExtensionKey'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'LocalizationExtensionKey': { name: 'LocalizationExtensionKey'; enumValues: 'TAX_CREDENTIAL_BR' | 'SHIPPING_CREDENTIAL_BR' | 'TAX_CREDENTIAL_CL' | 'SHIPPING_CREDENTIAL_CL' | 'SHIPPING_CREDENTIAL_CN' | 'TAX_CREDENTIAL_CO' | 'TAX_CREDENTIAL_TYPE_CO' | 'SHIPPING_CREDENTIAL_CO' | 'SHIPPING_CREDENTIAL_TYPE_CO' | 'TAX_CREDENTIAL_CR' | 'SHIPPING_CREDENTIAL_CR' | 'TAX_CREDENTIAL_EC' | 'SHIPPING_CREDENTIAL_EC' | 'TAX_CREDENTIAL_GT' | 'SHIPPING_CREDENTIAL_GT' | 'TAX_CREDENTIAL_ID' | 'SHIPPING_CREDENTIAL_ID' | 'TAX_CREDENTIAL_IT' | 'TAX_EMAIL_IT' | 'TAX_CREDENTIAL_MY' | 'SHIPPING_CREDENTIAL_MY' | 'TAX_CREDENTIAL_MX' | 'TAX_CREDENTIAL_TYPE_MX' | 'TAX_CREDENTIAL_USE_MX' | 'TAX_CREDENTIAL_PY' | 'SHIPPING_CREDENTIAL_PY' | 'TAX_CREDENTIAL_PE' | 'SHIPPING_CREDENTIAL_PE' | 'TAX_CREDENTIAL_PT' | 'SHIPPING_CREDENTIAL_PT' | 'SHIPPING_CREDENTIAL_KR' | 'TAX_CREDENTIAL_ES' | 'SHIPPING_CREDENTIAL_ES' | 'SHIPPING_CREDENTIAL_TW' | 'TAX_CREDENTIAL_TR' | 'SHIPPING_CREDENTIAL_TR'; };
    'LocalizationExtensionPurpose': { name: 'LocalizationExtensionPurpose'; enumValues: 'SHIPPING' | 'TAX'; };
    'Location': { kind: 'OBJECT'; name: 'Location'; fields: { 'activatable': { name: 'activatable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationAddress'; ofType: null; }; } }; 'addressVerified': { name: 'addressVerified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'deactivatable': { name: 'deactivatable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deactivatedAt': { name: 'deactivatedAt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletable': { name: 'deletable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'fulfillmentService': { name: 'fulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'fulfillsOnlineOrders': { name: 'fulfillsOnlineOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasActiveInventory': { name: 'hasActiveInventory'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasUnfulfilledOrders': { name: 'hasUnfulfilledOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inventoryLevel': { name: 'inventoryLevel'; type: { kind: 'OBJECT'; name: 'InventoryLevel'; ofType: null; } }; 'inventoryLevels': { name: 'inventoryLevels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryLevelConnection'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isFulfillmentService': { name: 'isFulfillmentService'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isPrimary': { name: 'isPrimary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'localPickupSettingsV2': { name: 'localPickupSettingsV2'; type: { kind: 'OBJECT'; name: 'DeliveryLocalPickupSettings'; ofType: null; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'shipsInventory': { name: 'shipsInventory'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'suggestedAddresses': { name: 'suggestedAddresses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationSuggestedAddress'; ofType: null; }; }; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'LocationActivatePayload': { kind: 'OBJECT'; name: 'LocationActivatePayload'; fields: { 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'locationActivateUserErrors': { name: 'locationActivateUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationActivateUserError'; ofType: null; }; }; }; } }; }; };
    'LocationActivateUserError': { kind: 'OBJECT'; name: 'LocationActivateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'LocationActivateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LocationActivateUserErrorCode': { name: 'LocationActivateUserErrorCode'; enumValues: 'GENERIC_ERROR' | 'LOCATION_LIMIT' | 'HAS_ONGOING_RELOCATION' | 'LOCATION_NOT_FOUND' | 'HAS_NON_UNIQUE_NAME'; };
    'LocationAddAddressInput': { kind: 'INPUT_OBJECT'; name: 'LocationAddAddressInput'; isOneOf: false; inputFields: [{ name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; defaultValue: null }, { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'LocationAddInput': { kind: 'INPUT_OBJECT'; name: 'LocationAddInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'LocationAddAddressInput'; ofType: null; }; }; defaultValue: null }, { name: 'fulfillsOnlineOrders'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'LocationAddPayload': { kind: 'OBJECT'; name: 'LocationAddPayload'; fields: { 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationAddUserError'; ofType: null; }; }; }; } }; }; };
    'LocationAddUserError': { kind: 'OBJECT'; name: 'LocationAddUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'LocationAddUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LocationAddUserErrorCode': { name: 'LocationAddUserErrorCode'; enumValues: 'INVALID' | 'TOO_LONG' | 'TAKEN' | 'BLANK' | 'INVALID_US_ZIPCODE' | 'GENERIC_ERROR' | 'INVALID_TYPE' | 'INVALID_VALUE' | 'APP_NOT_AUTHORIZED' | 'UNSTRUCTURED_RESERVED_NAMESPACE' | 'DISALLOWED_OWNER_TYPE' | 'INCLUSION' | 'PRESENT' | 'TOO_SHORT' | 'CAPABILITY_VIOLATION' | 'INTERNAL_ERROR'; };
    'LocationAddress': { kind: 'OBJECT'; name: 'LocationAddress'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address2': { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'formatted': { name: 'formatted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'latitude': { name: 'latitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'longitude': { name: 'longitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provinceCode': { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'LocationConnection': { kind: 'OBJECT'; name: 'LocationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'LocationDeactivatePayload': { kind: 'OBJECT'; name: 'LocationDeactivatePayload'; fields: { 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'locationDeactivateUserErrors': { name: 'locationDeactivateUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationDeactivateUserError'; ofType: null; }; }; }; } }; }; };
    'LocationDeactivateUserError': { kind: 'OBJECT'; name: 'LocationDeactivateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'LocationDeactivateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LocationDeactivateUserErrorCode': { name: 'LocationDeactivateUserErrorCode'; enumValues: 'LOCATION_NOT_FOUND' | 'PERMANENTLY_BLOCKED_FROM_DEACTIVATION_ERROR' | 'TEMPORARILY_BLOCKED_FROM_DEACTIVATION_ERROR' | 'HAS_ACTIVE_RETAIL_SUBSCRIPTIONS' | 'DESTINATION_LOCATION_IS_THE_SAME_LOCATION' | 'DESTINATION_LOCATION_NOT_FOUND_OR_INACTIVE' | 'HAS_ACTIVE_INVENTORY_ERROR' | 'HAS_FULFILLMENT_ORDERS_ERROR' | 'HAS_OPEN_TRANSFERS_ERROR' | 'HAS_INCOMING_MOVEMENTS_ERROR' | 'HAS_OPEN_PURCHASE_ORDERS_ERROR' | 'FAILED_TO_RELOCATE_ACTIVE_INVENTORIES' | 'FAILED_TO_RELOCATE_OPEN_TRANSFERS' | 'FAILED_TO_RELOCATE_OPEN_PURCHASE_ORDERS' | 'FAILED_TO_RELOCATE_INCOMING_MOVEMENTS' | 'CANNOT_DISABLE_ONLINE_ORDER_FULFILLMENT'; };
    'LocationDeletePayload': { kind: 'OBJECT'; name: 'LocationDeletePayload'; fields: { 'deletedLocationId': { name: 'deletedLocationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'locationDeleteUserErrors': { name: 'locationDeleteUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'LocationDeleteUserError': { kind: 'OBJECT'; name: 'LocationDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'LocationDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LocationDeleteUserErrorCode': { name: 'LocationDeleteUserErrorCode'; enumValues: 'LOCATION_NOT_FOUND' | 'LOCATION_IS_ACTIVE' | 'GENERIC_ERROR' | 'LOCATION_HAS_INVENTORY' | 'LOCATION_HAS_PENDING_ORDERS' | 'LOCATION_HAS_ACTIVE_RETAIL_SUBSCRIPTION'; };
    'LocationEdge': { kind: 'OBJECT'; name: 'LocationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; } }; }; };
    'LocationEditAddressInput': { kind: 'INPUT_OBJECT'; name: 'LocationEditAddressInput'; isOneOf: false; inputFields: [{ name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'countryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }, { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'LocationEditInput': { kind: 'INPUT_OBJECT'; name: 'LocationEditInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'address'; type: { kind: 'INPUT_OBJECT'; name: 'LocationEditAddressInput'; ofType: null; }; defaultValue: null }, { name: 'fulfillsOnlineOrders'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'LocationEditPayload': { kind: 'OBJECT'; name: 'LocationEditPayload'; fields: { 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationEditUserError'; ofType: null; }; }; }; } }; }; };
    'LocationEditUserError': { kind: 'OBJECT'; name: 'LocationEditUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'LocationEditUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LocationEditUserErrorCode': { name: 'LocationEditUserErrorCode'; enumValues: 'TOO_LONG' | 'BLANK' | 'NOT_FOUND' | 'INVALID' | 'TAKEN' | 'INVALID_US_ZIPCODE' | 'GENERIC_ERROR' | 'CANNOT_DISABLE_ONLINE_ORDER_FULFILLMENT' | 'CANNOT_MODIFY_ONLINE_ORDER_FULFILLMENT_FOR_FS_LOCATION' | 'INVALID_TYPE' | 'INVALID_VALUE' | 'APP_NOT_AUTHORIZED' | 'UNSTRUCTURED_RESERVED_NAMESPACE' | 'DISALLOWED_OWNER_TYPE' | 'INCLUSION' | 'PRESENT' | 'TOO_SHORT' | 'CAPABILITY_VIOLATION' | 'INTERNAL_ERROR'; };
    'LocationLocalPickupDisablePayload': { kind: 'OBJECT'; name: 'LocationLocalPickupDisablePayload'; fields: { 'locationId': { name: 'locationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryLocationLocalPickupSettingsError'; ofType: null; }; }; }; } }; }; };
    'LocationLocalPickupEnablePayload': { kind: 'OBJECT'; name: 'LocationLocalPickupEnablePayload'; fields: { 'localPickupSettings': { name: 'localPickupSettings'; type: { kind: 'OBJECT'; name: 'DeliveryLocalPickupSettings'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryLocationLocalPickupSettingsError'; ofType: null; }; }; }; } }; }; };
    'LocationSortKeys': { name: 'LocationSortKeys'; enumValues: 'NAME' | 'ID' | 'RELEVANCE'; };
    'LocationSuggestedAddress': { kind: 'OBJECT'; name: 'LocationSuggestedAddress'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address2': { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'formatted': { name: 'formatted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provinceCode': { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MailingAddress': { kind: 'OBJECT'; name: 'MailingAddress'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address2': { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'company': { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'coordinatesValidated': { name: 'coordinatesValidated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCodeV2': { name: 'countryCodeV2'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'formatted': { name: 'formatted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'formattedArea': { name: 'formattedArea'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'latitude': { name: 'latitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'longitude': { name: 'longitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provinceCode': { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'timeZone': { name: 'timeZone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'validationResultSummary': { name: 'validationResultSummary'; type: { kind: 'ENUM'; name: 'MailingAddressValidationResult'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MailingAddressConnection': { kind: 'OBJECT'; name: 'MailingAddressConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MailingAddressEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MailingAddressEdge': { kind: 'OBJECT'; name: 'MailingAddressEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; }; } }; }; };
    'MailingAddressInput': { kind: 'INPUT_OBJECT'; name: 'MailingAddressInput'; isOneOf: false; inputFields: [{ name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'countryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }, { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MailingAddressValidationResult': { name: 'MailingAddressValidationResult'; enumValues: 'NO_ISSUES' | 'ERROR' | 'WARNING'; };
    'ManualDiscountApplication': { kind: 'OBJECT'; name: 'ManualDiscountApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'index': { name: 'index'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'Market': { kind: 'OBJECT'; name: 'Market'; fields: { 'catalogs': { name: 'catalogs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketCatalogConnection'; ofType: null; }; } }; 'catalogsCount': { name: 'catalogsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'currencySettings': { name: 'currencySettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketCurrencySettings'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'primary': { name: 'primary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'regions': { name: 'regions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketRegionConnection'; ofType: null; }; } }; 'webPresence': { name: 'webPresence'; type: { kind: 'OBJECT'; name: 'MarketWebPresence'; ofType: null; } }; 'webPresences': { name: 'webPresences'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketWebPresenceConnection'; ofType: null; }; } }; }; };
    'MarketCatalog': { kind: 'OBJECT'; name: 'MarketCatalog'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'markets': { name: 'markets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketConnection'; ofType: null; }; } }; 'operations': { name: 'operations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'ResourceOperation'; ofType: null; }; }; }; } }; 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'publication': { name: 'publication'; type: { kind: 'OBJECT'; name: 'Publication'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CatalogStatus'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MarketCatalogConnection': { kind: 'OBJECT'; name: 'MarketCatalogConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketCatalogEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketCatalog'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MarketCatalogEdge': { kind: 'OBJECT'; name: 'MarketCatalogEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketCatalog'; ofType: null; }; } }; }; };
    'MarketConnection': { kind: 'OBJECT'; name: 'MarketConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Market'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MarketCreateInput': { kind: 'INPUT_OBJECT'; name: 'MarketCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'handle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'regions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MarketRegionCreateInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'MarketCreatePayload': { kind: 'OBJECT'; name: 'MarketCreatePayload'; fields: { 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserError'; ofType: null; }; }; }; } }; }; };
    'MarketCurrencySettings': { kind: 'OBJECT'; name: 'MarketCurrencySettings'; fields: { 'baseCurrency': { name: 'baseCurrency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CurrencySetting'; ofType: null; }; } }; 'localCurrencies': { name: 'localCurrencies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'MarketCurrencySettingsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MarketCurrencySettingsUpdateInput'; isOneOf: false; inputFields: [{ name: 'baseCurrency'; type: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; defaultValue: null }, { name: 'localCurrencies'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'MarketCurrencySettingsUpdatePayload': { kind: 'OBJECT'; name: 'MarketCurrencySettingsUpdatePayload'; fields: { 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketCurrencySettingsUserError'; ofType: null; }; }; }; } }; }; };
    'MarketCurrencySettingsUserError': { kind: 'OBJECT'; name: 'MarketCurrencySettingsUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MarketCurrencySettingsUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MarketCurrencySettingsUserErrorCode': { name: 'MarketCurrencySettingsUserErrorCode'; enumValues: 'MARKET_NOT_FOUND' | 'MANAGED_MARKET' | 'MULTIPLE_CURRENCIES_NOT_SUPPORTED' | 'NO_LOCAL_CURRENCIES_ON_SINGLE_COUNTRY_MARKET' | 'UNSUPPORTED_CURRENCY' | 'PRIMARY_MARKET_USES_SHOP_CURRENCY'; };
    'MarketDeletePayload': { kind: 'OBJECT'; name: 'MarketDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserError'; ofType: null; }; }; }; } }; }; };
    'MarketEdge': { kind: 'OBJECT'; name: 'MarketEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Market'; ofType: null; }; } }; }; };
    'MarketLocalizableContent': { kind: 'OBJECT'; name: 'MarketLocalizableContent'; fields: { 'digest': { name: 'digest'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MarketLocalizableResource': { kind: 'OBJECT'; name: 'MarketLocalizableResource'; fields: { 'marketLocalizableContent': { name: 'marketLocalizableContent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketLocalizableContent'; ofType: null; }; }; }; } }; 'marketLocalizations': { name: 'marketLocalizations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketLocalization'; ofType: null; }; }; }; } }; 'resourceId': { name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'MarketLocalizableResourceConnection': { kind: 'OBJECT'; name: 'MarketLocalizableResourceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketLocalizableResourceEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketLocalizableResource'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MarketLocalizableResourceEdge': { kind: 'OBJECT'; name: 'MarketLocalizableResourceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketLocalizableResource'; ofType: null; }; } }; }; };
    'MarketLocalizableResourceType': { name: 'MarketLocalizableResourceType'; enumValues: 'METAFIELD' | 'METAOBJECT'; };
    'MarketLocalization': { kind: 'OBJECT'; name: 'MarketLocalization'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'market': { name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Market'; ofType: null; }; } }; 'outdated': { name: 'outdated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MarketLocalizationRegisterInput': { kind: 'INPUT_OBJECT'; name: 'MarketLocalizationRegisterInput'; isOneOf: false; inputFields: [{ name: 'marketId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'marketLocalizableContentDigest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MarketLocalizationsRegisterPayload': { kind: 'OBJECT'; name: 'MarketLocalizationsRegisterPayload'; fields: { 'marketLocalizations': { name: 'marketLocalizations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketLocalization'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationUserError'; ofType: null; }; }; }; } }; }; };
    'MarketLocalizationsRemovePayload': { kind: 'OBJECT'; name: 'MarketLocalizationsRemovePayload'; fields: { 'marketLocalizations': { name: 'marketLocalizations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketLocalization'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationUserError'; ofType: null; }; }; }; } }; }; };
    'MarketRegion': { kind: 'INTERFACE'; name: 'MarketRegion'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'MarketRegionCountry'; };
    'MarketRegionConnection': { kind: 'OBJECT'; name: 'MarketRegionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketRegionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'MarketRegion'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MarketRegionCountry': { kind: 'OBJECT'; name: 'MarketRegionCountry'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CurrencySetting'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MarketRegionCreateInput': { kind: 'INPUT_OBJECT'; name: 'MarketRegionCreateInput'; isOneOf: false; inputFields: [{ name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; defaultValue: null }]; };
    'MarketRegionDeletePayload': { kind: 'OBJECT'; name: 'MarketRegionDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserError'; ofType: null; }; }; }; } }; }; };
    'MarketRegionEdge': { kind: 'OBJECT'; name: 'MarketRegionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'MarketRegion'; ofType: null; }; } }; }; };
    'MarketRegionsCreatePayload': { kind: 'OBJECT'; name: 'MarketRegionsCreatePayload'; fields: { 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserError'; ofType: null; }; }; }; } }; }; };
    'MarketRegionsDeletePayload': { kind: 'OBJECT'; name: 'MarketRegionsDeletePayload'; fields: { 'deletedIds': { name: 'deletedIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserError'; ofType: null; }; }; }; } }; }; };
    'MarketUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MarketUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'handle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'MarketUpdatePayload': { kind: 'OBJECT'; name: 'MarketUpdatePayload'; fields: { 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserError'; ofType: null; }; }; }; } }; }; };
    'MarketUserError': { kind: 'OBJECT'; name: 'MarketUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MarketUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MarketUserErrorCode': { name: 'MarketUserErrorCode'; enumValues: 'INVALID' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'BLANK' | 'MARKET_NOT_FOUND' | 'REGION_NOT_FOUND' | 'WEB_PRESENCE_NOT_FOUND' | 'CANNOT_ADD_REGIONS_TO_PRIMARY_MARKET' | 'CANNOT_DELETE_ONLY_REGION' | 'REQUIRES_EXACTLY_ONE_OPTION' | 'CANNOT_DELETE_PRIMARY_MARKET' | 'DOMAIN_NOT_FOUND' | 'SUBFOLDER_SUFFIX_MUST_CONTAIN_ONLY_LETTERS' | 'SUBFOLDER_SUFFIX_CANNOT_BE_SCRIPT_CODE' | 'NO_LANGUAGES' | 'DUPLICATE_LANGUAGES' | 'REGION_SPECIFIC_LANGUAGE' | 'CANNOT_HAVE_SUBFOLDER_AND_DOMAIN' | 'CANNOT_ADD_WEB_PRESENCE_TO_PRIMARY_MARKET' | 'MARKET_REACHED_WEB_PRESENCE_LIMIT' | 'CANNOT_HAVE_MULTIPLE_SUBFOLDERS_PER_MARKET' | 'CANNOT_HAVE_BOTH_SUBFOLDER_AND_DOMAIN_WEB_PRESENCES' | 'REQUIRES_DOMAIN_OR_SUBFOLDER' | 'PRIMARY_MARKET_MUST_USE_PRIMARY_DOMAIN' | 'CANNOT_DELETE_PRIMARY_MARKET_WEB_PRESENCE' | 'SHOP_REACHED_MARKETS_LIMIT' | 'CANNOT_DISABLE_PRIMARY_MARKET' | 'UNPUBLISHED_LANGUAGE' | 'DISABLED_LANGUAGE' | 'CANNOT_SET_DEFAULT_LOCALE_TO_NULL' | 'UNSUPPORTED_COUNTRY_REGION' | 'CANNOT_ADD_CUSTOMER_DOMAIN'; };
    'MarketWebPresence': { kind: 'OBJECT'; name: 'MarketWebPresence'; fields: { 'alternateLocales': { name: 'alternateLocales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopLocale'; ofType: null; }; }; }; } }; 'defaultLocale': { name: 'defaultLocale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopLocale'; ofType: null; }; } }; 'domain': { name: 'domain'; type: { kind: 'OBJECT'; name: 'Domain'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'market': { name: 'market'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Market'; ofType: null; }; } }; 'rootUrls': { name: 'rootUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketWebPresenceRootUrl'; ofType: null; }; }; }; } }; 'subfolderSuffix': { name: 'subfolderSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MarketWebPresenceConnection': { kind: 'OBJECT'; name: 'MarketWebPresenceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketWebPresenceEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketWebPresence'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MarketWebPresenceCreateInput': { kind: 'INPUT_OBJECT'; name: 'MarketWebPresenceCreateInput'; isOneOf: false; inputFields: [{ name: 'domainId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'defaultLocale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'alternateLocales'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'subfolderSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MarketWebPresenceCreatePayload': { kind: 'OBJECT'; name: 'MarketWebPresenceCreatePayload'; fields: { 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserError'; ofType: null; }; }; }; } }; }; };
    'MarketWebPresenceDeletePayload': { kind: 'OBJECT'; name: 'MarketWebPresenceDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserError'; ofType: null; }; }; }; } }; }; };
    'MarketWebPresenceEdge': { kind: 'OBJECT'; name: 'MarketWebPresenceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketWebPresence'; ofType: null; }; } }; }; };
    'MarketWebPresenceRootUrl': { kind: 'OBJECT'; name: 'MarketWebPresenceRootUrl'; fields: { 'locale': { name: 'locale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'MarketWebPresenceUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MarketWebPresenceUpdateInput'; isOneOf: false; inputFields: [{ name: 'domainId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'defaultLocale'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'alternateLocales'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'subfolderSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MarketWebPresenceUpdatePayload': { kind: 'OBJECT'; name: 'MarketWebPresenceUpdatePayload'; fields: { 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketUserError'; ofType: null; }; }; }; } }; }; };
    'MarketingActivitiesDeleteAllExternalPayload': { kind: 'OBJECT'; name: 'MarketingActivitiesDeleteAllExternalPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivityUserError'; ofType: null; }; }; }; } }; }; };
    'MarketingActivity': { kind: 'OBJECT'; name: 'MarketingActivity'; fields: { 'activityListUrl': { name: 'activityListUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'adSpend': { name: 'adSpend'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'appErrors': { name: 'appErrors'; type: { kind: 'OBJECT'; name: 'MarketingActivityExtensionAppErrors'; ofType: null; } }; 'budget': { name: 'budget'; type: { kind: 'OBJECT'; name: 'MarketingBudget'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'formData': { name: 'formData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hierarchyLevel': { name: 'hierarchyLevel'; type: { kind: 'ENUM'; name: 'MarketingActivityHierarchyLevel'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inMainWorkflowVersion': { name: 'inMainWorkflowVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isExternal': { name: 'isExternal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'marketingChannel': { name: 'marketingChannel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingChannel'; ofType: null; }; } }; 'marketingChannelType': { name: 'marketingChannelType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingChannel'; ofType: null; }; } }; 'marketingEvent': { name: 'marketingEvent'; type: { kind: 'OBJECT'; name: 'MarketingEvent'; ofType: null; } }; 'parentActivityId': { name: 'parentActivityId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'parentRemoteId': { name: 'parentRemoteId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sourceAndMedium': { name: 'sourceAndMedium'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingActivityStatus'; ofType: null; }; } }; 'statusBadgeType': { name: 'statusBadgeType'; type: { kind: 'ENUM'; name: 'MarketingActivityStatusBadgeType'; ofType: null; } }; 'statusBadgeTypeV2': { name: 'statusBadgeTypeV2'; type: { kind: 'ENUM'; name: 'BadgeType'; ofType: null; } }; 'statusLabel': { name: 'statusLabel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'statusTransitionedAt': { name: 'statusTransitionedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'tactic': { name: 'tactic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingTactic'; ofType: null; }; } }; 'targetStatus': { name: 'targetStatus'; type: { kind: 'ENUM'; name: 'MarketingActivityStatus'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'urlParameterValue': { name: 'urlParameterValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'utmParameters': { name: 'utmParameters'; type: { kind: 'OBJECT'; name: 'UTMParameters'; ofType: null; } }; }; };
    'MarketingActivityBudgetInput': { kind: 'INPUT_OBJECT'; name: 'MarketingActivityBudgetInput'; isOneOf: false; inputFields: [{ name: 'budgetType'; type: { kind: 'ENUM'; name: 'MarketingBudgetBudgetType'; ofType: null; }; defaultValue: null }, { name: 'total'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }]; };
    'MarketingActivityConnection': { kind: 'OBJECT'; name: 'MarketingActivityConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivityEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivity'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MarketingActivityCreateExternalInput': { kind: 'INPUT_OBJECT'; name: 'MarketingActivityCreateExternalInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'utm'; type: { kind: 'INPUT_OBJECT'; name: 'UTMInput'; ofType: null; }; defaultValue: null }, { name: 'urlParameterValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'budget'; type: { kind: 'INPUT_OBJECT'; name: 'MarketingActivityBudgetInput'; ofType: null; }; defaultValue: null }, { name: 'adSpend'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'remoteId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'MarketingActivityExternalStatus'; ofType: null; }; defaultValue: null }, { name: 'remoteUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; }; defaultValue: null }, { name: 'remotePreviewImageUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; defaultValue: null }, { name: 'tactic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingTactic'; ofType: null; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'ENUM'; name: 'MarketingChannel'; ofType: null; }; defaultValue: null }, { name: 'marketingChannelType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingChannel'; ofType: null; }; }; defaultValue: null }, { name: 'referringDomain'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'channelHandle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scheduledStart'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'scheduledEnd'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'start'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'end'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'parentActivityId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'parentRemoteId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hierarchyLevel'; type: { kind: 'ENUM'; name: 'MarketingActivityHierarchyLevel'; ofType: null; }; defaultValue: null }]; };
    'MarketingActivityCreateExternalPayload': { kind: 'OBJECT'; name: 'MarketingActivityCreateExternalPayload'; fields: { 'marketingActivity': { name: 'marketingActivity'; type: { kind: 'OBJECT'; name: 'MarketingActivity'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivityUserError'; ofType: null; }; }; }; } }; }; };
    'MarketingActivityCreateInput': { kind: 'INPUT_OBJECT'; name: 'MarketingActivityCreateInput'; isOneOf: false; inputFields: [{ name: 'marketingActivityTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'formData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'marketingActivityExtensionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'context'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'utm'; type: { kind: 'INPUT_OBJECT'; name: 'UTMInput'; ofType: null; }; defaultValue: null }, { name: 'urlParameterValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingActivityStatus'; ofType: null; }; }; defaultValue: null }, { name: 'budget'; type: { kind: 'INPUT_OBJECT'; name: 'MarketingActivityBudgetInput'; ofType: null; }; defaultValue: null }]; };
    'MarketingActivityCreatePayload': { kind: 'OBJECT'; name: 'MarketingActivityCreatePayload'; fields: { 'marketingActivity': { name: 'marketingActivity'; type: { kind: 'OBJECT'; name: 'MarketingActivity'; ofType: null; } }; 'redirectPath': { name: 'redirectPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'MarketingActivityDeleteExternalPayload': { kind: 'OBJECT'; name: 'MarketingActivityDeleteExternalPayload'; fields: { 'deletedMarketingActivityId': { name: 'deletedMarketingActivityId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivityUserError'; ofType: null; }; }; }; } }; }; };
    'MarketingActivityEdge': { kind: 'OBJECT'; name: 'MarketingActivityEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivity'; ofType: null; }; } }; }; };
    'MarketingActivityExtensionAppErrorCode': { name: 'MarketingActivityExtensionAppErrorCode'; enumValues: 'NOT_ONBOARDED_ERROR' | 'VALIDATION_ERROR' | 'API_ERROR' | 'PLATFORM_ERROR' | 'INSTALL_REQUIRED_ERROR'; };
    'MarketingActivityExtensionAppErrors': { kind: 'OBJECT'; name: 'MarketingActivityExtensionAppErrors'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingActivityExtensionAppErrorCode'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'MarketingActivityExternalStatus': { name: 'MarketingActivityExternalStatus'; enumValues: 'ACTIVE' | 'INACTIVE' | 'PAUSED' | 'SCHEDULED' | 'DELETED_EXTERNALLY' | 'UNDEFINED'; };
    'MarketingActivityHierarchyLevel': { name: 'MarketingActivityHierarchyLevel'; enumValues: 'AD' | 'AD_GROUP' | 'CAMPAIGN'; };
    'MarketingActivitySortKeys': { name: 'MarketingActivitySortKeys'; enumValues: 'TITLE' | 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'MarketingActivityStatus': { name: 'MarketingActivityStatus'; enumValues: 'ACTIVE' | 'DELETED' | 'DELETED_EXTERNALLY' | 'DISCONNECTED' | 'DRAFT' | 'FAILED' | 'INACTIVE' | 'PAUSED' | 'PENDING' | 'SCHEDULED' | 'UNDEFINED'; };
    'MarketingActivityStatusBadgeType': { name: 'MarketingActivityStatusBadgeType'; enumValues: 'DEFAULT' | 'SUCCESS' | 'ATTENTION' | 'WARNING' | 'INFO'; };
    'MarketingActivityUpdateExternalInput': { kind: 'INPUT_OBJECT'; name: 'MarketingActivityUpdateExternalInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'budget'; type: { kind: 'INPUT_OBJECT'; name: 'MarketingActivityBudgetInput'; ofType: null; }; defaultValue: null }, { name: 'adSpend'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'remoteUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; defaultValue: null }, { name: 'remotePreviewImageUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; defaultValue: null }, { name: 'tactic'; type: { kind: 'ENUM'; name: 'MarketingTactic'; ofType: null; }; defaultValue: null }, { name: 'channel'; type: { kind: 'ENUM'; name: 'MarketingChannel'; ofType: null; }; defaultValue: null }, { name: 'marketingChannelType'; type: { kind: 'ENUM'; name: 'MarketingChannel'; ofType: null; }; defaultValue: null }, { name: 'referringDomain'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scheduledStart'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'scheduledEnd'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'start'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'end'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'MarketingActivityExternalStatus'; ofType: null; }; defaultValue: null }]; };
    'MarketingActivityUpdateExternalPayload': { kind: 'OBJECT'; name: 'MarketingActivityUpdateExternalPayload'; fields: { 'marketingActivity': { name: 'marketingActivity'; type: { kind: 'OBJECT'; name: 'MarketingActivity'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivityUserError'; ofType: null; }; }; }; } }; }; };
    'MarketingActivityUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MarketingActivityUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'marketingRecommendationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'budget'; type: { kind: 'INPUT_OBJECT'; name: 'MarketingActivityBudgetInput'; ofType: null; }; defaultValue: null }, { name: 'adSpend'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'MarketingActivityStatus'; ofType: null; }; defaultValue: null }, { name: 'targetStatus'; type: { kind: 'ENUM'; name: 'MarketingActivityStatus'; ofType: null; }; defaultValue: null }, { name: 'formData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'utm'; type: { kind: 'INPUT_OBJECT'; name: 'UTMInput'; ofType: null; }; defaultValue: null }, { name: 'urlParameterValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'marketedResources'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'context'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'errors'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }]; };
    'MarketingActivityUpdatePayload': { kind: 'OBJECT'; name: 'MarketingActivityUpdatePayload'; fields: { 'marketingActivity': { name: 'marketingActivity'; type: { kind: 'OBJECT'; name: 'MarketingActivity'; ofType: null; } }; 'redirectPath': { name: 'redirectPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'MarketingActivityUpsertExternalInput': { kind: 'INPUT_OBJECT'; name: 'MarketingActivityUpsertExternalInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'utm'; type: { kind: 'INPUT_OBJECT'; name: 'UTMInput'; ofType: null; }; defaultValue: null }, { name: 'budget'; type: { kind: 'INPUT_OBJECT'; name: 'MarketingActivityBudgetInput'; ofType: null; }; defaultValue: null }, { name: 'adSpend'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'remoteId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingActivityExternalStatus'; ofType: null; }; }; defaultValue: null }, { name: 'remoteUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; }; defaultValue: null }, { name: 'remotePreviewImageUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; defaultValue: null }, { name: 'tactic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingTactic'; ofType: null; }; }; defaultValue: null }, { name: 'marketingChannelType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingChannel'; ofType: null; }; }; defaultValue: null }, { name: 'referringDomain'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'channelHandle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scheduledStart'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'scheduledEnd'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'start'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'end'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'urlParameterValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'parentRemoteId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hierarchyLevel'; type: { kind: 'ENUM'; name: 'MarketingActivityHierarchyLevel'; ofType: null; }; defaultValue: null }]; };
    'MarketingActivityUpsertExternalPayload': { kind: 'OBJECT'; name: 'MarketingActivityUpsertExternalPayload'; fields: { 'marketingActivity': { name: 'marketingActivity'; type: { kind: 'OBJECT'; name: 'MarketingActivity'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivityUserError'; ofType: null; }; }; }; } }; }; };
    'MarketingActivityUserError': { kind: 'OBJECT'; name: 'MarketingActivityUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MarketingActivityUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MarketingActivityUserErrorCode': { name: 'MarketingActivityUserErrorCode'; enumValues: 'INVALID' | 'TAKEN' | 'MARKETING_ACTIVITY_DOES_NOT_EXIST' | 'MARKETING_EVENT_DOES_NOT_EXIST' | 'CURRENCY_CODE_MISMATCH_INPUT' | 'MARKETING_ACTIVITY_CURRENCY_CODE_MISMATCH' | 'DELETE_JOB_FAILED_TO_ENQUEUE' | 'NON_HIERARCHIAL_REQUIRES_UTM_URL_PARAMETER' | 'DELETE_JOB_ENQUEUED' | 'ACTIVITY_NOT_EXTERNAL' | 'IMMUTABLE_CHANNEL_HANDLE' | 'IMMUTABLE_URL_PARAMETER' | 'IMMUTABLE_UTM_PARAMETERS' | 'IMMUTABLE_PARENT_ID' | 'IMMUTABLE_HIERARCHY_LEVEL' | 'INVALID_REMOTE_ID' | 'INVALID_CHANNEL_HANDLE' | 'INVALID_DELETE_ACTIVITY_EXTERNAL_ARGUMENTS' | 'INVALID_DELETE_ENGAGEMENTS_ARGUMENTS' | 'INVALID_MARKETING_ACTIVITY_EXTERNAL_ARGUMENTS' | 'INVALID_MARKETING_ENGAGEMENT_ARGUMENTS' | 'INVALID_MARKETING_ENGAGEMENT_ARGUMENT_MISSING' | 'CANNOT_DELETE_ACTIVITY_WITH_CHILD_EVENTS' | 'CANNOT_UPDATE_TACTIC_TO_STOREFRONT_APP' | 'CANNOT_UPDATE_TACTIC_IF_ORIGINALLY_STOREFRONT_APP'; };
    'MarketingBudget': { kind: 'OBJECT'; name: 'MarketingBudget'; fields: { 'budgetType': { name: 'budgetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingBudgetBudgetType'; ofType: null; }; } }; 'total': { name: 'total'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'MarketingBudgetBudgetType': { name: 'MarketingBudgetBudgetType'; enumValues: 'DAILY' | 'LIFETIME'; };
    'MarketingChannel': { name: 'MarketingChannel'; enumValues: 'SEARCH' | 'DISPLAY' | 'SOCIAL' | 'EMAIL' | 'REFERRAL'; };
    'MarketingEngagement': { kind: 'OBJECT'; name: 'MarketingEngagement'; fields: { 'adSpend': { name: 'adSpend'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'channelHandle': { name: 'channelHandle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clicksCount': { name: 'clicksCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'commentsCount': { name: 'commentsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'complaintsCount': { name: 'complaintsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'failsCount': { name: 'failsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'favoritesCount': { name: 'favoritesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'firstTimeCustomers': { name: 'firstTimeCustomers'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'impressionsCount': { name: 'impressionsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'isCumulative': { name: 'isCumulative'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'marketingActivity': { name: 'marketingActivity'; type: { kind: 'OBJECT'; name: 'MarketingActivity'; ofType: null; } }; 'occurredOn': { name: 'occurredOn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; } }; 'orders': { name: 'orders'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'returningCustomers': { name: 'returningCustomers'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'sales': { name: 'sales'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'sendsCount': { name: 'sendsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'sessionsCount': { name: 'sessionsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'sharesCount': { name: 'sharesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'uniqueClicksCount': { name: 'uniqueClicksCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'uniqueViewsCount': { name: 'uniqueViewsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'unsubscribesCount': { name: 'unsubscribesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'utcOffset': { name: 'utcOffset'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UtcOffset'; ofType: null; }; } }; 'viewsCount': { name: 'viewsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'MarketingEngagementCreatePayload': { kind: 'OBJECT'; name: 'MarketingEngagementCreatePayload'; fields: { 'marketingEngagement': { name: 'marketingEngagement'; type: { kind: 'OBJECT'; name: 'MarketingEngagement'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivityUserError'; ofType: null; }; }; }; } }; }; };
    'MarketingEngagementInput': { kind: 'INPUT_OBJECT'; name: 'MarketingEngagementInput'; isOneOf: false; inputFields: [{ name: 'occurredOn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; }; defaultValue: null }, { name: 'impressionsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'viewsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'clicksCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sharesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'favoritesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'commentsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'unsubscribesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'complaintsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'failsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sendsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'uniqueViewsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'uniqueClicksCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'adSpend'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'isCumulative'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'utcOffset'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UtcOffset'; ofType: null; }; }; defaultValue: null }, { name: 'sales'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'sessionsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'orders'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'firstTimeCustomers'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'returningCustomers'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }]; };
    'MarketingEngagementsDeletePayload': { kind: 'OBJECT'; name: 'MarketingEngagementsDeletePayload'; fields: { 'result': { name: 'result'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivityUserError'; ofType: null; }; }; }; } }; }; };
    'MarketingEvent': { kind: 'OBJECT'; name: 'MarketingEvent'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'channel': { name: 'channel'; type: { kind: 'ENUM'; name: 'MarketingChannel'; ofType: null; } }; 'channelHandle': { name: 'channelHandle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endedAt': { name: 'endedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'manageUrl': { name: 'manageUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'marketingChannelType': { name: 'marketingChannelType'; type: { kind: 'ENUM'; name: 'MarketingChannel'; ofType: null; } }; 'previewUrl': { name: 'previewUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'remoteId': { name: 'remoteId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'scheduledToEndAt': { name: 'scheduledToEndAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'sourceAndMedium': { name: 'sourceAndMedium'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startedAt': { name: 'startedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'targetTypeDisplayText': { name: 'targetTypeDisplayText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarketingTactic'; ofType: null; }; } }; 'utmCampaign': { name: 'utmCampaign'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'utmMedium': { name: 'utmMedium'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'utmSource': { name: 'utmSource'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MarketingEventConnection': { kind: 'OBJECT'; name: 'MarketingEventConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingEventEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingEvent'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MarketingEventEdge': { kind: 'OBJECT'; name: 'MarketingEventEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingEvent'; ofType: null; }; } }; }; };
    'MarketingEventSortKeys': { name: 'MarketingEventSortKeys'; enumValues: 'STARTED_AT' | 'ID' | 'RELEVANCE'; };
    'MarketingTactic': { name: 'MarketingTactic'; enumValues: 'ABANDONED_CART' | 'AD' | 'AFFILIATE' | 'LINK' | 'LOYALTY' | 'MESSAGE' | 'NEWSLETTER' | 'NOTIFICATION' | 'POST' | 'RETARGETING' | 'TRANSACTIONAL' | 'STOREFRONT_APP' | 'SEO'; };
    'Media': { kind: 'INTERFACE'; name: 'Media'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mediaContentType': { name: 'mediaContentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaContentType'; ofType: null; }; } }; 'mediaErrors': { name: 'mediaErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaError'; ofType: null; }; }; }; } }; 'mediaWarnings': { name: 'mediaWarnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaWarning'; ofType: null; }; }; }; } }; 'preview': { name: 'preview'; type: { kind: 'OBJECT'; name: 'MediaPreviewImage'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaStatus'; ofType: null; }; } }; }; possibleTypes: 'ExternalVideo' | 'MediaImage' | 'Model3d' | 'Video'; };
    'MediaConnection': { kind: 'OBJECT'; name: 'MediaConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Media'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MediaContentType': { name: 'MediaContentType'; enumValues: 'VIDEO' | 'EXTERNAL_VIDEO' | 'MODEL_3D' | 'IMAGE'; };
    'MediaEdge': { kind: 'OBJECT'; name: 'MediaEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Media'; ofType: null; }; } }; }; };
    'MediaError': { kind: 'OBJECT'; name: 'MediaError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaErrorCode'; ofType: null; }; } }; 'details': { name: 'details'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MediaErrorCode': { name: 'MediaErrorCode'; enumValues: 'UNKNOWN' | 'INVALID_SIGNED_URL' | 'IMAGE_DOWNLOAD_FAILURE' | 'IMAGE_PROCESSING_FAILURE' | 'MEDIA_TIMEOUT_ERROR' | 'EXTERNAL_VIDEO_NOT_FOUND' | 'EXTERNAL_VIDEO_UNLISTED' | 'EXTERNAL_VIDEO_INVALID_ASPECT_RATIO' | 'EXTERNAL_VIDEO_EMBED_DISABLED' | 'EXTERNAL_VIDEO_EMBED_NOT_FOUND_OR_TRANSCODING' | 'GENERIC_FILE_DOWNLOAD_FAILURE' | 'GENERIC_FILE_INVALID_SIZE' | 'VIDEO_METADATA_READ_ERROR' | 'VIDEO_INVALID_FILETYPE_ERROR' | 'VIDEO_MIN_WIDTH_ERROR' | 'VIDEO_MAX_WIDTH_ERROR' | 'VIDEO_MIN_HEIGHT_ERROR' | 'VIDEO_MAX_HEIGHT_ERROR' | 'VIDEO_MIN_DURATION_ERROR' | 'VIDEO_MAX_DURATION_ERROR' | 'VIDEO_VALIDATION_ERROR' | 'MODEL3D_VALIDATION_ERROR' | 'MODEL3D_THUMBNAIL_GENERATION_ERROR' | 'MODEL3D_THUMBNAIL_REGENERATION_ERROR' | 'MODEL3D_GLB_TO_USDZ_CONVERSION_ERROR' | 'MODEL3D_GLB_OUTPUT_CREATION_ERROR' | 'MODEL3D_PROCESSING_FAILURE' | 'UNSUPPORTED_IMAGE_FILE_TYPE' | 'INVALID_IMAGE_FILE_SIZE' | 'INVALID_IMAGE_ASPECT_RATIO' | 'INVALID_IMAGE_RESOLUTION' | 'FILE_STORAGE_LIMIT_EXCEEDED' | 'DUPLICATE_FILENAME_ERROR'; };
    'MediaHost': { name: 'MediaHost'; enumValues: 'YOUTUBE' | 'VIMEO'; };
    'MediaImage': { kind: 'OBJECT'; name: 'MediaImage'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'fileErrors': { name: 'fileErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FileError'; ofType: null; }; }; }; } }; 'fileStatus': { name: 'fileStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileStatus'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'mediaContentType': { name: 'mediaContentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaContentType'; ofType: null; }; } }; 'mediaErrors': { name: 'mediaErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaError'; ofType: null; }; }; }; } }; 'mediaWarnings': { name: 'mediaWarnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaWarning'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'mimeType': { name: 'mimeType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'originalSource': { name: 'originalSource'; type: { kind: 'OBJECT'; name: 'MediaImageOriginalSource'; ofType: null; } }; 'preview': { name: 'preview'; type: { kind: 'OBJECT'; name: 'MediaPreviewImage'; ofType: null; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaStatus'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'MediaImageOriginalSource': { kind: 'OBJECT'; name: 'MediaImageOriginalSource'; fields: { 'fileSize': { name: 'fileSize'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; };
    'MediaPreviewImage': { kind: 'OBJECT'; name: 'MediaPreviewImage'; fields: { 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaPreviewImageStatus'; ofType: null; }; } }; }; };
    'MediaPreviewImageStatus': { name: 'MediaPreviewImageStatus'; enumValues: 'UPLOADED' | 'PROCESSING' | 'READY' | 'FAILED'; };
    'MediaStatus': { name: 'MediaStatus'; enumValues: 'UPLOADED' | 'PROCESSING' | 'READY' | 'FAILED'; };
    'MediaUserError': { kind: 'OBJECT'; name: 'MediaUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MediaUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MediaUserErrorCode': { name: 'MediaUserErrorCode'; enumValues: 'INVALID' | 'BLANK' | 'VIDEO_VALIDATION_ERROR' | 'MODEL3D_VALIDATION_ERROR' | 'VIDEO_THROTTLE_EXCEEDED' | 'MODEL3D_THROTTLE_EXCEEDED' | 'PRODUCT_MEDIA_LIMIT_EXCEEDED' | 'SHOP_MEDIA_LIMIT_EXCEEDED' | 'PRODUCT_DOES_NOT_EXIST' | 'MEDIA_DOES_NOT_EXIST' | 'MEDIA_DOES_NOT_EXIST_ON_PRODUCT' | 'TOO_MANY_MEDIA_PER_INPUT_PAIR' | 'MAXIMUM_VARIANT_MEDIA_PAIRS_EXCEEDED' | 'INVALID_MEDIA_TYPE' | 'PRODUCT_VARIANT_SPECIFIED_MULTIPLE_TIMES' | 'PRODUCT_VARIANT_DOES_NOT_EXIST_ON_PRODUCT' | 'NON_READY_MEDIA' | 'PRODUCT_VARIANT_ALREADY_HAS_MEDIA' | 'MEDIA_IS_NOT_ATTACHED_TO_VARIANT' | 'MEDIA_CANNOT_BE_MODIFIED' | 'MISSING_ARGUMENTS'; };
    'MediaWarning': { kind: 'OBJECT'; name: 'MediaWarning'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaWarningCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MediaWarningCode': { name: 'MediaWarningCode'; enumValues: 'MODEL_SMALL_PHYSICAL_SIZE' | 'MODEL_LARGE_PHYSICAL_SIZE'; };
    'Menu': { kind: 'OBJECT'; name: 'Menu'; fields: { 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isDefault': { name: 'isDefault'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; }; }; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; }; };
    'MenuConnection': { kind: 'OBJECT'; name: 'MenuConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Menu'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MenuCreatePayload': { kind: 'OBJECT'; name: 'MenuCreatePayload'; fields: { 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuCreateUserError'; ofType: null; }; }; }; } }; }; };
    'MenuCreateUserError': { kind: 'OBJECT'; name: 'MenuCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MenuCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MenuCreateUserErrorCode': { name: 'MenuCreateUserErrorCode'; enumValues: 'NOT_FOUND' | 'NESTING_TOO_DEEP'; };
    'MenuDeletePayload': { kind: 'OBJECT'; name: 'MenuDeletePayload'; fields: { 'deletedMenuId': { name: 'deletedMenuId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'MenuDeleteUserError': { kind: 'OBJECT'; name: 'MenuDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MenuDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MenuDeleteUserErrorCode': { name: 'MenuDeleteUserErrorCode'; enumValues: 'MENU_DOES_NOT_EXIST' | 'UNABLE_TO_DELETE_DEFAULT_MENU'; };
    'MenuEdge': { kind: 'OBJECT'; name: 'MenuEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Menu'; ofType: null; }; } }; }; };
    'MenuItem': { kind: 'OBJECT'; name: 'MenuItem'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; }; }; }; } }; 'resourceId': { name: 'resourceId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MenuItemType'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuItemCreateInput': { kind: 'INPUT_OBJECT'; name: 'MenuItemCreateInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MenuItemType'; ofType: null; }; }; defaultValue: null }, { name: 'resourceId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'items'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MenuItemCreateInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'MenuItemType': { name: 'MenuItemType'; enumValues: 'FRONTPAGE' | 'COLLECTION' | 'COLLECTIONS' | 'PRODUCT' | 'CATALOG' | 'PAGE' | 'BLOG' | 'ARTICLE' | 'SEARCH' | 'SHOP_POLICY' | 'HTTP' | 'METAOBJECT'; };
    'MenuItemUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MenuItemUpdateInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MenuItemType'; ofType: null; }; }; defaultValue: null }, { name: 'resourceId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'items'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MenuItemUpdateInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'MenuSortKeys': { name: 'MenuSortKeys'; enumValues: 'TITLE' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'; };
    'MenuUpdatePayload': { kind: 'OBJECT'; name: 'MenuUpdatePayload'; fields: { 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'MenuUpdateUserError': { kind: 'OBJECT'; name: 'MenuUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MenuUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MenuUpdateUserErrorCode': { name: 'MenuUpdateUserErrorCode'; enumValues: 'NOT_FOUND' | 'NESTING_TOO_DEEP'; };
    'MerchandiseDiscountClass': { name: 'MerchandiseDiscountClass'; enumValues: 'PRODUCT' | 'ORDER'; };
    'MerchantApprovalSignals': { kind: 'OBJECT'; name: 'MerchantApprovalSignals'; fields: { 'identityVerified': { name: 'identityVerified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'verifiedByShopify': { name: 'verifiedByShopify'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'verifiedByShopifyTier': { name: 'verifiedByShopifyTier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Metafield': { kind: 'OBJECT'; name: 'Metafield'; fields: { 'compareDigest': { name: 'compareDigest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'definition': { name: 'definition'; type: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'jsonValue': { name: 'jsonValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'owner': { name: 'owner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'HasMetafields'; ofType: null; }; } }; 'ownerType': { name: 'ownerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldOwnerType'; ofType: null; }; } }; 'reference': { name: 'reference'; type: { kind: 'UNION'; name: 'MetafieldReference'; ofType: null; } }; 'references': { name: 'references'; type: { kind: 'OBJECT'; name: 'MetafieldReferenceConnection'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldAccess': { kind: 'OBJECT'; name: 'MetafieldAccess'; fields: { 'admin': { name: 'admin'; type: { kind: 'ENUM'; name: 'MetafieldAdminAccess'; ofType: null; } }; 'customerAccount': { name: 'customerAccount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldCustomerAccountAccess'; ofType: null; }; } }; 'grants': { name: 'grants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldAccessGrant'; ofType: null; }; }; }; } }; 'storefront': { name: 'storefront'; type: { kind: 'ENUM'; name: 'MetafieldStorefrontAccess'; ofType: null; } }; }; };
    'MetafieldAccessGrant': { kind: 'OBJECT'; name: 'MetafieldAccessGrant'; fields: { 'access': { name: 'access'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldGrantAccessLevel'; ofType: null; }; } }; 'grantee': { name: 'grantee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldAccessGrantDeleteInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessGrantDeleteInput'; isOneOf: false; inputFields: [{ name: 'grantee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MetafieldAccessGrantInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessGrantInput'; isOneOf: false; inputFields: [{ name: 'grantee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'access'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldGrantAccessLevel'; ofType: null; }; }; defaultValue: null }]; };
    'MetafieldAccessGrantOperationInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessGrantOperationInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessGrantInput'; ofType: null; }; defaultValue: null }, { name: 'update'; type: { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessGrantInput'; ofType: null; }; defaultValue: null }, { name: 'delete'; type: { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessGrantDeleteInput'; ofType: null; }; defaultValue: null }]; };
    'MetafieldAccessInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessInput'; isOneOf: false; inputFields: [{ name: 'admin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldAdminAccessInput'; ofType: null; }; }; defaultValue: null }, { name: 'storefront'; type: { kind: 'ENUM'; name: 'MetafieldStorefrontAccessInput'; ofType: null; }; defaultValue: null }, { name: 'customerAccount'; type: { kind: 'ENUM'; name: 'MetafieldCustomerAccountAccessInput'; ofType: null; }; defaultValue: null }, { name: 'grants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessGrantInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'MetafieldAccessUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessUpdateInput'; isOneOf: false; inputFields: [{ name: 'admin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldAdminAccessInput'; ofType: null; }; }; defaultValue: null }, { name: 'storefront'; type: { kind: 'ENUM'; name: 'MetafieldStorefrontAccessInput'; ofType: null; }; defaultValue: null }, { name: 'customerAccount'; type: { kind: 'ENUM'; name: 'MetafieldCustomerAccountAccessInput'; ofType: null; }; defaultValue: null }, { name: 'grants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessGrantOperationInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'MetafieldAdminAccess': { name: 'MetafieldAdminAccess'; enumValues: 'PRIVATE' | 'PUBLIC_READ' | 'PUBLIC_READ_WRITE' | 'MERCHANT_READ' | 'MERCHANT_READ_WRITE'; };
    'MetafieldAdminAccessInput': { name: 'MetafieldAdminAccessInput'; enumValues: 'PRIVATE' | 'PUBLIC_READ' | 'PUBLIC_READ_WRITE' | 'MERCHANT_READ' | 'MERCHANT_READ_WRITE'; };
    'MetafieldConnection': { kind: 'OBJECT'; name: 'MetafieldConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MetafieldCustomerAccountAccess': { name: 'MetafieldCustomerAccountAccess'; enumValues: 'READ_WRITE' | 'READ' | 'NONE'; };
    'MetafieldCustomerAccountAccessInput': { name: 'MetafieldCustomerAccountAccessInput'; enumValues: 'READ_WRITE' | 'READ' | 'NONE'; };
    'MetafieldDefinition': { kind: 'OBJECT'; name: 'MetafieldDefinition'; fields: { 'access': { name: 'access'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldAccess'; ofType: null; }; } }; 'constraints': { name: 'constraints'; type: { kind: 'OBJECT'; name: 'MetafieldDefinitionConstraints'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'metafieldsCount': { name: 'metafieldsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ownerType': { name: 'ownerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldOwnerType'; ofType: null; }; } }; 'pinnedPosition': { name: 'pinnedPosition'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'standardTemplate': { name: 'standardTemplate'; type: { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionTemplate'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionType'; ofType: null; }; } }; 'useAsCollectionCondition': { name: 'useAsCollectionCondition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'validationStatus': { name: 'validationStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldDefinitionValidationStatus'; ofType: null; }; } }; 'validations': { name: 'validations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionValidation'; ofType: null; }; }; }; } }; 'visibleToStorefrontApi': { name: 'visibleToStorefrontApi'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'MetafieldDefinitionConnection': { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MetafieldDefinitionConstraintStatus': { name: 'MetafieldDefinitionConstraintStatus'; enumValues: 'CONSTRAINED_AND_UNCONSTRAINED' | 'CONSTRAINED_ONLY' | 'UNCONSTRAINED_ONLY'; };
    'MetafieldDefinitionConstraintSubtypeIdentifier': { kind: 'INPUT_OBJECT'; name: 'MetafieldDefinitionConstraintSubtypeIdentifier'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MetafieldDefinitionConstraintValue': { kind: 'OBJECT'; name: 'MetafieldDefinitionConstraintValue'; fields: { 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldDefinitionConstraintValueConnection': { kind: 'OBJECT'; name: 'MetafieldDefinitionConstraintValueConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConstraintValueEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConstraintValue'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MetafieldDefinitionConstraintValueEdge': { kind: 'OBJECT'; name: 'MetafieldDefinitionConstraintValueEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConstraintValue'; ofType: null; }; } }; }; };
    'MetafieldDefinitionConstraints': { kind: 'OBJECT'; name: 'MetafieldDefinitionConstraints'; fields: { 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConstraintValueConnection'; ofType: null; }; } }; }; };
    'MetafieldDefinitionCreatePayload': { kind: 'OBJECT'; name: 'MetafieldDefinitionCreatePayload'; fields: { 'createdDefinition': { name: 'createdDefinition'; type: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionCreateUserError'; ofType: null; }; }; }; } }; }; };
    'MetafieldDefinitionCreateUserError': { kind: 'OBJECT'; name: 'MetafieldDefinitionCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MetafieldDefinitionCreateUserErrorCode'; ofType: null; } }; 'elementIndex': { name: 'elementIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldDefinitionCreateUserErrorCode': { name: 'MetafieldDefinitionCreateUserErrorCode'; enumValues: 'INVALID' | 'INCLUSION' | 'PRESENT' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'RESOURCE_TYPE_LIMIT_EXCEEDED' | 'LIMIT_EXCEEDED' | 'INVALID_OPTION' | 'DUPLICATE_OPTION' | 'RESERVED_NAMESPACE_KEY' | 'PINNED_LIMIT_REACHED' | 'UNSTRUCTURED_ALREADY_EXISTS' | 'INVALID_CHARACTER' | 'TYPE_NOT_ALLOWED_FOR_CONDITIONS' | 'OWNER_TYPE_LIMIT_EXCEEDED_FOR_AUTOMATED_COLLECTIONS' | 'GRANT_LIMIT_EXCEEDED' | 'INVALID_INPUT_COMBINATION'; };
    'MetafieldDefinitionDeletePayload': { kind: 'OBJECT'; name: 'MetafieldDefinitionDeletePayload'; fields: { 'deletedDefinitionId': { name: 'deletedDefinitionId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'MetafieldDefinitionDeleteUserError': { kind: 'OBJECT'; name: 'MetafieldDefinitionDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MetafieldDefinitionDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldDefinitionDeleteUserErrorCode': { name: 'MetafieldDefinitionDeleteUserErrorCode'; enumValues: 'PRESENT' | 'NOT_FOUND' | 'INTERNAL_ERROR' | 'REFERENCE_TYPE_DELETION_ERROR' | 'RESERVED_NAMESPACE_ORPHANED_METAFIELDS' | 'METAFIELD_DEFINITION_IN_USE' | 'DISALLOWED_OWNER_TYPE'; };
    'MetafieldDefinitionEdge': { kind: 'OBJECT'; name: 'MetafieldDefinitionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; }; } }; }; };
    'MetafieldDefinitionInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldDefinitionInput'; isOneOf: false; inputFields: [{ name: 'namespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ownerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldOwnerType'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'validations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldDefinitionValidationInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'visibleToStorefrontApi'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'useAsCollectionCondition'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'pin'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'access'; type: { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessInput'; ofType: null; }; defaultValue: null }]; };
    'MetafieldDefinitionPinPayload': { kind: 'OBJECT'; name: 'MetafieldDefinitionPinPayload'; fields: { 'pinnedDefinition': { name: 'pinnedDefinition'; type: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionPinUserError'; ofType: null; }; }; }; } }; }; };
    'MetafieldDefinitionPinUserError': { kind: 'OBJECT'; name: 'MetafieldDefinitionPinUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MetafieldDefinitionPinUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldDefinitionPinUserErrorCode': { name: 'MetafieldDefinitionPinUserErrorCode'; enumValues: 'NOT_FOUND' | 'PINNED_LIMIT_REACHED' | 'ALREADY_PINNED' | 'INTERNAL_ERROR' | 'DISALLOWED_OWNER_TYPE'; };
    'MetafieldDefinitionPinnedStatus': { name: 'MetafieldDefinitionPinnedStatus'; enumValues: 'ANY' | 'PINNED' | 'UNPINNED'; };
    'MetafieldDefinitionSortKeys': { name: 'MetafieldDefinitionSortKeys'; enumValues: 'ID' | 'NAME' | 'PINNED_POSITION' | 'RELEVANCE'; };
    'MetafieldDefinitionSupportedValidation': { kind: 'OBJECT'; name: 'MetafieldDefinitionSupportedValidation'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldDefinitionType': { kind: 'OBJECT'; name: 'MetafieldDefinitionType'; fields: { 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'supportedValidations': { name: 'supportedValidations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionSupportedValidation'; ofType: null; }; }; }; } }; 'supportsDefinitionMigrations': { name: 'supportsDefinitionMigrations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'valueType': { name: 'valueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldValueType'; ofType: null; }; } }; }; };
    'MetafieldDefinitionUnpinPayload': { kind: 'OBJECT'; name: 'MetafieldDefinitionUnpinPayload'; fields: { 'unpinnedDefinition': { name: 'unpinnedDefinition'; type: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionUnpinUserError'; ofType: null; }; }; }; } }; }; };
    'MetafieldDefinitionUnpinUserError': { kind: 'OBJECT'; name: 'MetafieldDefinitionUnpinUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MetafieldDefinitionUnpinUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldDefinitionUnpinUserErrorCode': { name: 'MetafieldDefinitionUnpinUserErrorCode'; enumValues: 'NOT_FOUND' | 'NOT_PINNED' | 'INTERNAL_ERROR' | 'DISALLOWED_OWNER_TYPE'; };
    'MetafieldDefinitionUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldDefinitionUpdateInput'; isOneOf: false; inputFields: [{ name: 'namespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ownerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldOwnerType'; ofType: null; }; }; defaultValue: null }, { name: 'validations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldDefinitionValidationInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'pin'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'visibleToStorefrontApi'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'useAsCollectionCondition'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'access'; type: { kind: 'INPUT_OBJECT'; name: 'MetafieldAccessUpdateInput'; ofType: null; }; defaultValue: null }]; };
    'MetafieldDefinitionUpdatePayload': { kind: 'OBJECT'; name: 'MetafieldDefinitionUpdatePayload'; fields: { 'updatedDefinition': { name: 'updatedDefinition'; type: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionUpdateUserError'; ofType: null; }; }; }; } }; 'validationJob': { name: 'validationJob'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; }; };
    'MetafieldDefinitionUpdateUserError': { kind: 'OBJECT'; name: 'MetafieldDefinitionUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MetafieldDefinitionUpdateUserErrorCode'; ofType: null; } }; 'elementIndex': { name: 'elementIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldDefinitionUpdateUserErrorCode': { name: 'MetafieldDefinitionUpdateUserErrorCode'; enumValues: 'PRESENT' | 'TOO_LONG' | 'NOT_FOUND' | 'INVALID_INPUT' | 'PINNED_LIMIT_REACHED' | 'INTERNAL_ERROR' | 'TYPE_NOT_ALLOWED_FOR_CONDITIONS' | 'METAFIELD_DEFINITION_IN_USE' | 'OWNER_TYPE_LIMIT_EXCEEDED_FOR_AUTOMATED_COLLECTIONS' | 'METAOBJECT_DEFINITION_CHANGED' | 'GRANT_LIMIT_EXCEEDED' | 'INVALID_INPUT_COMBINATION'; };
    'MetafieldDefinitionValidation': { kind: 'OBJECT'; name: 'MetafieldDefinitionValidation'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MetafieldDefinitionValidationInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldDefinitionValidationInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MetafieldDefinitionValidationStatus': { name: 'MetafieldDefinitionValidationStatus'; enumValues: 'ALL_VALID' | 'IN_PROGRESS' | 'SOME_INVALID'; };
    'MetafieldDeleteInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldDeleteInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'MetafieldDeletePayload': { kind: 'OBJECT'; name: 'MetafieldDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'MetafieldEdge': { kind: 'OBJECT'; name: 'MetafieldEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; }; } }; }; };
    'MetafieldGrantAccessLevel': { name: 'MetafieldGrantAccessLevel'; enumValues: 'READ' | 'READ_WRITE'; };
    'MetafieldIdentifier': { kind: 'OBJECT'; name: 'MetafieldIdentifier'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ownerId': { name: 'ownerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'MetafieldIdentifierInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldIdentifierInput'; isOneOf: false; inputFields: [{ name: 'ownerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MetafieldInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'namespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MetafieldOwnerType': { name: 'MetafieldOwnerType'; enumValues: 'API_PERMISSION' | 'COMPANY' | 'COMPANY_LOCATION' | 'PAYMENT_CUSTOMIZATION' | 'VALIDATION' | 'CUSTOMER' | 'DELIVERY_CUSTOMIZATION' | 'DRAFTORDER' | 'MARKET' | 'CARTTRANSFORM' | 'COLLECTION' | 'MEDIA_IMAGE' | 'PRODUCTIMAGE' | 'PRODUCT' | 'PRODUCTVARIANT' | 'SELLING_PLAN' | 'ARTICLE' | 'BLOG' | 'PAGE' | 'FULFILLMENT_CONSTRAINT_RULE' | 'ORDER_ROUTING_LOCATION_RULE' | 'DISCOUNT' | 'ORDER' | 'LOCATION' | 'SHOP'; };
    'MetafieldReference': { kind: 'UNION'; name: 'MetafieldReference'; fields: {}; possibleTypes: 'Collection' | 'Company' | 'Customer' | 'GenericFile' | 'MediaImage' | 'Metaobject' | 'Model3d' | 'OnlineStorePage' | 'Order' | 'Product' | 'ProductVariant' | 'TaxonomyValue' | 'Video'; };
    'MetafieldReferenceConnection': { kind: 'OBJECT'; name: 'MetafieldReferenceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldReferenceEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'UNION'; name: 'MetafieldReference'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MetafieldReferenceEdge': { kind: 'OBJECT'; name: 'MetafieldReferenceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'UNION'; name: 'MetafieldReference'; ofType: null; } }; }; };
    'MetafieldReferencer': { kind: 'UNION'; name: 'MetafieldReferencer'; fields: {}; possibleTypes: 'AppInstallation' | 'Collection' | 'Company' | 'CompanyLocation' | 'Customer' | 'DeliveryCustomization' | 'DiscountAutomaticNode' | 'DiscountCodeNode' | 'DiscountNode' | 'DraftOrder' | 'FulfillmentOrder' | 'Location' | 'Market' | 'Metaobject' | 'OnlineStoreArticle' | 'OnlineStoreBlog' | 'OnlineStorePage' | 'Order' | 'PaymentCustomization' | 'Product' | 'ProductVariant' | 'Shop'; };
    'MetafieldRelation': { kind: 'OBJECT'; name: 'MetafieldRelation'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'referencer': { name: 'referencer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'MetafieldReferencer'; ofType: null; }; } }; 'target': { name: 'target'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'MetafieldReference'; ofType: null; }; } }; }; };
    'MetafieldRelationConnection': { kind: 'OBJECT'; name: 'MetafieldRelationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldRelationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldRelation'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MetafieldRelationEdge': { kind: 'OBJECT'; name: 'MetafieldRelationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldRelation'; ofType: null; }; } }; }; };
    'MetafieldStorefrontAccess': { name: 'MetafieldStorefrontAccess'; enumValues: 'PUBLIC_READ' | 'NONE' | 'LEGACY_LIQUID_ONLY'; };
    'MetafieldStorefrontAccessInput': { name: 'MetafieldStorefrontAccessInput'; enumValues: 'PUBLIC_READ' | 'NONE'; };
    'MetafieldStorefrontVisibility': { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibility'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ownerType': { name: 'ownerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldOwnerType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'MetafieldStorefrontVisibilityConnection': { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibilityConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibilityEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibility'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MetafieldStorefrontVisibilityCreatePayload': { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibilityCreatePayload'; fields: { 'metafieldStorefrontVisibility': { name: 'metafieldStorefrontVisibility'; type: { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibility'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'MetafieldStorefrontVisibilityDeletePayload': { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibilityDeletePayload'; fields: { 'deletedMetafieldStorefrontVisibilityId': { name: 'deletedMetafieldStorefrontVisibilityId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'MetafieldStorefrontVisibilityEdge': { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibilityEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibility'; ofType: null; }; } }; }; };
    'MetafieldStorefrontVisibilityInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldStorefrontVisibilityInput'; isOneOf: false; inputFields: [{ name: 'namespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'ownerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldOwnerType'; ofType: null; }; }; defaultValue: null }]; };
    'MetafieldValidationStatus': { name: 'MetafieldValidationStatus'; enumValues: 'ANY' | 'VALID' | 'INVALID'; };
    'MetafieldValueType': { name: 'MetafieldValueType'; enumValues: 'STRING' | 'INTEGER' | 'JSON_STRING' | 'BOOLEAN'; };
    'MetafieldsDeletePayload': { kind: 'OBJECT'; name: 'MetafieldsDeletePayload'; fields: { 'deletedMetafields': { name: 'deletedMetafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldIdentifier'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'MetafieldsSetInput': { kind: 'INPUT_OBJECT'; name: 'MetafieldsSetInput'; isOneOf: false; inputFields: [{ name: 'ownerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'namespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'compareDigest'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MetafieldsSetPayload': { kind: 'OBJECT'; name: 'MetafieldsSetPayload'; fields: { 'metafields': { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldsSetUserError'; ofType: null; }; }; }; } }; }; };
    'MetafieldsSetUserError': { kind: 'OBJECT'; name: 'MetafieldsSetUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MetafieldsSetUserErrorCode'; ofType: null; } }; 'elementIndex': { name: 'elementIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetafieldsSetUserErrorCode': { name: 'MetafieldsSetUserErrorCode'; enumValues: 'CAPABILITY_VIOLATION' | 'STALE_OBJECT' | 'INVALID_COMPARE_DIGEST' | 'INVALID_TYPE' | 'INVALID_VALUE' | 'APP_NOT_AUTHORIZED' | 'INCLUSION' | 'PRESENT' | 'BLANK' | 'TOO_LONG' | 'TOO_SHORT' | 'LESS_THAN_OR_EQUAL_TO' | 'INTERNAL_ERROR'; };
    'Metaobject': { kind: 'OBJECT'; name: 'Metaobject'; fields: { 'capabilities': { name: 'capabilities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectCapabilityData'; ofType: null; }; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'createdByApp': { name: 'createdByApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'createdByStaff': { name: 'createdByStaff'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'definition': { name: 'definition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectDefinition'; ofType: null; }; } }; 'displayName': { name: 'displayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'OBJECT'; name: 'MetaobjectField'; ofType: null; } }; 'fields': { name: 'fields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectField'; ofType: null; }; }; }; } }; 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'referencedBy': { name: 'referencedBy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldRelationConnection'; ofType: null; }; } }; 'staffMember': { name: 'staffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'thumbnailField': { name: 'thumbnailField'; type: { kind: 'OBJECT'; name: 'MetaobjectField'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'MetaobjectAccess': { kind: 'OBJECT'; name: 'MetaobjectAccess'; fields: { 'admin': { name: 'admin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetaobjectAdminAccess'; ofType: null; }; } }; 'storefront': { name: 'storefront'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetaobjectStorefrontAccess'; ofType: null; }; } }; }; };
    'MetaobjectAccessInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectAccessInput'; isOneOf: false; inputFields: [{ name: 'admin'; type: { kind: 'ENUM'; name: 'MetaobjectAdminAccess'; ofType: null; }; defaultValue: null }, { name: 'storefront'; type: { kind: 'ENUM'; name: 'MetaobjectStorefrontAccess'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectAdminAccess': { name: 'MetaobjectAdminAccess'; enumValues: 'PRIVATE' | 'MERCHANT_READ' | 'MERCHANT_READ_WRITE' | 'PUBLIC_READ' | 'PUBLIC_READ_WRITE'; };
    'MetaobjectBulkDeletePayload': { kind: 'OBJECT'; name: 'MetaobjectBulkDeletePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectUserError'; ofType: null; }; }; }; } }; }; };
    'MetaobjectBulkDeleteWhereCondition': { kind: 'INPUT_OBJECT'; name: 'MetaobjectBulkDeleteWhereCondition'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'MetaobjectCapabilities': { kind: 'OBJECT'; name: 'MetaobjectCapabilities'; fields: { 'onlineStore': { name: 'onlineStore'; type: { kind: 'OBJECT'; name: 'MetaobjectCapabilitiesOnlineStore'; ofType: null; } }; 'publishable': { name: 'publishable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectCapabilitiesPublishable'; ofType: null; }; } }; 'renderable': { name: 'renderable'; type: { kind: 'OBJECT'; name: 'MetaobjectCapabilitiesRenderable'; ofType: null; } }; 'translatable': { name: 'translatable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectCapabilitiesTranslatable'; ofType: null; }; } }; }; };
    'MetaobjectCapabilitiesOnlineStore': { kind: 'OBJECT'; name: 'MetaobjectCapabilitiesOnlineStore'; fields: { 'data': { name: 'data'; type: { kind: 'OBJECT'; name: 'MetaobjectCapabilityDefinitionDataOnlineStore'; ofType: null; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'MetaobjectCapabilitiesPublishable': { kind: 'OBJECT'; name: 'MetaobjectCapabilitiesPublishable'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'MetaobjectCapabilitiesRenderable': { kind: 'OBJECT'; name: 'MetaobjectCapabilitiesRenderable'; fields: { 'data': { name: 'data'; type: { kind: 'OBJECT'; name: 'MetaobjectCapabilityDefinitionDataRenderable'; ofType: null; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'MetaobjectCapabilitiesTranslatable': { kind: 'OBJECT'; name: 'MetaobjectCapabilitiesTranslatable'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'MetaobjectCapabilityCreateInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityCreateInput'; isOneOf: false; inputFields: [{ name: 'publishable'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityPublishableInput'; ofType: null; }; defaultValue: null }, { name: 'translatable'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityTranslatableInput'; ofType: null; }; defaultValue: null }, { name: 'renderable'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityRenderableInput'; ofType: null; }; defaultValue: null }, { name: 'onlineStore'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityOnlineStoreInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectCapabilityData': { kind: 'OBJECT'; name: 'MetaobjectCapabilityData'; fields: { 'onlineStore': { name: 'onlineStore'; type: { kind: 'OBJECT'; name: 'MetaobjectCapabilityDataOnlineStore'; ofType: null; } }; 'publishable': { name: 'publishable'; type: { kind: 'OBJECT'; name: 'MetaobjectCapabilityDataPublishable'; ofType: null; } }; }; };
    'MetaobjectCapabilityDataInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDataInput'; isOneOf: false; inputFields: [{ name: 'publishable'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDataPublishableInput'; ofType: null; }; defaultValue: null }, { name: 'onlineStore'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDataOnlineStoreInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectCapabilityDataOnlineStore': { kind: 'OBJECT'; name: 'MetaobjectCapabilityDataOnlineStore'; fields: { 'templateSuffix': { name: 'templateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MetaobjectCapabilityDataOnlineStoreInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDataOnlineStoreInput'; isOneOf: false; inputFields: [{ name: 'templateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectCapabilityDataPublishable': { kind: 'OBJECT'; name: 'MetaobjectCapabilityDataPublishable'; fields: { 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetaobjectStatus'; ofType: null; }; } }; }; };
    'MetaobjectCapabilityDataPublishableInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDataPublishableInput'; isOneOf: false; inputFields: [{ name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetaobjectStatus'; ofType: null; }; }; defaultValue: null }]; };
    'MetaobjectCapabilityDefinitionDataOnlineStore': { kind: 'OBJECT'; name: 'MetaobjectCapabilityDefinitionDataOnlineStore'; fields: { 'canCreateRedirects': { name: 'canCreateRedirects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'urlHandle': { name: 'urlHandle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetaobjectCapabilityDefinitionDataOnlineStoreInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDefinitionDataOnlineStoreInput'; isOneOf: false; inputFields: [{ name: 'urlHandle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'createRedirects'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'MetaobjectCapabilityDefinitionDataRenderable': { kind: 'OBJECT'; name: 'MetaobjectCapabilityDefinitionDataRenderable'; fields: { 'metaDescriptionKey': { name: 'metaDescriptionKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metaTitleKey': { name: 'metaTitleKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MetaobjectCapabilityDefinitionDataRenderableInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDefinitionDataRenderableInput'; isOneOf: false; inputFields: [{ name: 'metaTitleKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metaDescriptionKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectCapabilityOnlineStoreInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityOnlineStoreInput'; isOneOf: false; inputFields: [{ name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDefinitionDataOnlineStoreInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectCapabilityPublishableInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityPublishableInput'; isOneOf: false; inputFields: [{ name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'MetaobjectCapabilityRenderableInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityRenderableInput'; isOneOf: false; inputFields: [{ name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDefinitionDataRenderableInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectCapabilityTranslatableInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityTranslatableInput'; isOneOf: false; inputFields: [{ name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'MetaobjectCapabilityUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityUpdateInput'; isOneOf: false; inputFields: [{ name: 'publishable'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityPublishableInput'; ofType: null; }; defaultValue: null }, { name: 'translatable'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityTranslatableInput'; ofType: null; }; defaultValue: null }, { name: 'renderable'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityRenderableInput'; ofType: null; }; defaultValue: null }, { name: 'onlineStore'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityOnlineStoreInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectConnection': { kind: 'OBJECT'; name: 'MetaobjectConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Metaobject'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MetaobjectCreateInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectCreateInput'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'handle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'capabilities'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDataInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectCreatePayload': { kind: 'OBJECT'; name: 'MetaobjectCreatePayload'; fields: { 'metaobject': { name: 'metaobject'; type: { kind: 'OBJECT'; name: 'Metaobject'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectUserError'; ofType: null; }; }; }; } }; }; };
    'MetaobjectDefinition': { kind: 'OBJECT'; name: 'MetaobjectDefinition'; fields: { 'access': { name: 'access'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectAccess'; ofType: null; }; } }; 'capabilities': { name: 'capabilities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectCapabilities'; ofType: null; }; } }; 'createdByApp': { name: 'createdByApp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'createdByStaff': { name: 'createdByStaff'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'displayNameKey': { name: 'displayNameKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldDefinitions': { name: 'fieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectFieldDefinition'; ofType: null; }; }; }; } }; 'hasThumbnailField': { name: 'hasThumbnailField'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metaobjects': { name: 'metaobjects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectConnection'; ofType: null; }; } }; 'metaobjectsCount': { name: 'metaobjectsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetaobjectDefinitionConnection': { kind: 'OBJECT'; name: 'MetaobjectDefinitionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectDefinitionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectDefinition'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MetaobjectDefinitionCreateInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectDefinitionCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'fieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldDefinitionCreateInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'access'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectAccessInput'; ofType: null; }; defaultValue: null }, { name: 'displayNameKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'capabilities'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityCreateInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectDefinitionCreatePayload': { kind: 'OBJECT'; name: 'MetaobjectDefinitionCreatePayload'; fields: { 'metaobjectDefinition': { name: 'metaobjectDefinition'; type: { kind: 'OBJECT'; name: 'MetaobjectDefinition'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectUserError'; ofType: null; }; }; }; } }; }; };
    'MetaobjectDefinitionDeletePayload': { kind: 'OBJECT'; name: 'MetaobjectDefinitionDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectUserError'; ofType: null; }; }; }; } }; }; };
    'MetaobjectDefinitionEdge': { kind: 'OBJECT'; name: 'MetaobjectDefinitionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectDefinition'; ofType: null; }; } }; }; };
    'MetaobjectDefinitionUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectDefinitionUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fieldDefinitions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldDefinitionOperationInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'access'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectAccessInput'; ofType: null; }; defaultValue: null }, { name: 'displayNameKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'resetFieldOrder'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'capabilities'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityUpdateInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectDefinitionUpdatePayload': { kind: 'OBJECT'; name: 'MetaobjectDefinitionUpdatePayload'; fields: { 'metaobjectDefinition': { name: 'metaobjectDefinition'; type: { kind: 'OBJECT'; name: 'MetaobjectDefinition'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectUserError'; ofType: null; }; }; }; } }; }; };
    'MetaobjectDeletePayload': { kind: 'OBJECT'; name: 'MetaobjectDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectUserError'; ofType: null; }; }; }; } }; }; };
    'MetaobjectEdge': { kind: 'OBJECT'; name: 'MetaobjectEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Metaobject'; ofType: null; }; } }; }; };
    'MetaobjectField': { kind: 'OBJECT'; name: 'MetaobjectField'; fields: { 'definition': { name: 'definition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectFieldDefinition'; ofType: null; }; } }; 'jsonValue': { name: 'jsonValue'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reference': { name: 'reference'; type: { kind: 'UNION'; name: 'MetafieldReference'; ofType: null; } }; 'references': { name: 'references'; type: { kind: 'OBJECT'; name: 'MetafieldReferenceConnection'; ofType: null; } }; 'thumbnail': { name: 'thumbnail'; type: { kind: 'OBJECT'; name: 'MetaobjectThumbnail'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MetaobjectFieldDefinition': { kind: 'OBJECT'; name: 'MetaobjectFieldDefinition'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'required': { name: 'required'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionType'; ofType: null; }; } }; 'validations': { name: 'validations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionValidation'; ofType: null; }; }; }; } }; }; };
    'MetaobjectFieldDefinitionCreateInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldDefinitionCreateInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'required'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'validations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldDefinitionValidationInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'MetaobjectFieldDefinitionDeleteInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldDefinitionDeleteInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MetaobjectFieldDefinitionOperationInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldDefinitionOperationInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldDefinitionCreateInput'; ofType: null; }; defaultValue: null }, { name: 'update'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldDefinitionUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'delete'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldDefinitionDeleteInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectFieldDefinitionUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldDefinitionUpdateInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'required'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'validations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldDefinitionValidationInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'MetaobjectFieldInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MetaobjectHandleInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectHandleInput'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MetaobjectStatus': { name: 'MetaobjectStatus'; enumValues: 'DRAFT' | 'ACTIVE'; };
    'MetaobjectStorefrontAccess': { name: 'MetaobjectStorefrontAccess'; enumValues: 'NONE' | 'PUBLIC_READ'; };
    'MetaobjectThumbnail': { kind: 'OBJECT'; name: 'MetaobjectThumbnail'; fields: { 'file': { name: 'file'; type: { kind: 'INTERFACE'; name: 'File'; ofType: null; } }; 'hex': { name: 'hex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MetaobjectUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectUpdateInput'; isOneOf: false; inputFields: [{ name: 'handle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'capabilities'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDataInput'; ofType: null; }; defaultValue: null }, { name: 'redirectNewHandle'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'MetaobjectUpdatePayload': { kind: 'OBJECT'; name: 'MetaobjectUpdatePayload'; fields: { 'metaobject': { name: 'metaobject'; type: { kind: 'OBJECT'; name: 'Metaobject'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectUserError'; ofType: null; }; }; }; } }; }; };
    'MetaobjectUpsertInput': { kind: 'INPUT_OBJECT'; name: 'MetaobjectUpsertInput'; isOneOf: false; inputFields: [{ name: 'handle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetaobjectFieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'capabilities'; type: { kind: 'INPUT_OBJECT'; name: 'MetaobjectCapabilityDataInput'; ofType: null; }; defaultValue: null }]; };
    'MetaobjectUpsertPayload': { kind: 'OBJECT'; name: 'MetaobjectUpsertPayload'; fields: { 'metaobject': { name: 'metaobject'; type: { kind: 'OBJECT'; name: 'Metaobject'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectUserError'; ofType: null; }; }; }; } }; }; };
    'MetaobjectUserError': { kind: 'OBJECT'; name: 'MetaobjectUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MetaobjectUserErrorCode'; ofType: null; } }; 'elementIndex': { name: 'elementIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'elementKey': { name: 'elementKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetaobjectUserErrorCode': { name: 'MetaobjectUserErrorCode'; enumValues: 'INVALID' | 'INCLUSION' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'PRESENT' | 'BLANK' | 'INVALID_TYPE' | 'INVALID_VALUE' | 'INVALID_OPTION' | 'DUPLICATE_FIELD_INPUT' | 'UNDEFINED_OBJECT_TYPE' | 'UNDEFINED_OBJECT_FIELD' | 'OBJECT_FIELD_TAKEN' | 'OBJECT_FIELD_REQUIRED' | 'RECORD_NOT_FOUND' | 'INTERNAL_ERROR' | 'MAX_DEFINITIONS_EXCEEDED' | 'MAX_OBJECTS_EXCEEDED' | 'IMMUTABLE' | 'NOT_AUTHORIZED' | 'RESERVED_NAME' | 'DISPLAY_NAME_CONFLICT' | 'CAPABILITY_NOT_ENABLED' | 'URL_HANDLE_TAKEN' | 'URL_HANDLE_INVALID' | 'URL_HANDLE_BLANK' | 'FIELD_TYPE_INVALID' | 'MISSING_REQUIRED_KEYS'; };
    'MethodDefinitionSortKeys': { name: 'MethodDefinitionSortKeys'; enumValues: 'RATE_PROVIDER_TYPE' | 'ID' | 'RELEVANCE'; };
    'MobilePlatformApplication': { kind: 'UNION'; name: 'MobilePlatformApplication'; fields: {}; possibleTypes: 'AndroidApplication' | 'AppleApplication'; };
    'MobilePlatformApplicationConnection': { kind: 'OBJECT'; name: 'MobilePlatformApplicationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MobilePlatformApplicationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'MobilePlatformApplication'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MobilePlatformApplicationCreateAndroidInput': { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationCreateAndroidInput'; isOneOf: false; inputFields: [{ name: 'applicationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'sha256CertFingerprints'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'appLinksEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'MobilePlatformApplicationCreateAppleInput': { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationCreateAppleInput'; isOneOf: false; inputFields: [{ name: 'appId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'universalLinksEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'sharedWebCredentialsEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'appClipsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'appClipApplicationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MobilePlatformApplicationCreateInput': { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationCreateInput'; isOneOf: true; inputFields: [{ name: 'android'; type: { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationCreateAndroidInput'; ofType: null; }; defaultValue: null }, { name: 'apple'; type: { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationCreateAppleInput'; ofType: null; }; defaultValue: null }]; };
    'MobilePlatformApplicationCreatePayload': { kind: 'OBJECT'; name: 'MobilePlatformApplicationCreatePayload'; fields: { 'mobilePlatformApplication': { name: 'mobilePlatformApplication'; type: { kind: 'UNION'; name: 'MobilePlatformApplication'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MobilePlatformApplicationUserError'; ofType: null; }; }; }; } }; }; };
    'MobilePlatformApplicationDeletePayload': { kind: 'OBJECT'; name: 'MobilePlatformApplicationDeletePayload'; fields: { 'deletedMobilePlatformApplicationId': { name: 'deletedMobilePlatformApplicationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MobilePlatformApplicationUserError'; ofType: null; }; }; }; } }; }; };
    'MobilePlatformApplicationEdge': { kind: 'OBJECT'; name: 'MobilePlatformApplicationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'MobilePlatformApplication'; ofType: null; }; } }; }; };
    'MobilePlatformApplicationUpdateAndroidInput': { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationUpdateAndroidInput'; isOneOf: false; inputFields: [{ name: 'applicationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'sha256CertFingerprints'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'appLinksEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'MobilePlatformApplicationUpdateAppleInput': { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationUpdateAppleInput'; isOneOf: false; inputFields: [{ name: 'appId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'universalLinksEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'sharedWebCredentialsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'appClipsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'appClipApplicationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MobilePlatformApplicationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationUpdateInput'; isOneOf: true; inputFields: [{ name: 'android'; type: { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationUpdateAndroidInput'; ofType: null; }; defaultValue: null }, { name: 'apple'; type: { kind: 'INPUT_OBJECT'; name: 'MobilePlatformApplicationUpdateAppleInput'; ofType: null; }; defaultValue: null }]; };
    'MobilePlatformApplicationUpdatePayload': { kind: 'OBJECT'; name: 'MobilePlatformApplicationUpdatePayload'; fields: { 'mobilePlatformApplication': { name: 'mobilePlatformApplication'; type: { kind: 'UNION'; name: 'MobilePlatformApplication'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MobilePlatformApplicationUserError'; ofType: null; }; }; }; } }; }; };
    'MobilePlatformApplicationUserError': { kind: 'OBJECT'; name: 'MobilePlatformApplicationUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'MobilePlatformApplicationUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MobilePlatformApplicationUserErrorCode': { name: 'MobilePlatformApplicationUserErrorCode'; enumValues: 'INVALID' | 'NOT_FOUND' | 'TOO_LONG'; };
    'Model3d': { kind: 'OBJECT'; name: 'Model3d'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'boundingBox': { name: 'boundingBox'; type: { kind: 'OBJECT'; name: 'Model3dBoundingBox'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'fileErrors': { name: 'fileErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FileError'; ofType: null; }; }; }; } }; 'fileStatus': { name: 'fileStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileStatus'; ofType: null; }; } }; 'filename': { name: 'filename'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mediaContentType': { name: 'mediaContentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaContentType'; ofType: null; }; } }; 'mediaErrors': { name: 'mediaErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaError'; ofType: null; }; }; }; } }; 'mediaWarnings': { name: 'mediaWarnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaWarning'; ofType: null; }; }; }; } }; 'originalSource': { name: 'originalSource'; type: { kind: 'OBJECT'; name: 'Model3dSource'; ofType: null; } }; 'preview': { name: 'preview'; type: { kind: 'OBJECT'; name: 'MediaPreviewImage'; ofType: null; } }; 'sources': { name: 'sources'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Model3dSource'; ofType: null; }; }; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaStatus'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'Model3dBoundingBox': { kind: 'OBJECT'; name: 'Model3dBoundingBox'; fields: { 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Vector3'; ofType: null; }; } }; }; };
    'Model3dSource': { kind: 'OBJECT'; name: 'Model3dSource'; fields: { 'filesize': { name: 'filesize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'format': { name: 'format'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'mimeType': { name: 'mimeType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Money': unknown;
    'MoneyBag': { kind: 'OBJECT'; name: 'MoneyBag'; fields: { 'presentmentMoney': { name: 'presentmentMoney'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'shopMoney': { name: 'shopMoney'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'MoneyInput': { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; }; defaultValue: null }, { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; }; defaultValue: null }]; };
    'MoneyV2': { kind: 'OBJECT'; name: 'MoneyV2'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; }; };
    'MoveInput': { kind: 'INPUT_OBJECT'; name: 'MoveInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'newPosition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; }; defaultValue: null }]; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'abandonmentEmailStateUpdate': { name: 'abandonmentEmailStateUpdate'; type: { kind: 'OBJECT'; name: 'AbandonmentEmailStateUpdatePayload'; ofType: null; } }; 'abandonmentUpdateActivitiesDeliveryStatuses': { name: 'abandonmentUpdateActivitiesDeliveryStatuses'; type: { kind: 'OBJECT'; name: 'AbandonmentUpdateActivitiesDeliveryStatusesPayload'; ofType: null; } }; 'appPurchaseOneTimeCreate': { name: 'appPurchaseOneTimeCreate'; type: { kind: 'OBJECT'; name: 'AppPurchaseOneTimeCreatePayload'; ofType: null; } }; 'appSubscriptionCancel': { name: 'appSubscriptionCancel'; type: { kind: 'OBJECT'; name: 'AppSubscriptionCancelPayload'; ofType: null; } }; 'appSubscriptionCreate': { name: 'appSubscriptionCreate'; type: { kind: 'OBJECT'; name: 'AppSubscriptionCreatePayload'; ofType: null; } }; 'appSubscriptionLineItemUpdate': { name: 'appSubscriptionLineItemUpdate'; type: { kind: 'OBJECT'; name: 'AppSubscriptionLineItemUpdatePayload'; ofType: null; } }; 'appSubscriptionTrialExtend': { name: 'appSubscriptionTrialExtend'; type: { kind: 'OBJECT'; name: 'AppSubscriptionTrialExtendPayload'; ofType: null; } }; 'appUsageRecordCreate': { name: 'appUsageRecordCreate'; type: { kind: 'OBJECT'; name: 'AppUsageRecordCreatePayload'; ofType: null; } }; 'bulkOperationCancel': { name: 'bulkOperationCancel'; type: { kind: 'OBJECT'; name: 'BulkOperationCancelPayload'; ofType: null; } }; 'bulkOperationRunMutation': { name: 'bulkOperationRunMutation'; type: { kind: 'OBJECT'; name: 'BulkOperationRunMutationPayload'; ofType: null; } }; 'bulkOperationRunQuery': { name: 'bulkOperationRunQuery'; type: { kind: 'OBJECT'; name: 'BulkOperationRunQueryPayload'; ofType: null; } }; 'bulkProductResourceFeedbackCreate': { name: 'bulkProductResourceFeedbackCreate'; type: { kind: 'OBJECT'; name: 'BulkProductResourceFeedbackCreatePayload'; ofType: null; } }; 'carrierServiceCreate': { name: 'carrierServiceCreate'; type: { kind: 'OBJECT'; name: 'CarrierServiceCreatePayload'; ofType: null; } }; 'carrierServiceDelete': { name: 'carrierServiceDelete'; type: { kind: 'OBJECT'; name: 'CarrierServiceDeletePayload'; ofType: null; } }; 'carrierServiceUpdate': { name: 'carrierServiceUpdate'; type: { kind: 'OBJECT'; name: 'CarrierServiceUpdatePayload'; ofType: null; } }; 'cartTransformCreate': { name: 'cartTransformCreate'; type: { kind: 'OBJECT'; name: 'CartTransformCreatePayload'; ofType: null; } }; 'cartTransformDelete': { name: 'cartTransformDelete'; type: { kind: 'OBJECT'; name: 'CartTransformDeletePayload'; ofType: null; } }; 'catalogContextUpdate': { name: 'catalogContextUpdate'; type: { kind: 'OBJECT'; name: 'CatalogContextUpdatePayload'; ofType: null; } }; 'catalogCreate': { name: 'catalogCreate'; type: { kind: 'OBJECT'; name: 'CatalogCreatePayload'; ofType: null; } }; 'catalogDelete': { name: 'catalogDelete'; type: { kind: 'OBJECT'; name: 'CatalogDeletePayload'; ofType: null; } }; 'catalogUpdate': { name: 'catalogUpdate'; type: { kind: 'OBJECT'; name: 'CatalogUpdatePayload'; ofType: null; } }; 'checkoutBrandingUpsert': { name: 'checkoutBrandingUpsert'; type: { kind: 'OBJECT'; name: 'CheckoutBrandingUpsertPayload'; ofType: null; } }; 'collectionAddProducts': { name: 'collectionAddProducts'; type: { kind: 'OBJECT'; name: 'CollectionAddProductsPayload'; ofType: null; } }; 'collectionAddProductsV2': { name: 'collectionAddProductsV2'; type: { kind: 'OBJECT'; name: 'CollectionAddProductsV2Payload'; ofType: null; } }; 'collectionCreate': { name: 'collectionCreate'; type: { kind: 'OBJECT'; name: 'CollectionCreatePayload'; ofType: null; } }; 'collectionDelete': { name: 'collectionDelete'; type: { kind: 'OBJECT'; name: 'CollectionDeletePayload'; ofType: null; } }; 'collectionPublish': { name: 'collectionPublish'; type: { kind: 'OBJECT'; name: 'CollectionPublishPayload'; ofType: null; } }; 'collectionRemoveProducts': { name: 'collectionRemoveProducts'; type: { kind: 'OBJECT'; name: 'CollectionRemoveProductsPayload'; ofType: null; } }; 'collectionReorderProducts': { name: 'collectionReorderProducts'; type: { kind: 'OBJECT'; name: 'CollectionReorderProductsPayload'; ofType: null; } }; 'collectionUnpublish': { name: 'collectionUnpublish'; type: { kind: 'OBJECT'; name: 'CollectionUnpublishPayload'; ofType: null; } }; 'collectionUpdate': { name: 'collectionUpdate'; type: { kind: 'OBJECT'; name: 'CollectionUpdatePayload'; ofType: null; } }; 'combinedListingUpdate': { name: 'combinedListingUpdate'; type: { kind: 'OBJECT'; name: 'CombinedListingUpdatePayload'; ofType: null; } }; 'companiesDelete': { name: 'companiesDelete'; type: { kind: 'OBJECT'; name: 'CompaniesDeletePayload'; ofType: null; } }; 'companyAddressDelete': { name: 'companyAddressDelete'; type: { kind: 'OBJECT'; name: 'CompanyAddressDeletePayload'; ofType: null; } }; 'companyAssignCustomerAsContact': { name: 'companyAssignCustomerAsContact'; type: { kind: 'OBJECT'; name: 'CompanyAssignCustomerAsContactPayload'; ofType: null; } }; 'companyAssignMainContact': { name: 'companyAssignMainContact'; type: { kind: 'OBJECT'; name: 'CompanyAssignMainContactPayload'; ofType: null; } }; 'companyContactAssignRole': { name: 'companyContactAssignRole'; type: { kind: 'OBJECT'; name: 'CompanyContactAssignRolePayload'; ofType: null; } }; 'companyContactAssignRoles': { name: 'companyContactAssignRoles'; type: { kind: 'OBJECT'; name: 'CompanyContactAssignRolesPayload'; ofType: null; } }; 'companyContactCreate': { name: 'companyContactCreate'; type: { kind: 'OBJECT'; name: 'CompanyContactCreatePayload'; ofType: null; } }; 'companyContactDelete': { name: 'companyContactDelete'; type: { kind: 'OBJECT'; name: 'CompanyContactDeletePayload'; ofType: null; } }; 'companyContactRemoveFromCompany': { name: 'companyContactRemoveFromCompany'; type: { kind: 'OBJECT'; name: 'CompanyContactRemoveFromCompanyPayload'; ofType: null; } }; 'companyContactRevokeRole': { name: 'companyContactRevokeRole'; type: { kind: 'OBJECT'; name: 'CompanyContactRevokeRolePayload'; ofType: null; } }; 'companyContactRevokeRoles': { name: 'companyContactRevokeRoles'; type: { kind: 'OBJECT'; name: 'CompanyContactRevokeRolesPayload'; ofType: null; } }; 'companyContactSendWelcomeEmail': { name: 'companyContactSendWelcomeEmail'; type: { kind: 'OBJECT'; name: 'CompanyContactSendWelcomeEmailPayload'; ofType: null; } }; 'companyContactUpdate': { name: 'companyContactUpdate'; type: { kind: 'OBJECT'; name: 'CompanyContactUpdatePayload'; ofType: null; } }; 'companyContactsDelete': { name: 'companyContactsDelete'; type: { kind: 'OBJECT'; name: 'CompanyContactsDeletePayload'; ofType: null; } }; 'companyCreate': { name: 'companyCreate'; type: { kind: 'OBJECT'; name: 'CompanyCreatePayload'; ofType: null; } }; 'companyDelete': { name: 'companyDelete'; type: { kind: 'OBJECT'; name: 'CompanyDeletePayload'; ofType: null; } }; 'companyLocationAssignAddress': { name: 'companyLocationAssignAddress'; type: { kind: 'OBJECT'; name: 'CompanyLocationAssignAddressPayload'; ofType: null; } }; 'companyLocationAssignRoles': { name: 'companyLocationAssignRoles'; type: { kind: 'OBJECT'; name: 'CompanyLocationAssignRolesPayload'; ofType: null; } }; 'companyLocationAssignTaxExemptions': { name: 'companyLocationAssignTaxExemptions'; type: { kind: 'OBJECT'; name: 'CompanyLocationAssignTaxExemptionsPayload'; ofType: null; } }; 'companyLocationCreate': { name: 'companyLocationCreate'; type: { kind: 'OBJECT'; name: 'CompanyLocationCreatePayload'; ofType: null; } }; 'companyLocationCreateTaxRegistration': { name: 'companyLocationCreateTaxRegistration'; type: { kind: 'OBJECT'; name: 'CompanyLocationCreateTaxRegistrationPayload'; ofType: null; } }; 'companyLocationDelete': { name: 'companyLocationDelete'; type: { kind: 'OBJECT'; name: 'CompanyLocationDeletePayload'; ofType: null; } }; 'companyLocationRevokeRoles': { name: 'companyLocationRevokeRoles'; type: { kind: 'OBJECT'; name: 'CompanyLocationRevokeRolesPayload'; ofType: null; } }; 'companyLocationRevokeTaxExemptions': { name: 'companyLocationRevokeTaxExemptions'; type: { kind: 'OBJECT'; name: 'CompanyLocationRevokeTaxExemptionsPayload'; ofType: null; } }; 'companyLocationRevokeTaxRegistration': { name: 'companyLocationRevokeTaxRegistration'; type: { kind: 'OBJECT'; name: 'CompanyLocationRevokeTaxRegistrationPayload'; ofType: null; } }; 'companyLocationUpdate': { name: 'companyLocationUpdate'; type: { kind: 'OBJECT'; name: 'CompanyLocationUpdatePayload'; ofType: null; } }; 'companyLocationsDelete': { name: 'companyLocationsDelete'; type: { kind: 'OBJECT'; name: 'CompanyLocationsDeletePayload'; ofType: null; } }; 'companyRevokeMainContact': { name: 'companyRevokeMainContact'; type: { kind: 'OBJECT'; name: 'CompanyRevokeMainContactPayload'; ofType: null; } }; 'companyUpdate': { name: 'companyUpdate'; type: { kind: 'OBJECT'; name: 'CompanyUpdatePayload'; ofType: null; } }; 'customerAddTaxExemptions': { name: 'customerAddTaxExemptions'; type: { kind: 'OBJECT'; name: 'CustomerAddTaxExemptionsPayload'; ofType: null; } }; 'customerCancelDataErasure': { name: 'customerCancelDataErasure'; type: { kind: 'OBJECT'; name: 'CustomerCancelDataErasurePayload'; ofType: null; } }; 'customerCreate': { name: 'customerCreate'; type: { kind: 'OBJECT'; name: 'CustomerCreatePayload'; ofType: null; } }; 'customerDelete': { name: 'customerDelete'; type: { kind: 'OBJECT'; name: 'CustomerDeletePayload'; ofType: null; } }; 'customerEmailMarketingConsentUpdate': { name: 'customerEmailMarketingConsentUpdate'; type: { kind: 'OBJECT'; name: 'CustomerEmailMarketingConsentUpdatePayload'; ofType: null; } }; 'customerGenerateAccountActivationUrl': { name: 'customerGenerateAccountActivationUrl'; type: { kind: 'OBJECT'; name: 'CustomerGenerateAccountActivationUrlPayload'; ofType: null; } }; 'customerMerge': { name: 'customerMerge'; type: { kind: 'OBJECT'; name: 'CustomerMergePayload'; ofType: null; } }; 'customerPaymentMethodCreateFromDuplicationData': { name: 'customerPaymentMethodCreateFromDuplicationData'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodCreateFromDuplicationDataPayload'; ofType: null; } }; 'customerPaymentMethodCreditCardCreate': { name: 'customerPaymentMethodCreditCardCreate'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodCreditCardCreatePayload'; ofType: null; } }; 'customerPaymentMethodCreditCardUpdate': { name: 'customerPaymentMethodCreditCardUpdate'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodCreditCardUpdatePayload'; ofType: null; } }; 'customerPaymentMethodGetDuplicationData': { name: 'customerPaymentMethodGetDuplicationData'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodGetDuplicationDataPayload'; ofType: null; } }; 'customerPaymentMethodGetUpdateUrl': { name: 'customerPaymentMethodGetUpdateUrl'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodGetUpdateUrlPayload'; ofType: null; } }; 'customerPaymentMethodPaypalBillingAgreementCreate': { name: 'customerPaymentMethodPaypalBillingAgreementCreate'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodPaypalBillingAgreementCreatePayload'; ofType: null; } }; 'customerPaymentMethodPaypalBillingAgreementUpdate': { name: 'customerPaymentMethodPaypalBillingAgreementUpdate'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodPaypalBillingAgreementUpdatePayload'; ofType: null; } }; 'customerPaymentMethodRemoteCreate': { name: 'customerPaymentMethodRemoteCreate'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodRemoteCreatePayload'; ofType: null; } }; 'customerPaymentMethodRemoteCreditCardCreate': { name: 'customerPaymentMethodRemoteCreditCardCreate'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodRemoteCreditCardCreatePayload'; ofType: null; } }; 'customerPaymentMethodRevoke': { name: 'customerPaymentMethodRevoke'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodRevokePayload'; ofType: null; } }; 'customerPaymentMethodSendUpdateEmail': { name: 'customerPaymentMethodSendUpdateEmail'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethodSendUpdateEmailPayload'; ofType: null; } }; 'customerRemoveTaxExemptions': { name: 'customerRemoveTaxExemptions'; type: { kind: 'OBJECT'; name: 'CustomerRemoveTaxExemptionsPayload'; ofType: null; } }; 'customerReplaceTaxExemptions': { name: 'customerReplaceTaxExemptions'; type: { kind: 'OBJECT'; name: 'CustomerReplaceTaxExemptionsPayload'; ofType: null; } }; 'customerRequestDataErasure': { name: 'customerRequestDataErasure'; type: { kind: 'OBJECT'; name: 'CustomerRequestDataErasurePayload'; ofType: null; } }; 'customerSegmentMembersQueryCreate': { name: 'customerSegmentMembersQueryCreate'; type: { kind: 'OBJECT'; name: 'CustomerSegmentMembersQueryCreatePayload'; ofType: null; } }; 'customerSmsMarketingConsentUpdate': { name: 'customerSmsMarketingConsentUpdate'; type: { kind: 'OBJECT'; name: 'CustomerSmsMarketingConsentUpdatePayload'; ofType: null; } }; 'customerUpdate': { name: 'customerUpdate'; type: { kind: 'OBJECT'; name: 'CustomerUpdatePayload'; ofType: null; } }; 'customerUpdateDefaultAddress': { name: 'customerUpdateDefaultAddress'; type: { kind: 'OBJECT'; name: 'CustomerUpdateDefaultAddressPayload'; ofType: null; } }; 'dataSaleOptOut': { name: 'dataSaleOptOut'; type: { kind: 'OBJECT'; name: 'DataSaleOptOutPayload'; ofType: null; } }; 'delegateAccessTokenCreate': { name: 'delegateAccessTokenCreate'; type: { kind: 'OBJECT'; name: 'DelegateAccessTokenCreatePayload'; ofType: null; } }; 'delegateAccessTokenDestroy': { name: 'delegateAccessTokenDestroy'; type: { kind: 'OBJECT'; name: 'DelegateAccessTokenDestroyPayload'; ofType: null; } }; 'deliveryCustomizationActivation': { name: 'deliveryCustomizationActivation'; type: { kind: 'OBJECT'; name: 'DeliveryCustomizationActivationPayload'; ofType: null; } }; 'deliveryCustomizationCreate': { name: 'deliveryCustomizationCreate'; type: { kind: 'OBJECT'; name: 'DeliveryCustomizationCreatePayload'; ofType: null; } }; 'deliveryCustomizationDelete': { name: 'deliveryCustomizationDelete'; type: { kind: 'OBJECT'; name: 'DeliveryCustomizationDeletePayload'; ofType: null; } }; 'deliveryCustomizationUpdate': { name: 'deliveryCustomizationUpdate'; type: { kind: 'OBJECT'; name: 'DeliveryCustomizationUpdatePayload'; ofType: null; } }; 'deliveryProfileCreate': { name: 'deliveryProfileCreate'; type: { kind: 'OBJECT'; name: 'DeliveryProfileCreatePayload'; ofType: null; } }; 'deliveryProfileRemove': { name: 'deliveryProfileRemove'; type: { kind: 'OBJECT'; name: 'DeliveryProfileRemovePayload'; ofType: null; } }; 'deliveryProfileUpdate': { name: 'deliveryProfileUpdate'; type: { kind: 'OBJECT'; name: 'DeliveryProfileUpdatePayload'; ofType: null; } }; 'deliveryPromiseProviderUpsert': { name: 'deliveryPromiseProviderUpsert'; type: { kind: 'OBJECT'; name: 'DeliveryPromiseProviderUpsertPayload'; ofType: null; } }; 'deliverySettingUpdate': { name: 'deliverySettingUpdate'; type: { kind: 'OBJECT'; name: 'DeliverySettingUpdatePayload'; ofType: null; } }; 'deliveryShippingOriginAssign': { name: 'deliveryShippingOriginAssign'; type: { kind: 'OBJECT'; name: 'DeliveryShippingOriginAssignPayload'; ofType: null; } }; 'discountAutomaticActivate': { name: 'discountAutomaticActivate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticActivatePayload'; ofType: null; } }; 'discountAutomaticAppCreate': { name: 'discountAutomaticAppCreate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticAppCreatePayload'; ofType: null; } }; 'discountAutomaticAppUpdate': { name: 'discountAutomaticAppUpdate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticAppUpdatePayload'; ofType: null; } }; 'discountAutomaticBasicCreate': { name: 'discountAutomaticBasicCreate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticBasicCreatePayload'; ofType: null; } }; 'discountAutomaticBasicUpdate': { name: 'discountAutomaticBasicUpdate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticBasicUpdatePayload'; ofType: null; } }; 'discountAutomaticBulkDelete': { name: 'discountAutomaticBulkDelete'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticBulkDeletePayload'; ofType: null; } }; 'discountAutomaticBxgyCreate': { name: 'discountAutomaticBxgyCreate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticBxgyCreatePayload'; ofType: null; } }; 'discountAutomaticBxgyUpdate': { name: 'discountAutomaticBxgyUpdate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticBxgyUpdatePayload'; ofType: null; } }; 'discountAutomaticDeactivate': { name: 'discountAutomaticDeactivate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticDeactivatePayload'; ofType: null; } }; 'discountAutomaticDelete': { name: 'discountAutomaticDelete'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticDeletePayload'; ofType: null; } }; 'discountAutomaticFreeShippingCreate': { name: 'discountAutomaticFreeShippingCreate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticFreeShippingCreatePayload'; ofType: null; } }; 'discountAutomaticFreeShippingUpdate': { name: 'discountAutomaticFreeShippingUpdate'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticFreeShippingUpdatePayload'; ofType: null; } }; 'discountCodeActivate': { name: 'discountCodeActivate'; type: { kind: 'OBJECT'; name: 'DiscountCodeActivatePayload'; ofType: null; } }; 'discountCodeAppCreate': { name: 'discountCodeAppCreate'; type: { kind: 'OBJECT'; name: 'DiscountCodeAppCreatePayload'; ofType: null; } }; 'discountCodeAppUpdate': { name: 'discountCodeAppUpdate'; type: { kind: 'OBJECT'; name: 'DiscountCodeAppUpdatePayload'; ofType: null; } }; 'discountCodeBasicCreate': { name: 'discountCodeBasicCreate'; type: { kind: 'OBJECT'; name: 'DiscountCodeBasicCreatePayload'; ofType: null; } }; 'discountCodeBasicUpdate': { name: 'discountCodeBasicUpdate'; type: { kind: 'OBJECT'; name: 'DiscountCodeBasicUpdatePayload'; ofType: null; } }; 'discountCodeBulkActivate': { name: 'discountCodeBulkActivate'; type: { kind: 'OBJECT'; name: 'DiscountCodeBulkActivatePayload'; ofType: null; } }; 'discountCodeBulkDeactivate': { name: 'discountCodeBulkDeactivate'; type: { kind: 'OBJECT'; name: 'DiscountCodeBulkDeactivatePayload'; ofType: null; } }; 'discountCodeBulkDelete': { name: 'discountCodeBulkDelete'; type: { kind: 'OBJECT'; name: 'DiscountCodeBulkDeletePayload'; ofType: null; } }; 'discountCodeBxgyCreate': { name: 'discountCodeBxgyCreate'; type: { kind: 'OBJECT'; name: 'DiscountCodeBxgyCreatePayload'; ofType: null; } }; 'discountCodeBxgyUpdate': { name: 'discountCodeBxgyUpdate'; type: { kind: 'OBJECT'; name: 'DiscountCodeBxgyUpdatePayload'; ofType: null; } }; 'discountCodeDeactivate': { name: 'discountCodeDeactivate'; type: { kind: 'OBJECT'; name: 'DiscountCodeDeactivatePayload'; ofType: null; } }; 'discountCodeDelete': { name: 'discountCodeDelete'; type: { kind: 'OBJECT'; name: 'DiscountCodeDeletePayload'; ofType: null; } }; 'discountCodeFreeShippingCreate': { name: 'discountCodeFreeShippingCreate'; type: { kind: 'OBJECT'; name: 'DiscountCodeFreeShippingCreatePayload'; ofType: null; } }; 'discountCodeFreeShippingUpdate': { name: 'discountCodeFreeShippingUpdate'; type: { kind: 'OBJECT'; name: 'DiscountCodeFreeShippingUpdatePayload'; ofType: null; } }; 'discountCodeRedeemCodeBulkDelete': { name: 'discountCodeRedeemCodeBulkDelete'; type: { kind: 'OBJECT'; name: 'DiscountCodeRedeemCodeBulkDeletePayload'; ofType: null; } }; 'discountRedeemCodeBulkAdd': { name: 'discountRedeemCodeBulkAdd'; type: { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkAddPayload'; ofType: null; } }; 'disputeEvidenceUpdate': { name: 'disputeEvidenceUpdate'; type: { kind: 'OBJECT'; name: 'DisputeEvidenceUpdatePayload'; ofType: null; } }; 'draftOrderBulkAddTags': { name: 'draftOrderBulkAddTags'; type: { kind: 'OBJECT'; name: 'DraftOrderBulkAddTagsPayload'; ofType: null; } }; 'draftOrderBulkDelete': { name: 'draftOrderBulkDelete'; type: { kind: 'OBJECT'; name: 'DraftOrderBulkDeletePayload'; ofType: null; } }; 'draftOrderBulkRemoveTags': { name: 'draftOrderBulkRemoveTags'; type: { kind: 'OBJECT'; name: 'DraftOrderBulkRemoveTagsPayload'; ofType: null; } }; 'draftOrderCalculate': { name: 'draftOrderCalculate'; type: { kind: 'OBJECT'; name: 'DraftOrderCalculatePayload'; ofType: null; } }; 'draftOrderComplete': { name: 'draftOrderComplete'; type: { kind: 'OBJECT'; name: 'DraftOrderCompletePayload'; ofType: null; } }; 'draftOrderCreate': { name: 'draftOrderCreate'; type: { kind: 'OBJECT'; name: 'DraftOrderCreatePayload'; ofType: null; } }; 'draftOrderCreateFromOrder': { name: 'draftOrderCreateFromOrder'; type: { kind: 'OBJECT'; name: 'DraftOrderCreateFromOrderPayload'; ofType: null; } }; 'draftOrderCreateMerchantCheckout': { name: 'draftOrderCreateMerchantCheckout'; type: { kind: 'OBJECT'; name: 'DraftOrderCreateMerchantCheckoutPayload'; ofType: null; } }; 'draftOrderDelete': { name: 'draftOrderDelete'; type: { kind: 'OBJECT'; name: 'DraftOrderDeletePayload'; ofType: null; } }; 'draftOrderDuplicate': { name: 'draftOrderDuplicate'; type: { kind: 'OBJECT'; name: 'DraftOrderDuplicatePayload'; ofType: null; } }; 'draftOrderInvoicePreview': { name: 'draftOrderInvoicePreview'; type: { kind: 'OBJECT'; name: 'DraftOrderInvoicePreviewPayload'; ofType: null; } }; 'draftOrderInvoiceSend': { name: 'draftOrderInvoiceSend'; type: { kind: 'OBJECT'; name: 'DraftOrderInvoiceSendPayload'; ofType: null; } }; 'draftOrderUpdate': { name: 'draftOrderUpdate'; type: { kind: 'OBJECT'; name: 'DraftOrderUpdatePayload'; ofType: null; } }; 'eventBridgeServerPixelUpdate': { name: 'eventBridgeServerPixelUpdate'; type: { kind: 'OBJECT'; name: 'EventBridgeServerPixelUpdatePayload'; ofType: null; } }; 'eventBridgeWebhookSubscriptionCreate': { name: 'eventBridgeWebhookSubscriptionCreate'; type: { kind: 'OBJECT'; name: 'EventBridgeWebhookSubscriptionCreatePayload'; ofType: null; } }; 'eventBridgeWebhookSubscriptionUpdate': { name: 'eventBridgeWebhookSubscriptionUpdate'; type: { kind: 'OBJECT'; name: 'EventBridgeWebhookSubscriptionUpdatePayload'; ofType: null; } }; 'fileAcknowledgeUpdateFailed': { name: 'fileAcknowledgeUpdateFailed'; type: { kind: 'OBJECT'; name: 'FileAcknowledgeUpdateFailedPayload'; ofType: null; } }; 'fileCreate': { name: 'fileCreate'; type: { kind: 'OBJECT'; name: 'FileCreatePayload'; ofType: null; } }; 'fileDelete': { name: 'fileDelete'; type: { kind: 'OBJECT'; name: 'FileDeletePayload'; ofType: null; } }; 'fileUpdate': { name: 'fileUpdate'; type: { kind: 'OBJECT'; name: 'FileUpdatePayload'; ofType: null; } }; 'flowGenerateSignature': { name: 'flowGenerateSignature'; type: { kind: 'OBJECT'; name: 'FlowGenerateSignaturePayload'; ofType: null; } }; 'flowTriggerReceive': { name: 'flowTriggerReceive'; type: { kind: 'OBJECT'; name: 'FlowTriggerReceivePayload'; ofType: null; } }; 'fulfillmentCancel': { name: 'fulfillmentCancel'; type: { kind: 'OBJECT'; name: 'FulfillmentCancelPayload'; ofType: null; } }; 'fulfillmentConstraintRuleCreate': { name: 'fulfillmentConstraintRuleCreate'; type: { kind: 'OBJECT'; name: 'FulfillmentConstraintRuleCreatePayload'; ofType: null; } }; 'fulfillmentConstraintRuleDelete': { name: 'fulfillmentConstraintRuleDelete'; type: { kind: 'OBJECT'; name: 'FulfillmentConstraintRuleDeletePayload'; ofType: null; } }; 'fulfillmentCreateV2': { name: 'fulfillmentCreateV2'; type: { kind: 'OBJECT'; name: 'FulfillmentCreateV2Payload'; ofType: null; } }; 'fulfillmentEventCreate': { name: 'fulfillmentEventCreate'; type: { kind: 'OBJECT'; name: 'FulfillmentEventCreatePayload'; ofType: null; } }; 'fulfillmentOrderAcceptCancellationRequest': { name: 'fulfillmentOrderAcceptCancellationRequest'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderAcceptCancellationRequestPayload'; ofType: null; } }; 'fulfillmentOrderAcceptFulfillmentRequest': { name: 'fulfillmentOrderAcceptFulfillmentRequest'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderAcceptFulfillmentRequestPayload'; ofType: null; } }; 'fulfillmentOrderCancel': { name: 'fulfillmentOrderCancel'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderCancelPayload'; ofType: null; } }; 'fulfillmentOrderClose': { name: 'fulfillmentOrderClose'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderClosePayload'; ofType: null; } }; 'fulfillmentOrderHold': { name: 'fulfillmentOrderHold'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderHoldPayload'; ofType: null; } }; 'fulfillmentOrderLineItemsPreparedForPickup': { name: 'fulfillmentOrderLineItemsPreparedForPickup'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderLineItemsPreparedForPickupPayload'; ofType: null; } }; 'fulfillmentOrderMerge': { name: 'fulfillmentOrderMerge'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderMergePayload'; ofType: null; } }; 'fulfillmentOrderMove': { name: 'fulfillmentOrderMove'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderMovePayload'; ofType: null; } }; 'fulfillmentOrderOpen': { name: 'fulfillmentOrderOpen'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderOpenPayload'; ofType: null; } }; 'fulfillmentOrderRejectCancellationRequest': { name: 'fulfillmentOrderRejectCancellationRequest'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderRejectCancellationRequestPayload'; ofType: null; } }; 'fulfillmentOrderRejectFulfillmentRequest': { name: 'fulfillmentOrderRejectFulfillmentRequest'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderRejectFulfillmentRequestPayload'; ofType: null; } }; 'fulfillmentOrderReleaseHold': { name: 'fulfillmentOrderReleaseHold'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderReleaseHoldPayload'; ofType: null; } }; 'fulfillmentOrderReschedule': { name: 'fulfillmentOrderReschedule'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderReschedulePayload'; ofType: null; } }; 'fulfillmentOrderSplit': { name: 'fulfillmentOrderSplit'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderSplitPayload'; ofType: null; } }; 'fulfillmentOrderSubmitCancellationRequest': { name: 'fulfillmentOrderSubmitCancellationRequest'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderSubmitCancellationRequestPayload'; ofType: null; } }; 'fulfillmentOrderSubmitFulfillmentRequest': { name: 'fulfillmentOrderSubmitFulfillmentRequest'; type: { kind: 'OBJECT'; name: 'FulfillmentOrderSubmitFulfillmentRequestPayload'; ofType: null; } }; 'fulfillmentOrdersReleaseHolds': { name: 'fulfillmentOrdersReleaseHolds'; type: { kind: 'OBJECT'; name: 'FulfillmentOrdersReleaseHoldsPayload'; ofType: null; } }; 'fulfillmentOrdersSetFulfillmentDeadline': { name: 'fulfillmentOrdersSetFulfillmentDeadline'; type: { kind: 'OBJECT'; name: 'FulfillmentOrdersSetFulfillmentDeadlinePayload'; ofType: null; } }; 'fulfillmentServiceCreate': { name: 'fulfillmentServiceCreate'; type: { kind: 'OBJECT'; name: 'FulfillmentServiceCreatePayload'; ofType: null; } }; 'fulfillmentServiceDelete': { name: 'fulfillmentServiceDelete'; type: { kind: 'OBJECT'; name: 'FulfillmentServiceDeletePayload'; ofType: null; } }; 'fulfillmentServiceUpdate': { name: 'fulfillmentServiceUpdate'; type: { kind: 'OBJECT'; name: 'FulfillmentServiceUpdatePayload'; ofType: null; } }; 'fulfillmentTrackingInfoUpdateV2': { name: 'fulfillmentTrackingInfoUpdateV2'; type: { kind: 'OBJECT'; name: 'FulfillmentTrackingInfoUpdateV2Payload'; ofType: null; } }; 'giftCardCreate': { name: 'giftCardCreate'; type: { kind: 'OBJECT'; name: 'GiftCardCreatePayload'; ofType: null; } }; 'giftCardDisable': { name: 'giftCardDisable'; type: { kind: 'OBJECT'; name: 'GiftCardDisablePayload'; ofType: null; } }; 'giftCardUpdate': { name: 'giftCardUpdate'; type: { kind: 'OBJECT'; name: 'GiftCardUpdatePayload'; ofType: null; } }; 'inventoryActivate': { name: 'inventoryActivate'; type: { kind: 'OBJECT'; name: 'InventoryActivatePayload'; ofType: null; } }; 'inventoryAdjustQuantities': { name: 'inventoryAdjustQuantities'; type: { kind: 'OBJECT'; name: 'InventoryAdjustQuantitiesPayload'; ofType: null; } }; 'inventoryBulkToggleActivation': { name: 'inventoryBulkToggleActivation'; type: { kind: 'OBJECT'; name: 'InventoryBulkToggleActivationPayload'; ofType: null; } }; 'inventoryDeactivate': { name: 'inventoryDeactivate'; type: { kind: 'OBJECT'; name: 'InventoryDeactivatePayload'; ofType: null; } }; 'inventoryItemUpdate': { name: 'inventoryItemUpdate'; type: { kind: 'OBJECT'; name: 'InventoryItemUpdatePayload'; ofType: null; } }; 'inventoryMoveQuantities': { name: 'inventoryMoveQuantities'; type: { kind: 'OBJECT'; name: 'InventoryMoveQuantitiesPayload'; ofType: null; } }; 'inventorySetOnHandQuantities': { name: 'inventorySetOnHandQuantities'; type: { kind: 'OBJECT'; name: 'InventorySetOnHandQuantitiesPayload'; ofType: null; } }; 'inventorySetQuantities': { name: 'inventorySetQuantities'; type: { kind: 'OBJECT'; name: 'InventorySetQuantitiesPayload'; ofType: null; } }; 'inventorySetScheduledChanges': { name: 'inventorySetScheduledChanges'; type: { kind: 'OBJECT'; name: 'InventorySetScheduledChangesPayload'; ofType: null; } }; 'locationActivate': { name: 'locationActivate'; type: { kind: 'OBJECT'; name: 'LocationActivatePayload'; ofType: null; } }; 'locationAdd': { name: 'locationAdd'; type: { kind: 'OBJECT'; name: 'LocationAddPayload'; ofType: null; } }; 'locationDeactivate': { name: 'locationDeactivate'; type: { kind: 'OBJECT'; name: 'LocationDeactivatePayload'; ofType: null; } }; 'locationDelete': { name: 'locationDelete'; type: { kind: 'OBJECT'; name: 'LocationDeletePayload'; ofType: null; } }; 'locationEdit': { name: 'locationEdit'; type: { kind: 'OBJECT'; name: 'LocationEditPayload'; ofType: null; } }; 'locationLocalPickupDisable': { name: 'locationLocalPickupDisable'; type: { kind: 'OBJECT'; name: 'LocationLocalPickupDisablePayload'; ofType: null; } }; 'locationLocalPickupEnable': { name: 'locationLocalPickupEnable'; type: { kind: 'OBJECT'; name: 'LocationLocalPickupEnablePayload'; ofType: null; } }; 'marketCreate': { name: 'marketCreate'; type: { kind: 'OBJECT'; name: 'MarketCreatePayload'; ofType: null; } }; 'marketCurrencySettingsUpdate': { name: 'marketCurrencySettingsUpdate'; type: { kind: 'OBJECT'; name: 'MarketCurrencySettingsUpdatePayload'; ofType: null; } }; 'marketDelete': { name: 'marketDelete'; type: { kind: 'OBJECT'; name: 'MarketDeletePayload'; ofType: null; } }; 'marketLocalizationsRegister': { name: 'marketLocalizationsRegister'; type: { kind: 'OBJECT'; name: 'MarketLocalizationsRegisterPayload'; ofType: null; } }; 'marketLocalizationsRemove': { name: 'marketLocalizationsRemove'; type: { kind: 'OBJECT'; name: 'MarketLocalizationsRemovePayload'; ofType: null; } }; 'marketRegionDelete': { name: 'marketRegionDelete'; type: { kind: 'OBJECT'; name: 'MarketRegionDeletePayload'; ofType: null; } }; 'marketRegionsCreate': { name: 'marketRegionsCreate'; type: { kind: 'OBJECT'; name: 'MarketRegionsCreatePayload'; ofType: null; } }; 'marketRegionsDelete': { name: 'marketRegionsDelete'; type: { kind: 'OBJECT'; name: 'MarketRegionsDeletePayload'; ofType: null; } }; 'marketUpdate': { name: 'marketUpdate'; type: { kind: 'OBJECT'; name: 'MarketUpdatePayload'; ofType: null; } }; 'marketWebPresenceCreate': { name: 'marketWebPresenceCreate'; type: { kind: 'OBJECT'; name: 'MarketWebPresenceCreatePayload'; ofType: null; } }; 'marketWebPresenceDelete': { name: 'marketWebPresenceDelete'; type: { kind: 'OBJECT'; name: 'MarketWebPresenceDeletePayload'; ofType: null; } }; 'marketWebPresenceUpdate': { name: 'marketWebPresenceUpdate'; type: { kind: 'OBJECT'; name: 'MarketWebPresenceUpdatePayload'; ofType: null; } }; 'marketingActivitiesDeleteAllExternal': { name: 'marketingActivitiesDeleteAllExternal'; type: { kind: 'OBJECT'; name: 'MarketingActivitiesDeleteAllExternalPayload'; ofType: null; } }; 'marketingActivityCreate': { name: 'marketingActivityCreate'; type: { kind: 'OBJECT'; name: 'MarketingActivityCreatePayload'; ofType: null; } }; 'marketingActivityCreateExternal': { name: 'marketingActivityCreateExternal'; type: { kind: 'OBJECT'; name: 'MarketingActivityCreateExternalPayload'; ofType: null; } }; 'marketingActivityDeleteExternal': { name: 'marketingActivityDeleteExternal'; type: { kind: 'OBJECT'; name: 'MarketingActivityDeleteExternalPayload'; ofType: null; } }; 'marketingActivityUpdate': { name: 'marketingActivityUpdate'; type: { kind: 'OBJECT'; name: 'MarketingActivityUpdatePayload'; ofType: null; } }; 'marketingActivityUpdateExternal': { name: 'marketingActivityUpdateExternal'; type: { kind: 'OBJECT'; name: 'MarketingActivityUpdateExternalPayload'; ofType: null; } }; 'marketingActivityUpsertExternal': { name: 'marketingActivityUpsertExternal'; type: { kind: 'OBJECT'; name: 'MarketingActivityUpsertExternalPayload'; ofType: null; } }; 'marketingEngagementCreate': { name: 'marketingEngagementCreate'; type: { kind: 'OBJECT'; name: 'MarketingEngagementCreatePayload'; ofType: null; } }; 'marketingEngagementsDelete': { name: 'marketingEngagementsDelete'; type: { kind: 'OBJECT'; name: 'MarketingEngagementsDeletePayload'; ofType: null; } }; 'menuCreate': { name: 'menuCreate'; type: { kind: 'OBJECT'; name: 'MenuCreatePayload'; ofType: null; } }; 'menuDelete': { name: 'menuDelete'; type: { kind: 'OBJECT'; name: 'MenuDeletePayload'; ofType: null; } }; 'menuUpdate': { name: 'menuUpdate'; type: { kind: 'OBJECT'; name: 'MenuUpdatePayload'; ofType: null; } }; 'metafieldDefinitionCreate': { name: 'metafieldDefinitionCreate'; type: { kind: 'OBJECT'; name: 'MetafieldDefinitionCreatePayload'; ofType: null; } }; 'metafieldDefinitionDelete': { name: 'metafieldDefinitionDelete'; type: { kind: 'OBJECT'; name: 'MetafieldDefinitionDeletePayload'; ofType: null; } }; 'metafieldDefinitionPin': { name: 'metafieldDefinitionPin'; type: { kind: 'OBJECT'; name: 'MetafieldDefinitionPinPayload'; ofType: null; } }; 'metafieldDefinitionUnpin': { name: 'metafieldDefinitionUnpin'; type: { kind: 'OBJECT'; name: 'MetafieldDefinitionUnpinPayload'; ofType: null; } }; 'metafieldDefinitionUpdate': { name: 'metafieldDefinitionUpdate'; type: { kind: 'OBJECT'; name: 'MetafieldDefinitionUpdatePayload'; ofType: null; } }; 'metafieldDelete': { name: 'metafieldDelete'; type: { kind: 'OBJECT'; name: 'MetafieldDeletePayload'; ofType: null; } }; 'metafieldStorefrontVisibilityCreate': { name: 'metafieldStorefrontVisibilityCreate'; type: { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibilityCreatePayload'; ofType: null; } }; 'metafieldStorefrontVisibilityDelete': { name: 'metafieldStorefrontVisibilityDelete'; type: { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibilityDeletePayload'; ofType: null; } }; 'metafieldsDelete': { name: 'metafieldsDelete'; type: { kind: 'OBJECT'; name: 'MetafieldsDeletePayload'; ofType: null; } }; 'metafieldsSet': { name: 'metafieldsSet'; type: { kind: 'OBJECT'; name: 'MetafieldsSetPayload'; ofType: null; } }; 'metaobjectBulkDelete': { name: 'metaobjectBulkDelete'; type: { kind: 'OBJECT'; name: 'MetaobjectBulkDeletePayload'; ofType: null; } }; 'metaobjectCreate': { name: 'metaobjectCreate'; type: { kind: 'OBJECT'; name: 'MetaobjectCreatePayload'; ofType: null; } }; 'metaobjectDefinitionCreate': { name: 'metaobjectDefinitionCreate'; type: { kind: 'OBJECT'; name: 'MetaobjectDefinitionCreatePayload'; ofType: null; } }; 'metaobjectDefinitionDelete': { name: 'metaobjectDefinitionDelete'; type: { kind: 'OBJECT'; name: 'MetaobjectDefinitionDeletePayload'; ofType: null; } }; 'metaobjectDefinitionUpdate': { name: 'metaobjectDefinitionUpdate'; type: { kind: 'OBJECT'; name: 'MetaobjectDefinitionUpdatePayload'; ofType: null; } }; 'metaobjectDelete': { name: 'metaobjectDelete'; type: { kind: 'OBJECT'; name: 'MetaobjectDeletePayload'; ofType: null; } }; 'metaobjectUpdate': { name: 'metaobjectUpdate'; type: { kind: 'OBJECT'; name: 'MetaobjectUpdatePayload'; ofType: null; } }; 'metaobjectUpsert': { name: 'metaobjectUpsert'; type: { kind: 'OBJECT'; name: 'MetaobjectUpsertPayload'; ofType: null; } }; 'mobilePlatformApplicationCreate': { name: 'mobilePlatformApplicationCreate'; type: { kind: 'OBJECT'; name: 'MobilePlatformApplicationCreatePayload'; ofType: null; } }; 'mobilePlatformApplicationDelete': { name: 'mobilePlatformApplicationDelete'; type: { kind: 'OBJECT'; name: 'MobilePlatformApplicationDeletePayload'; ofType: null; } }; 'mobilePlatformApplicationUpdate': { name: 'mobilePlatformApplicationUpdate'; type: { kind: 'OBJECT'; name: 'MobilePlatformApplicationUpdatePayload'; ofType: null; } }; 'orderCancel': { name: 'orderCancel'; type: { kind: 'OBJECT'; name: 'OrderCancelPayload'; ofType: null; } }; 'orderCapture': { name: 'orderCapture'; type: { kind: 'OBJECT'; name: 'OrderCapturePayload'; ofType: null; } }; 'orderClose': { name: 'orderClose'; type: { kind: 'OBJECT'; name: 'OrderClosePayload'; ofType: null; } }; 'orderCreateMandatePayment': { name: 'orderCreateMandatePayment'; type: { kind: 'OBJECT'; name: 'OrderCreateMandatePaymentPayload'; ofType: null; } }; 'orderDelete': { name: 'orderDelete'; type: { kind: 'OBJECT'; name: 'OrderDeletePayload'; ofType: null; } }; 'orderEditAddCustomItem': { name: 'orderEditAddCustomItem'; type: { kind: 'OBJECT'; name: 'OrderEditAddCustomItemPayload'; ofType: null; } }; 'orderEditAddLineItemDiscount': { name: 'orderEditAddLineItemDiscount'; type: { kind: 'OBJECT'; name: 'OrderEditAddLineItemDiscountPayload'; ofType: null; } }; 'orderEditAddShippingLine': { name: 'orderEditAddShippingLine'; type: { kind: 'OBJECT'; name: 'OrderEditAddShippingLinePayload'; ofType: null; } }; 'orderEditAddVariant': { name: 'orderEditAddVariant'; type: { kind: 'OBJECT'; name: 'OrderEditAddVariantPayload'; ofType: null; } }; 'orderEditBegin': { name: 'orderEditBegin'; type: { kind: 'OBJECT'; name: 'OrderEditBeginPayload'; ofType: null; } }; 'orderEditCommit': { name: 'orderEditCommit'; type: { kind: 'OBJECT'; name: 'OrderEditCommitPayload'; ofType: null; } }; 'orderEditRemoveDiscount': { name: 'orderEditRemoveDiscount'; type: { kind: 'OBJECT'; name: 'OrderEditRemoveDiscountPayload'; ofType: null; } }; 'orderEditRemoveLineItemDiscount': { name: 'orderEditRemoveLineItemDiscount'; type: { kind: 'OBJECT'; name: 'OrderEditRemoveLineItemDiscountPayload'; ofType: null; } }; 'orderEditRemoveShippingLine': { name: 'orderEditRemoveShippingLine'; type: { kind: 'OBJECT'; name: 'OrderEditRemoveShippingLinePayload'; ofType: null; } }; 'orderEditSetQuantity': { name: 'orderEditSetQuantity'; type: { kind: 'OBJECT'; name: 'OrderEditSetQuantityPayload'; ofType: null; } }; 'orderEditUpdateDiscount': { name: 'orderEditUpdateDiscount'; type: { kind: 'OBJECT'; name: 'OrderEditUpdateDiscountPayload'; ofType: null; } }; 'orderEditUpdateShippingLine': { name: 'orderEditUpdateShippingLine'; type: { kind: 'OBJECT'; name: 'OrderEditUpdateShippingLinePayload'; ofType: null; } }; 'orderInvoiceSend': { name: 'orderInvoiceSend'; type: { kind: 'OBJECT'; name: 'OrderInvoiceSendPayload'; ofType: null; } }; 'orderMarkAsPaid': { name: 'orderMarkAsPaid'; type: { kind: 'OBJECT'; name: 'OrderMarkAsPaidPayload'; ofType: null; } }; 'orderOpen': { name: 'orderOpen'; type: { kind: 'OBJECT'; name: 'OrderOpenPayload'; ofType: null; } }; 'orderRiskAssessmentCreate': { name: 'orderRiskAssessmentCreate'; type: { kind: 'OBJECT'; name: 'OrderRiskAssessmentCreatePayload'; ofType: null; } }; 'orderUpdate': { name: 'orderUpdate'; type: { kind: 'OBJECT'; name: 'OrderUpdatePayload'; ofType: null; } }; 'paymentCustomizationActivation': { name: 'paymentCustomizationActivation'; type: { kind: 'OBJECT'; name: 'PaymentCustomizationActivationPayload'; ofType: null; } }; 'paymentCustomizationCreate': { name: 'paymentCustomizationCreate'; type: { kind: 'OBJECT'; name: 'PaymentCustomizationCreatePayload'; ofType: null; } }; 'paymentCustomizationDelete': { name: 'paymentCustomizationDelete'; type: { kind: 'OBJECT'; name: 'PaymentCustomizationDeletePayload'; ofType: null; } }; 'paymentCustomizationUpdate': { name: 'paymentCustomizationUpdate'; type: { kind: 'OBJECT'; name: 'PaymentCustomizationUpdatePayload'; ofType: null; } }; 'paymentReminderSend': { name: 'paymentReminderSend'; type: { kind: 'OBJECT'; name: 'PaymentReminderSendPayload'; ofType: null; } }; 'paymentTermsCreate': { name: 'paymentTermsCreate'; type: { kind: 'OBJECT'; name: 'PaymentTermsCreatePayload'; ofType: null; } }; 'paymentTermsDelete': { name: 'paymentTermsDelete'; type: { kind: 'OBJECT'; name: 'PaymentTermsDeletePayload'; ofType: null; } }; 'paymentTermsUpdate': { name: 'paymentTermsUpdate'; type: { kind: 'OBJECT'; name: 'PaymentTermsUpdatePayload'; ofType: null; } }; 'priceListCreate': { name: 'priceListCreate'; type: { kind: 'OBJECT'; name: 'PriceListCreatePayload'; ofType: null; } }; 'priceListDelete': { name: 'priceListDelete'; type: { kind: 'OBJECT'; name: 'PriceListDeletePayload'; ofType: null; } }; 'priceListFixedPricesAdd': { name: 'priceListFixedPricesAdd'; type: { kind: 'OBJECT'; name: 'PriceListFixedPricesAddPayload'; ofType: null; } }; 'priceListFixedPricesByProductUpdate': { name: 'priceListFixedPricesByProductUpdate'; type: { kind: 'OBJECT'; name: 'PriceListFixedPricesByProductUpdatePayload'; ofType: null; } }; 'priceListFixedPricesDelete': { name: 'priceListFixedPricesDelete'; type: { kind: 'OBJECT'; name: 'PriceListFixedPricesDeletePayload'; ofType: null; } }; 'priceListFixedPricesUpdate': { name: 'priceListFixedPricesUpdate'; type: { kind: 'OBJECT'; name: 'PriceListFixedPricesUpdatePayload'; ofType: null; } }; 'priceListUpdate': { name: 'priceListUpdate'; type: { kind: 'OBJECT'; name: 'PriceListUpdatePayload'; ofType: null; } }; 'priceRuleActivate': { name: 'priceRuleActivate'; type: { kind: 'OBJECT'; name: 'PriceRuleActivatePayload'; ofType: null; } }; 'priceRuleCreate': { name: 'priceRuleCreate'; type: { kind: 'OBJECT'; name: 'PriceRuleCreatePayload'; ofType: null; } }; 'priceRuleDeactivate': { name: 'priceRuleDeactivate'; type: { kind: 'OBJECT'; name: 'PriceRuleDeactivatePayload'; ofType: null; } }; 'priceRuleDelete': { name: 'priceRuleDelete'; type: { kind: 'OBJECT'; name: 'PriceRuleDeletePayload'; ofType: null; } }; 'priceRuleDiscountCodeCreate': { name: 'priceRuleDiscountCodeCreate'; type: { kind: 'OBJECT'; name: 'PriceRuleDiscountCodeCreatePayload'; ofType: null; } }; 'priceRuleDiscountCodeUpdate': { name: 'priceRuleDiscountCodeUpdate'; type: { kind: 'OBJECT'; name: 'PriceRuleDiscountCodeUpdatePayload'; ofType: null; } }; 'priceRuleUpdate': { name: 'priceRuleUpdate'; type: { kind: 'OBJECT'; name: 'PriceRuleUpdatePayload'; ofType: null; } }; 'privateMetafieldDelete': { name: 'privateMetafieldDelete'; type: { kind: 'OBJECT'; name: 'PrivateMetafieldDeletePayload'; ofType: null; } }; 'privateMetafieldUpsert': { name: 'privateMetafieldUpsert'; type: { kind: 'OBJECT'; name: 'PrivateMetafieldUpsertPayload'; ofType: null; } }; 'productAppendImages': { name: 'productAppendImages'; type: { kind: 'OBJECT'; name: 'ProductAppendImagesPayload'; ofType: null; } }; 'productBundleCreate': { name: 'productBundleCreate'; type: { kind: 'OBJECT'; name: 'ProductBundleCreatePayload'; ofType: null; } }; 'productBundleUpdate': { name: 'productBundleUpdate'; type: { kind: 'OBJECT'; name: 'ProductBundleUpdatePayload'; ofType: null; } }; 'productChangeStatus': { name: 'productChangeStatus'; type: { kind: 'OBJECT'; name: 'ProductChangeStatusPayload'; ofType: null; } }; 'productCreate': { name: 'productCreate'; type: { kind: 'OBJECT'; name: 'ProductCreatePayload'; ofType: null; } }; 'productCreateMedia': { name: 'productCreateMedia'; type: { kind: 'OBJECT'; name: 'ProductCreateMediaPayload'; ofType: null; } }; 'productDelete': { name: 'productDelete'; type: { kind: 'OBJECT'; name: 'ProductDeletePayload'; ofType: null; } }; 'productDeleteAsync': { name: 'productDeleteAsync'; type: { kind: 'OBJECT'; name: 'ProductDeleteAsyncPayload'; ofType: null; } }; 'productDeleteImages': { name: 'productDeleteImages'; type: { kind: 'OBJECT'; name: 'ProductDeleteImagesPayload'; ofType: null; } }; 'productDeleteMedia': { name: 'productDeleteMedia'; type: { kind: 'OBJECT'; name: 'ProductDeleteMediaPayload'; ofType: null; } }; 'productDuplicate': { name: 'productDuplicate'; type: { kind: 'OBJECT'; name: 'ProductDuplicatePayload'; ofType: null; } }; 'productDuplicateAsyncV2': { name: 'productDuplicateAsyncV2'; type: { kind: 'OBJECT'; name: 'ProductDuplicateAsyncV2Payload'; ofType: null; } }; 'productFeedCreate': { name: 'productFeedCreate'; type: { kind: 'OBJECT'; name: 'ProductFeedCreatePayload'; ofType: null; } }; 'productFeedDelete': { name: 'productFeedDelete'; type: { kind: 'OBJECT'; name: 'ProductFeedDeletePayload'; ofType: null; } }; 'productFullSync': { name: 'productFullSync'; type: { kind: 'OBJECT'; name: 'ProductFullSyncPayload'; ofType: null; } }; 'productImageUpdate': { name: 'productImageUpdate'; type: { kind: 'OBJECT'; name: 'ProductImageUpdatePayload'; ofType: null; } }; 'productJoinSellingPlanGroups': { name: 'productJoinSellingPlanGroups'; type: { kind: 'OBJECT'; name: 'ProductJoinSellingPlanGroupsPayload'; ofType: null; } }; 'productLeaveSellingPlanGroups': { name: 'productLeaveSellingPlanGroups'; type: { kind: 'OBJECT'; name: 'ProductLeaveSellingPlanGroupsPayload'; ofType: null; } }; 'productOptionUpdate': { name: 'productOptionUpdate'; type: { kind: 'OBJECT'; name: 'ProductOptionUpdatePayload'; ofType: null; } }; 'productOptionsCreate': { name: 'productOptionsCreate'; type: { kind: 'OBJECT'; name: 'ProductOptionsCreatePayload'; ofType: null; } }; 'productOptionsDelete': { name: 'productOptionsDelete'; type: { kind: 'OBJECT'; name: 'ProductOptionsDeletePayload'; ofType: null; } }; 'productOptionsReorder': { name: 'productOptionsReorder'; type: { kind: 'OBJECT'; name: 'ProductOptionsReorderPayload'; ofType: null; } }; 'productPublish': { name: 'productPublish'; type: { kind: 'OBJECT'; name: 'ProductPublishPayload'; ofType: null; } }; 'productReorderImages': { name: 'productReorderImages'; type: { kind: 'OBJECT'; name: 'ProductReorderImagesPayload'; ofType: null; } }; 'productReorderMedia': { name: 'productReorderMedia'; type: { kind: 'OBJECT'; name: 'ProductReorderMediaPayload'; ofType: null; } }; 'productSet': { name: 'productSet'; type: { kind: 'OBJECT'; name: 'ProductSetPayload'; ofType: null; } }; 'productUnpublish': { name: 'productUnpublish'; type: { kind: 'OBJECT'; name: 'ProductUnpublishPayload'; ofType: null; } }; 'productUpdate': { name: 'productUpdate'; type: { kind: 'OBJECT'; name: 'ProductUpdatePayload'; ofType: null; } }; 'productUpdateMedia': { name: 'productUpdateMedia'; type: { kind: 'OBJECT'; name: 'ProductUpdateMediaPayload'; ofType: null; } }; 'productVariantAppendMedia': { name: 'productVariantAppendMedia'; type: { kind: 'OBJECT'; name: 'ProductVariantAppendMediaPayload'; ofType: null; } }; 'productVariantCreate': { name: 'productVariantCreate'; type: { kind: 'OBJECT'; name: 'ProductVariantCreatePayload'; ofType: null; } }; 'productVariantDelete': { name: 'productVariantDelete'; type: { kind: 'OBJECT'; name: 'ProductVariantDeletePayload'; ofType: null; } }; 'productVariantDetachMedia': { name: 'productVariantDetachMedia'; type: { kind: 'OBJECT'; name: 'ProductVariantDetachMediaPayload'; ofType: null; } }; 'productVariantJoinSellingPlanGroups': { name: 'productVariantJoinSellingPlanGroups'; type: { kind: 'OBJECT'; name: 'ProductVariantJoinSellingPlanGroupsPayload'; ofType: null; } }; 'productVariantLeaveSellingPlanGroups': { name: 'productVariantLeaveSellingPlanGroups'; type: { kind: 'OBJECT'; name: 'ProductVariantLeaveSellingPlanGroupsPayload'; ofType: null; } }; 'productVariantRelationshipBulkUpdate': { name: 'productVariantRelationshipBulkUpdate'; type: { kind: 'OBJECT'; name: 'ProductVariantRelationshipBulkUpdatePayload'; ofType: null; } }; 'productVariantUpdate': { name: 'productVariantUpdate'; type: { kind: 'OBJECT'; name: 'ProductVariantUpdatePayload'; ofType: null; } }; 'productVariantsBulkCreate': { name: 'productVariantsBulkCreate'; type: { kind: 'OBJECT'; name: 'ProductVariantsBulkCreatePayload'; ofType: null; } }; 'productVariantsBulkDelete': { name: 'productVariantsBulkDelete'; type: { kind: 'OBJECT'; name: 'ProductVariantsBulkDeletePayload'; ofType: null; } }; 'productVariantsBulkReorder': { name: 'productVariantsBulkReorder'; type: { kind: 'OBJECT'; name: 'ProductVariantsBulkReorderPayload'; ofType: null; } }; 'productVariantsBulkUpdate': { name: 'productVariantsBulkUpdate'; type: { kind: 'OBJECT'; name: 'ProductVariantsBulkUpdatePayload'; ofType: null; } }; 'pubSubServerPixelUpdate': { name: 'pubSubServerPixelUpdate'; type: { kind: 'OBJECT'; name: 'PubSubServerPixelUpdatePayload'; ofType: null; } }; 'pubSubWebhookSubscriptionCreate': { name: 'pubSubWebhookSubscriptionCreate'; type: { kind: 'OBJECT'; name: 'PubSubWebhookSubscriptionCreatePayload'; ofType: null; } }; 'pubSubWebhookSubscriptionUpdate': { name: 'pubSubWebhookSubscriptionUpdate'; type: { kind: 'OBJECT'; name: 'PubSubWebhookSubscriptionUpdatePayload'; ofType: null; } }; 'publicationCreate': { name: 'publicationCreate'; type: { kind: 'OBJECT'; name: 'PublicationCreatePayload'; ofType: null; } }; 'publicationDelete': { name: 'publicationDelete'; type: { kind: 'OBJECT'; name: 'PublicationDeletePayload'; ofType: null; } }; 'publicationUpdate': { name: 'publicationUpdate'; type: { kind: 'OBJECT'; name: 'PublicationUpdatePayload'; ofType: null; } }; 'publishablePublish': { name: 'publishablePublish'; type: { kind: 'OBJECT'; name: 'PublishablePublishPayload'; ofType: null; } }; 'publishablePublishToCurrentChannel': { name: 'publishablePublishToCurrentChannel'; type: { kind: 'OBJECT'; name: 'PublishablePublishToCurrentChannelPayload'; ofType: null; } }; 'publishableUnpublish': { name: 'publishableUnpublish'; type: { kind: 'OBJECT'; name: 'PublishableUnpublishPayload'; ofType: null; } }; 'publishableUnpublishToCurrentChannel': { name: 'publishableUnpublishToCurrentChannel'; type: { kind: 'OBJECT'; name: 'PublishableUnpublishToCurrentChannelPayload'; ofType: null; } }; 'quantityPricingByVariantUpdate': { name: 'quantityPricingByVariantUpdate'; type: { kind: 'OBJECT'; name: 'QuantityPricingByVariantUpdatePayload'; ofType: null; } }; 'quantityRulesAdd': { name: 'quantityRulesAdd'; type: { kind: 'OBJECT'; name: 'QuantityRulesAddPayload'; ofType: null; } }; 'quantityRulesDelete': { name: 'quantityRulesDelete'; type: { kind: 'OBJECT'; name: 'QuantityRulesDeletePayload'; ofType: null; } }; 'refundCreate': { name: 'refundCreate'; type: { kind: 'OBJECT'; name: 'RefundCreatePayload'; ofType: null; } }; 'returnApproveRequest': { name: 'returnApproveRequest'; type: { kind: 'OBJECT'; name: 'ReturnApproveRequestPayload'; ofType: null; } }; 'returnCancel': { name: 'returnCancel'; type: { kind: 'OBJECT'; name: 'ReturnCancelPayload'; ofType: null; } }; 'returnClose': { name: 'returnClose'; type: { kind: 'OBJECT'; name: 'ReturnClosePayload'; ofType: null; } }; 'returnCreate': { name: 'returnCreate'; type: { kind: 'OBJECT'; name: 'ReturnCreatePayload'; ofType: null; } }; 'returnDeclineRequest': { name: 'returnDeclineRequest'; type: { kind: 'OBJECT'; name: 'ReturnDeclineRequestPayload'; ofType: null; } }; 'returnLineItemRemoveFromReturn': { name: 'returnLineItemRemoveFromReturn'; type: { kind: 'OBJECT'; name: 'ReturnLineItemRemoveFromReturnPayload'; ofType: null; } }; 'returnRefund': { name: 'returnRefund'; type: { kind: 'OBJECT'; name: 'ReturnRefundPayload'; ofType: null; } }; 'returnReopen': { name: 'returnReopen'; type: { kind: 'OBJECT'; name: 'ReturnReopenPayload'; ofType: null; } }; 'returnRequest': { name: 'returnRequest'; type: { kind: 'OBJECT'; name: 'ReturnRequestPayload'; ofType: null; } }; 'reverseDeliveryCreateWithShipping': { name: 'reverseDeliveryCreateWithShipping'; type: { kind: 'OBJECT'; name: 'ReverseDeliveryCreateWithShippingPayload'; ofType: null; } }; 'reverseDeliveryDispose': { name: 'reverseDeliveryDispose'; type: { kind: 'OBJECT'; name: 'ReverseDeliveryDisposePayload'; ofType: null; } }; 'reverseDeliveryShippingUpdate': { name: 'reverseDeliveryShippingUpdate'; type: { kind: 'OBJECT'; name: 'ReverseDeliveryShippingUpdatePayload'; ofType: null; } }; 'reverseFulfillmentOrderDispose': { name: 'reverseFulfillmentOrderDispose'; type: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderDisposePayload'; ofType: null; } }; 'savedSearchCreate': { name: 'savedSearchCreate'; type: { kind: 'OBJECT'; name: 'SavedSearchCreatePayload'; ofType: null; } }; 'savedSearchDelete': { name: 'savedSearchDelete'; type: { kind: 'OBJECT'; name: 'SavedSearchDeletePayload'; ofType: null; } }; 'savedSearchUpdate': { name: 'savedSearchUpdate'; type: { kind: 'OBJECT'; name: 'SavedSearchUpdatePayload'; ofType: null; } }; 'scriptTagCreate': { name: 'scriptTagCreate'; type: { kind: 'OBJECT'; name: 'ScriptTagCreatePayload'; ofType: null; } }; 'scriptTagDelete': { name: 'scriptTagDelete'; type: { kind: 'OBJECT'; name: 'ScriptTagDeletePayload'; ofType: null; } }; 'scriptTagUpdate': { name: 'scriptTagUpdate'; type: { kind: 'OBJECT'; name: 'ScriptTagUpdatePayload'; ofType: null; } }; 'segmentCreate': { name: 'segmentCreate'; type: { kind: 'OBJECT'; name: 'SegmentCreatePayload'; ofType: null; } }; 'segmentDelete': { name: 'segmentDelete'; type: { kind: 'OBJECT'; name: 'SegmentDeletePayload'; ofType: null; } }; 'segmentUpdate': { name: 'segmentUpdate'; type: { kind: 'OBJECT'; name: 'SegmentUpdatePayload'; ofType: null; } }; 'sellingPlanGroupAddProductVariants': { name: 'sellingPlanGroupAddProductVariants'; type: { kind: 'OBJECT'; name: 'SellingPlanGroupAddProductVariantsPayload'; ofType: null; } }; 'sellingPlanGroupAddProducts': { name: 'sellingPlanGroupAddProducts'; type: { kind: 'OBJECT'; name: 'SellingPlanGroupAddProductsPayload'; ofType: null; } }; 'sellingPlanGroupCreate': { name: 'sellingPlanGroupCreate'; type: { kind: 'OBJECT'; name: 'SellingPlanGroupCreatePayload'; ofType: null; } }; 'sellingPlanGroupDelete': { name: 'sellingPlanGroupDelete'; type: { kind: 'OBJECT'; name: 'SellingPlanGroupDeletePayload'; ofType: null; } }; 'sellingPlanGroupRemoveProductVariants': { name: 'sellingPlanGroupRemoveProductVariants'; type: { kind: 'OBJECT'; name: 'SellingPlanGroupRemoveProductVariantsPayload'; ofType: null; } }; 'sellingPlanGroupRemoveProducts': { name: 'sellingPlanGroupRemoveProducts'; type: { kind: 'OBJECT'; name: 'SellingPlanGroupRemoveProductsPayload'; ofType: null; } }; 'sellingPlanGroupUpdate': { name: 'sellingPlanGroupUpdate'; type: { kind: 'OBJECT'; name: 'SellingPlanGroupUpdatePayload'; ofType: null; } }; 'serverPixelCreate': { name: 'serverPixelCreate'; type: { kind: 'OBJECT'; name: 'ServerPixelCreatePayload'; ofType: null; } }; 'serverPixelDelete': { name: 'serverPixelDelete'; type: { kind: 'OBJECT'; name: 'ServerPixelDeletePayload'; ofType: null; } }; 'shippingPackageDelete': { name: 'shippingPackageDelete'; type: { kind: 'OBJECT'; name: 'ShippingPackageDeletePayload'; ofType: null; } }; 'shippingPackageMakeDefault': { name: 'shippingPackageMakeDefault'; type: { kind: 'OBJECT'; name: 'ShippingPackageMakeDefaultPayload'; ofType: null; } }; 'shippingPackageUpdate': { name: 'shippingPackageUpdate'; type: { kind: 'OBJECT'; name: 'ShippingPackageUpdatePayload'; ofType: null; } }; 'shopLocaleDisable': { name: 'shopLocaleDisable'; type: { kind: 'OBJECT'; name: 'ShopLocaleDisablePayload'; ofType: null; } }; 'shopLocaleEnable': { name: 'shopLocaleEnable'; type: { kind: 'OBJECT'; name: 'ShopLocaleEnablePayload'; ofType: null; } }; 'shopLocaleUpdate': { name: 'shopLocaleUpdate'; type: { kind: 'OBJECT'; name: 'ShopLocaleUpdatePayload'; ofType: null; } }; 'shopPolicyUpdate': { name: 'shopPolicyUpdate'; type: { kind: 'OBJECT'; name: 'ShopPolicyUpdatePayload'; ofType: null; } }; 'shopResourceFeedbackCreate': { name: 'shopResourceFeedbackCreate'; type: { kind: 'OBJECT'; name: 'ShopResourceFeedbackCreatePayload'; ofType: null; } }; 'stagedUploadTargetGenerate': { name: 'stagedUploadTargetGenerate'; type: { kind: 'OBJECT'; name: 'StagedUploadTargetGeneratePayload'; ofType: null; } }; 'stagedUploadTargetsGenerate': { name: 'stagedUploadTargetsGenerate'; type: { kind: 'OBJECT'; name: 'StagedUploadTargetsGeneratePayload'; ofType: null; } }; 'stagedUploadsCreate': { name: 'stagedUploadsCreate'; type: { kind: 'OBJECT'; name: 'StagedUploadsCreatePayload'; ofType: null; } }; 'standardMetafieldDefinitionEnable': { name: 'standardMetafieldDefinitionEnable'; type: { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionEnablePayload'; ofType: null; } }; 'standardMetaobjectDefinitionEnable': { name: 'standardMetaobjectDefinitionEnable'; type: { kind: 'OBJECT'; name: 'StandardMetaobjectDefinitionEnablePayload'; ofType: null; } }; 'storeCreditAccountCredit': { name: 'storeCreditAccountCredit'; type: { kind: 'OBJECT'; name: 'StoreCreditAccountCreditPayload'; ofType: null; } }; 'storeCreditAccountDebit': { name: 'storeCreditAccountDebit'; type: { kind: 'OBJECT'; name: 'StoreCreditAccountDebitPayload'; ofType: null; } }; 'storefrontAccessTokenCreate': { name: 'storefrontAccessTokenCreate'; type: { kind: 'OBJECT'; name: 'StorefrontAccessTokenCreatePayload'; ofType: null; } }; 'storefrontAccessTokenDelete': { name: 'storefrontAccessTokenDelete'; type: { kind: 'OBJECT'; name: 'StorefrontAccessTokenDeletePayload'; ofType: null; } }; 'subscriptionBillingAttemptCreate': { name: 'subscriptionBillingAttemptCreate'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingAttemptCreatePayload'; ofType: null; } }; 'subscriptionBillingCycleBulkCharge': { name: 'subscriptionBillingCycleBulkCharge'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleBulkChargePayload'; ofType: null; } }; 'subscriptionBillingCycleBulkSearch': { name: 'subscriptionBillingCycleBulkSearch'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleBulkSearchPayload'; ofType: null; } }; 'subscriptionBillingCycleCharge': { name: 'subscriptionBillingCycleCharge'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleChargePayload'; ofType: null; } }; 'subscriptionBillingCycleContractDraftCommit': { name: 'subscriptionBillingCycleContractDraftCommit'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleContractDraftCommitPayload'; ofType: null; } }; 'subscriptionBillingCycleContractDraftConcatenate': { name: 'subscriptionBillingCycleContractDraftConcatenate'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleContractDraftConcatenatePayload'; ofType: null; } }; 'subscriptionBillingCycleContractEdit': { name: 'subscriptionBillingCycleContractEdit'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleContractEditPayload'; ofType: null; } }; 'subscriptionBillingCycleEditDelete': { name: 'subscriptionBillingCycleEditDelete'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleEditDeletePayload'; ofType: null; } }; 'subscriptionBillingCycleEditsDelete': { name: 'subscriptionBillingCycleEditsDelete'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleEditsDeletePayload'; ofType: null; } }; 'subscriptionBillingCycleScheduleEdit': { name: 'subscriptionBillingCycleScheduleEdit'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleScheduleEditPayload'; ofType: null; } }; 'subscriptionBillingCycleSkip': { name: 'subscriptionBillingCycleSkip'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleSkipPayload'; ofType: null; } }; 'subscriptionBillingCycleUnskip': { name: 'subscriptionBillingCycleUnskip'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleUnskipPayload'; ofType: null; } }; 'subscriptionContractActivate': { name: 'subscriptionContractActivate'; type: { kind: 'OBJECT'; name: 'SubscriptionContractActivatePayload'; ofType: null; } }; 'subscriptionContractAtomicCreate': { name: 'subscriptionContractAtomicCreate'; type: { kind: 'OBJECT'; name: 'SubscriptionContractAtomicCreatePayload'; ofType: null; } }; 'subscriptionContractCancel': { name: 'subscriptionContractCancel'; type: { kind: 'OBJECT'; name: 'SubscriptionContractCancelPayload'; ofType: null; } }; 'subscriptionContractCreate': { name: 'subscriptionContractCreate'; type: { kind: 'OBJECT'; name: 'SubscriptionContractCreatePayload'; ofType: null; } }; 'subscriptionContractExpire': { name: 'subscriptionContractExpire'; type: { kind: 'OBJECT'; name: 'SubscriptionContractExpirePayload'; ofType: null; } }; 'subscriptionContractFail': { name: 'subscriptionContractFail'; type: { kind: 'OBJECT'; name: 'SubscriptionContractFailPayload'; ofType: null; } }; 'subscriptionContractPause': { name: 'subscriptionContractPause'; type: { kind: 'OBJECT'; name: 'SubscriptionContractPausePayload'; ofType: null; } }; 'subscriptionContractProductChange': { name: 'subscriptionContractProductChange'; type: { kind: 'OBJECT'; name: 'SubscriptionContractProductChangePayload'; ofType: null; } }; 'subscriptionContractSetNextBillingDate': { name: 'subscriptionContractSetNextBillingDate'; type: { kind: 'OBJECT'; name: 'SubscriptionContractSetNextBillingDatePayload'; ofType: null; } }; 'subscriptionContractUpdate': { name: 'subscriptionContractUpdate'; type: { kind: 'OBJECT'; name: 'SubscriptionContractUpdatePayload'; ofType: null; } }; 'subscriptionDraftCommit': { name: 'subscriptionDraftCommit'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftCommitPayload'; ofType: null; } }; 'subscriptionDraftDiscountAdd': { name: 'subscriptionDraftDiscountAdd'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftDiscountAddPayload'; ofType: null; } }; 'subscriptionDraftDiscountCodeApply': { name: 'subscriptionDraftDiscountCodeApply'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftDiscountCodeApplyPayload'; ofType: null; } }; 'subscriptionDraftDiscountRemove': { name: 'subscriptionDraftDiscountRemove'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftDiscountRemovePayload'; ofType: null; } }; 'subscriptionDraftDiscountUpdate': { name: 'subscriptionDraftDiscountUpdate'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftDiscountUpdatePayload'; ofType: null; } }; 'subscriptionDraftFreeShippingDiscountAdd': { name: 'subscriptionDraftFreeShippingDiscountAdd'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftFreeShippingDiscountAddPayload'; ofType: null; } }; 'subscriptionDraftFreeShippingDiscountUpdate': { name: 'subscriptionDraftFreeShippingDiscountUpdate'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftFreeShippingDiscountUpdatePayload'; ofType: null; } }; 'subscriptionDraftLineAdd': { name: 'subscriptionDraftLineAdd'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftLineAddPayload'; ofType: null; } }; 'subscriptionDraftLineRemove': { name: 'subscriptionDraftLineRemove'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftLineRemovePayload'; ofType: null; } }; 'subscriptionDraftLineUpdate': { name: 'subscriptionDraftLineUpdate'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftLineUpdatePayload'; ofType: null; } }; 'subscriptionDraftUpdate': { name: 'subscriptionDraftUpdate'; type: { kind: 'OBJECT'; name: 'SubscriptionDraftUpdatePayload'; ofType: null; } }; 'tagsAdd': { name: 'tagsAdd'; type: { kind: 'OBJECT'; name: 'TagsAddPayload'; ofType: null; } }; 'tagsRemove': { name: 'tagsRemove'; type: { kind: 'OBJECT'; name: 'TagsRemovePayload'; ofType: null; } }; 'taxAppConfigure': { name: 'taxAppConfigure'; type: { kind: 'OBJECT'; name: 'TaxAppConfigurePayload'; ofType: null; } }; 'transactionVoid': { name: 'transactionVoid'; type: { kind: 'OBJECT'; name: 'TransactionVoidPayload'; ofType: null; } }; 'translationsRegister': { name: 'translationsRegister'; type: { kind: 'OBJECT'; name: 'TranslationsRegisterPayload'; ofType: null; } }; 'translationsRemove': { name: 'translationsRemove'; type: { kind: 'OBJECT'; name: 'TranslationsRemovePayload'; ofType: null; } }; 'urlRedirectBulkDeleteAll': { name: 'urlRedirectBulkDeleteAll'; type: { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteAllPayload'; ofType: null; } }; 'urlRedirectBulkDeleteByIds': { name: 'urlRedirectBulkDeleteByIds'; type: { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteByIdsPayload'; ofType: null; } }; 'urlRedirectBulkDeleteBySavedSearch': { name: 'urlRedirectBulkDeleteBySavedSearch'; type: { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteBySavedSearchPayload'; ofType: null; } }; 'urlRedirectBulkDeleteBySearch': { name: 'urlRedirectBulkDeleteBySearch'; type: { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteBySearchPayload'; ofType: null; } }; 'urlRedirectCreate': { name: 'urlRedirectCreate'; type: { kind: 'OBJECT'; name: 'UrlRedirectCreatePayload'; ofType: null; } }; 'urlRedirectDelete': { name: 'urlRedirectDelete'; type: { kind: 'OBJECT'; name: 'UrlRedirectDeletePayload'; ofType: null; } }; 'urlRedirectImportCreate': { name: 'urlRedirectImportCreate'; type: { kind: 'OBJECT'; name: 'UrlRedirectImportCreatePayload'; ofType: null; } }; 'urlRedirectImportSubmit': { name: 'urlRedirectImportSubmit'; type: { kind: 'OBJECT'; name: 'UrlRedirectImportSubmitPayload'; ofType: null; } }; 'urlRedirectUpdate': { name: 'urlRedirectUpdate'; type: { kind: 'OBJECT'; name: 'UrlRedirectUpdatePayload'; ofType: null; } }; 'validationCreate': { name: 'validationCreate'; type: { kind: 'OBJECT'; name: 'ValidationCreatePayload'; ofType: null; } }; 'validationDelete': { name: 'validationDelete'; type: { kind: 'OBJECT'; name: 'ValidationDeletePayload'; ofType: null; } }; 'validationUpdate': { name: 'validationUpdate'; type: { kind: 'OBJECT'; name: 'ValidationUpdatePayload'; ofType: null; } }; 'webPixelCreate': { name: 'webPixelCreate'; type: { kind: 'OBJECT'; name: 'WebPixelCreatePayload'; ofType: null; } }; 'webPixelDelete': { name: 'webPixelDelete'; type: { kind: 'OBJECT'; name: 'WebPixelDeletePayload'; ofType: null; } }; 'webPixelUpdate': { name: 'webPixelUpdate'; type: { kind: 'OBJECT'; name: 'WebPixelUpdatePayload'; ofType: null; } }; 'webhookSubscriptionCreate': { name: 'webhookSubscriptionCreate'; type: { kind: 'OBJECT'; name: 'WebhookSubscriptionCreatePayload'; ofType: null; } }; 'webhookSubscriptionDelete': { name: 'webhookSubscriptionDelete'; type: { kind: 'OBJECT'; name: 'WebhookSubscriptionDeletePayload'; ofType: null; } }; 'webhookSubscriptionUpdate': { name: 'webhookSubscriptionUpdate'; type: { kind: 'OBJECT'; name: 'WebhookSubscriptionUpdatePayload'; ofType: null; } }; }; };
    'MutationsStagedUploadTargetGenerateUploadParameter': { kind: 'OBJECT'; name: 'MutationsStagedUploadTargetGenerateUploadParameter'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Navigable': { kind: 'INTERFACE'; name: 'Navigable'; fields: { 'defaultCursor': { name: 'defaultCursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'AbandonedCheckout' | 'Company' | 'CompanyLocation' | 'DraftOrder' | 'OnlineStoreArticle' | 'OnlineStorePage' | 'Product' | 'ProductVariant'; };
    'NavigationItem': { kind: 'OBJECT'; name: 'NavigationItem'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'Node': { kind: 'INTERFACE'; name: 'Node'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'AbandonedCheckout' | 'AbandonedCheckoutLineItem' | 'Abandonment' | 'AddAllProductsOperation' | 'AdditionalFee' | 'App' | 'AppCatalog' | 'AppCredit' | 'AppInstallation' | 'AppPurchaseOneTime' | 'AppRevenueAttributionRecord' | 'AppSubscription' | 'AppUsageRecord' | 'BasicEvent' | 'BulkOperation' | 'CalculatedOrder' | 'CartTransform' | 'CashTrackingAdjustment' | 'CashTrackingSession' | 'CatalogCsvOperation' | 'Channel' | 'ChannelDefinition' | 'ChannelInformation' | 'CheckoutProfile' | 'Collection' | 'CommentEvent' | 'Company' | 'CompanyAddress' | 'CompanyContact' | 'CompanyContactRole' | 'CompanyContactRoleAssignment' | 'CompanyLocation' | 'CompanyLocationCatalog' | 'Customer' | 'CustomerPaymentMethod' | 'CustomerSegmentMembersQuery' | 'CustomerVisit' | 'DeliveryCarrierService' | 'DeliveryCondition' | 'DeliveryCountry' | 'DeliveryCustomization' | 'DeliveryLocationGroup' | 'DeliveryMethod' | 'DeliveryMethodDefinition' | 'DeliveryParticipant' | 'DeliveryProfile' | 'DeliveryProfileItem' | 'DeliveryPromiseProvider' | 'DeliveryProvince' | 'DeliveryRateDefinition' | 'DeliveryZone' | 'DiscountAutomaticBxgy' | 'DiscountAutomaticNode' | 'DiscountCodeNode' | 'DiscountNode' | 'DiscountRedeemCodeBulkCreation' | 'Domain' | 'DraftOrder' | 'DraftOrderLineItem' | 'DraftOrderTag' | 'Duty' | 'ExchangeLineItem' | 'ExchangeV2' | 'ExternalVideo' | 'Fulfillment' | 'FulfillmentConstraintRule' | 'FulfillmentEvent' | 'FulfillmentLineItem' | 'FulfillmentOrder' | 'FulfillmentOrderDestination' | 'FulfillmentOrderLineItem' | 'FulfillmentOrderMerchantRequest' | 'GenericFile' | 'GiftCard' | 'InventoryAdjustmentGroup' | 'InventoryItem' | 'InventoryItemMeasurement' | 'InventoryLevel' | 'InventoryQuantity' | 'LineItem' | 'LineItemGroup' | 'LineItemMutable' | 'Location' | 'MailingAddress' | 'Market' | 'MarketCatalog' | 'MarketRegionCountry' | 'MarketWebPresence' | 'MarketingActivity' | 'MarketingEvent' | 'MediaImage' | 'Menu' | 'Metafield' | 'MetafieldDefinition' | 'MetafieldStorefrontVisibility' | 'Metaobject' | 'MetaobjectDefinition' | 'Model3d' | 'OnlineStoreArticle' | 'OnlineStoreBlog' | 'OnlineStorePage' | 'Order' | 'OrderDisputeSummary' | 'OrderTransaction' | 'PaymentCustomization' | 'PaymentMandate' | 'PaymentSchedule' | 'PaymentTerms' | 'PaymentTermsTemplate' | 'PriceList' | 'PriceRule' | 'PriceRuleDiscountCode' | 'PrivateMetafield' | 'Product' | 'ProductBundleOperation' | 'ProductFeed' | 'ProductOption' | 'ProductOptionValue' | 'ProductSetOperation' | 'ProductTaxonomyNode' | 'ProductVariant' | 'ProductVariantComponent' | 'Publication' | 'PublicationResourceOperation' | 'QuantityPriceBreak' | 'Refund' | 'RefundShippingLine' | 'Return' | 'ReturnLineItem' | 'ReturnableFulfillment' | 'ReverseDelivery' | 'ReverseDeliveryLineItem' | 'ReverseFulfillmentOrder' | 'ReverseFulfillmentOrderDisposition' | 'ReverseFulfillmentOrderLineItem' | 'SaleAdditionalFee' | 'SavedSearch' | 'ScriptTag' | 'Segment' | 'SellingPlan' | 'SellingPlanGroup' | 'ServerPixel' | 'Shop' | 'ShopAddress' | 'ShopPolicy' | 'ShopifyPaymentsAccount' | 'ShopifyPaymentsBalanceTransaction' | 'ShopifyPaymentsBankAccount' | 'ShopifyPaymentsDispute' | 'ShopifyPaymentsDisputeEvidence' | 'ShopifyPaymentsDisputeFileUpload' | 'ShopifyPaymentsDisputeFulfillment' | 'ShopifyPaymentsPayout' | 'ShopifyPaymentsVerification' | 'StaffMember' | 'StandardMetafieldDefinitionTemplate' | 'StoreCreditAccount' | 'StoreCreditAccountCreditTransaction' | 'StoreCreditAccountDebitRevertTransaction' | 'StoreCreditAccountDebitTransaction' | 'StorefrontAccessToken' | 'SubscriptionBillingAttempt' | 'SubscriptionContract' | 'SubscriptionDraft' | 'TaxonomyAttribute' | 'TaxonomyCategory' | 'TaxonomyChoiceListAttribute' | 'TaxonomyMeasurementAttribute' | 'TaxonomyValue' | 'TenderTransaction' | 'TransactionFee' | 'UnverifiedReturnLineItem' | 'UrlRedirect' | 'UrlRedirectImport' | 'Validation' | 'Video' | 'WebPixel' | 'WebhookSubscription'; };
    'ObjectDimensionsInput': { kind: 'INPUT_OBJECT'; name: 'ObjectDimensionsInput'; isOneOf: false; inputFields: [{ name: 'length'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'width'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'height'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'unit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LengthUnit'; ofType: null; }; }; defaultValue: null }]; };
    'OnlineStore': { kind: 'OBJECT'; name: 'OnlineStore'; fields: { 'passwordProtection': { name: 'passwordProtection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OnlineStorePasswordProtection'; ofType: null; }; } }; }; };
    'OnlineStoreArticle': { kind: 'OBJECT'; name: 'OnlineStoreArticle'; fields: { 'defaultCursor': { name: 'defaultCursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; }; };
    'OnlineStoreBlog': { kind: 'OBJECT'; name: 'OnlineStoreBlog'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; }; };
    'OnlineStorePage': { kind: 'OBJECT'; name: 'OnlineStorePage'; fields: { 'defaultCursor': { name: 'defaultCursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; }; };
    'OnlineStorePasswordProtection': { kind: 'OBJECT'; name: 'OnlineStorePasswordProtection'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'OnlineStorePreviewable': { kind: 'INTERFACE'; name: 'OnlineStorePreviewable'; fields: { 'onlineStorePreviewUrl': { name: 'onlineStorePreviewUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; possibleTypes: 'Product'; };
    'OptionAndValueInput': { kind: 'INPUT_OBJECT'; name: 'OptionAndValueInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'optionId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'linkedMetafield'; type: { kind: 'INPUT_OBJECT'; name: 'LinkedMetafieldInput'; ofType: null; }; defaultValue: null }]; };
    'OptionCreateInput': { kind: 'INPUT_OBJECT'; name: 'OptionCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OptionValueCreateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'linkedMetafield'; type: { kind: 'INPUT_OBJECT'; name: 'LinkedMetafieldCreateInput'; ofType: null; }; defaultValue: null }]; };
    'OptionReorderInput': { kind: 'INPUT_OBJECT'; name: 'OptionReorderInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OptionValueReorderInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'OptionSetInput': { kind: 'INPUT_OBJECT'; name: 'OptionSetInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OptionValueSetInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'OptionUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OptionUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'linkedMetafield'; type: { kind: 'INPUT_OBJECT'; name: 'LinkedMetafieldUpdateInput'; ofType: null; }; defaultValue: null }]; };
    'OptionValueCreateInput': { kind: 'INPUT_OBJECT'; name: 'OptionValueCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'linkedMetafieldValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OptionValueReorderInput': { kind: 'INPUT_OBJECT'; name: 'OptionValueReorderInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OptionValueSetInput': { kind: 'INPUT_OBJECT'; name: 'OptionValueSetInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OptionValueUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OptionValueUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'linkedMetafieldValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Order': { kind: 'OBJECT'; name: 'Order'; fields: { 'additionalFees': { name: 'additionalFees'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AdditionalFee'; ofType: null; }; }; }; } }; 'agreements': { name: 'agreements'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SalesAgreementConnection'; ofType: null; }; } }; 'alerts': { name: 'alerts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourceAlert'; ofType: null; }; }; }; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'OrderApp'; ofType: null; } }; 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'billingAddressMatchesShippingAddress': { name: 'billingAddressMatchesShippingAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canMarkAsPaid': { name: 'canMarkAsPaid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canNotifyCustomer': { name: 'canNotifyCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'cancelReason': { name: 'cancelReason'; type: { kind: 'ENUM'; name: 'OrderCancelReason'; ofType: null; } }; 'cancellation': { name: 'cancellation'; type: { kind: 'OBJECT'; name: 'OrderCancellation'; ofType: null; } }; 'cancelledAt': { name: 'cancelledAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'capturable': { name: 'capturable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'cartDiscountAmount': { name: 'cartDiscountAmount'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'cartDiscountAmountSet': { name: 'cartDiscountAmountSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'channelInformation': { name: 'channelInformation'; type: { kind: 'OBJECT'; name: 'ChannelInformation'; ofType: null; } }; 'clientIp': { name: 'clientIp'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'closed': { name: 'closed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'closedAt': { name: 'closedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'confirmationNumber': { name: 'confirmationNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'confirmed': { name: 'confirmed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'currentCartDiscountAmountSet': { name: 'currentCartDiscountAmountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'currentSubtotalLineItemsQuantity': { name: 'currentSubtotalLineItemsQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'currentSubtotalPriceSet': { name: 'currentSubtotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'currentTaxLines': { name: 'currentTaxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'currentTotalAdditionalFeesSet': { name: 'currentTotalAdditionalFeesSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'currentTotalDiscountsSet': { name: 'currentTotalDiscountsSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'currentTotalDutiesSet': { name: 'currentTotalDutiesSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'currentTotalPriceSet': { name: 'currentTotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'currentTotalTaxSet': { name: 'currentTotalTaxSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'currentTotalWeight': { name: 'currentTotalWeight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'customerAcceptsMarketing': { name: 'customerAcceptsMarketing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'customerJourney': { name: 'customerJourney'; type: { kind: 'OBJECT'; name: 'CustomerJourney'; ofType: null; } }; 'customerJourneySummary': { name: 'customerJourneySummary'; type: { kind: 'OBJECT'; name: 'CustomerJourneySummary'; ofType: null; } }; 'customerLocale': { name: 'customerLocale'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discountApplications': { name: 'discountApplications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountApplicationConnection'; ofType: null; }; } }; 'discountCode': { name: 'discountCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discountCodes': { name: 'discountCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'displayAddress': { name: 'displayAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'displayFinancialStatus': { name: 'displayFinancialStatus'; type: { kind: 'ENUM'; name: 'OrderDisplayFinancialStatus'; ofType: null; } }; 'displayFulfillmentStatus': { name: 'displayFulfillmentStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDisplayFulfillmentStatus'; ofType: null; }; } }; 'disputes': { name: 'disputes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderDisputeSummary'; ofType: null; }; }; }; } }; 'edited': { name: 'edited'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'estimatedTaxes': { name: 'estimatedTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'exchangeV2s': { name: 'exchangeV2s'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeV2Connection'; ofType: null; }; } }; 'fulfillable': { name: 'fulfillable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'fulfillmentOrders': { name: 'fulfillmentOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderConnection'; ofType: null; }; } }; 'fulfillments': { name: 'fulfillments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; }; }; }; } }; 'fulfillmentsCount': { name: 'fulfillmentsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'fullyPaid': { name: 'fullyPaid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'landingPageDisplayText': { name: 'landingPageDisplayText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'landingPageUrl': { name: 'landingPageUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItemConnection'; ofType: null; }; } }; 'lineItemsMutable': { name: 'lineItemsMutable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItemMutableConnection'; ofType: null; }; } }; 'localizationExtensions': { name: 'localizationExtensions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocalizationExtensionConnection'; ofType: null; }; } }; 'merchantEditable': { name: 'merchantEditable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'merchantEditableErrors': { name: 'merchantEditableErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'merchantOfRecordApp': { name: 'merchantOfRecordApp'; type: { kind: 'OBJECT'; name: 'OrderApp'; ofType: null; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'netPayment': { name: 'netPayment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'netPaymentSet': { name: 'netPaymentSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'nonFulfillableLineItems': { name: 'nonFulfillableLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItemConnection'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'originalTotalAdditionalFeesSet': { name: 'originalTotalAdditionalFeesSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'originalTotalDutiesSet': { name: 'originalTotalDutiesSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'originalTotalPriceSet': { name: 'originalTotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'paymentCollectionDetails': { name: 'paymentCollectionDetails'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderPaymentCollectionDetails'; ofType: null; }; } }; 'paymentGatewayNames': { name: 'paymentGatewayNames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'paymentTerms': { name: 'paymentTerms'; type: { kind: 'OBJECT'; name: 'PaymentTerms'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'physicalLocation': { name: 'physicalLocation'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'poNumber': { name: 'poNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'presentmentCurrencyCode': { name: 'presentmentCurrencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'processedAt': { name: 'processedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'publication': { name: 'publication'; type: { kind: 'OBJECT'; name: 'Publication'; ofType: null; } }; 'purchasingEntity': { name: 'purchasingEntity'; type: { kind: 'UNION'; name: 'PurchasingEntity'; ofType: null; } }; 'referralCode': { name: 'referralCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'referrerDisplayText': { name: 'referrerDisplayText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'referrerUrl': { name: 'referrerUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'refundDiscrepancySet': { name: 'refundDiscrepancySet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'refundable': { name: 'refundable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'refunds': { name: 'refunds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Refund'; ofType: null; }; }; }; } }; 'registeredSourceUrl': { name: 'registeredSourceUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'restockable': { name: 'restockable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'retailLocation': { name: 'retailLocation'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'returnStatus': { name: 'returnStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderReturnStatus'; ofType: null; }; } }; 'returns': { name: 'returns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnConnection'; ofType: null; }; } }; 'risk': { name: 'risk'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderRiskSummary'; ofType: null; }; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderRiskLevel'; ofType: null; }; } }; 'risks': { name: 'risks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderRisk'; ofType: null; }; }; }; } }; 'shippingAddress': { name: 'shippingAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'shippingLine': { name: 'shippingLine'; type: { kind: 'OBJECT'; name: 'ShippingLine'; ofType: null; } }; 'shippingLines': { name: 'shippingLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingLineConnection'; ofType: null; }; } }; 'shopifyProtect': { name: 'shopifyProtect'; type: { kind: 'OBJECT'; name: 'ShopifyProtectOrderSummary'; ofType: null; } }; 'sourceIdentifier': { name: 'sourceIdentifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sourceName': { name: 'sourceName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'staffMember': { name: 'staffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'subtotalLineItemsQuantity': { name: 'subtotalLineItemsQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'subtotalPrice': { name: 'subtotalPrice'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'subtotalPriceSet': { name: 'subtotalPriceSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'suggestedRefund': { name: 'suggestedRefund'; type: { kind: 'OBJECT'; name: 'SuggestedRefund'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'taxExempt': { name: 'taxExempt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'taxesIncluded': { name: 'taxesIncluded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'test': { name: 'test'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'totalCapturable': { name: 'totalCapturable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalCapturableSet': { name: 'totalCapturableSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscounts': { name: 'totalDiscounts'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'totalDiscountsSet': { name: 'totalDiscountsSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'totalOutstandingSet': { name: 'totalOutstandingSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalPrice': { name: 'totalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalPriceSet': { name: 'totalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalReceived': { name: 'totalReceived'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalReceivedSet': { name: 'totalReceivedSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalRefunded': { name: 'totalRefunded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalRefundedSet': { name: 'totalRefundedSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalRefundedShippingSet': { name: 'totalRefundedShippingSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalShippingPrice': { name: 'totalShippingPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalShippingPriceSet': { name: 'totalShippingPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTax': { name: 'totalTax'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'totalTaxSet': { name: 'totalTaxSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'totalTipReceived': { name: 'totalTipReceived'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'totalTipReceivedSet': { name: 'totalTipReceivedSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalWeight': { name: 'totalWeight'; type: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; } }; 'transactions': { name: 'transactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderTransaction'; ofType: null; }; }; }; } }; 'transactionsCount': { name: 'transactionsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'unpaid': { name: 'unpaid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'OrderActionType': { name: 'OrderActionType'; enumValues: 'ORDER' | 'ORDER_EDIT' | 'REFUND' | 'RETURN' | 'UNKNOWN'; };
    'OrderAgreement': { kind: 'OBJECT'; name: 'OrderAgreement'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'happenedAt': { name: 'happenedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderActionType'; ofType: null; }; } }; 'sales': { name: 'sales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleConnection'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; }; };
    'OrderApp': { kind: 'OBJECT'; name: 'OrderApp'; fields: { 'icon': { name: 'icon'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderCancelPayload': { kind: 'OBJECT'; name: 'OrderCancelPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'orderCancelUserErrors': { name: 'orderCancelUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderCancelUserError'; ofType: null; }; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderCancelReason': { name: 'OrderCancelReason'; enumValues: 'CUSTOMER' | 'DECLINED' | 'FRAUD' | 'INVENTORY' | 'STAFF' | 'OTHER'; };
    'OrderCancelUserError': { kind: 'OBJECT'; name: 'OrderCancelUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderCancelUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderCancelUserErrorCode': { name: 'OrderCancelUserErrorCode'; enumValues: 'NO_REFUND_PERMISSION' | 'NOT_FOUND' | 'INVALID'; };
    'OrderCancellation': { kind: 'OBJECT'; name: 'OrderCancellation'; fields: { 'staffNote': { name: 'staffNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderCaptureInput': { kind: 'INPUT_OBJECT'; name: 'OrderCaptureInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'parentTransactionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; }; defaultValue: null }, { name: 'currency'; type: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; defaultValue: null }, { name: 'finalCapture'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'OrderCapturePayload': { kind: 'OBJECT'; name: 'OrderCapturePayload'; fields: { 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'OrderTransaction'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderCloseInput': { kind: 'INPUT_OBJECT'; name: 'OrderCloseInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'OrderClosePayload': { kind: 'OBJECT'; name: 'OrderClosePayload'; fields: { 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderConnection': { kind: 'OBJECT'; name: 'OrderConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'OrderCreateMandatePaymentPayload': { kind: 'OBJECT'; name: 'OrderCreateMandatePaymentPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'paymentReferenceId': { name: 'paymentReferenceId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderCreateMandatePaymentUserError'; ofType: null; }; }; }; } }; }; };
    'OrderCreateMandatePaymentUserError': { kind: 'OBJECT'; name: 'OrderCreateMandatePaymentUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderCreateMandatePaymentUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderCreateMandatePaymentUserErrorCode': { name: 'OrderCreateMandatePaymentUserErrorCode'; enumValues: 'ORDER_MANDATE_PAYMENT_ERROR_CODE'; };
    'OrderDeletePayload': { kind: 'OBJECT'; name: 'OrderDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'OrderDeleteUserError': { kind: 'OBJECT'; name: 'OrderDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderDeleteUserErrorCode': { name: 'OrderDeleteUserErrorCode'; enumValues: 'NOT_FOUND' | 'INVALID'; };
    'OrderDisplayFinancialStatus': { name: 'OrderDisplayFinancialStatus'; enumValues: 'PENDING' | 'AUTHORIZED' | 'PARTIALLY_PAID' | 'PARTIALLY_REFUNDED' | 'VOIDED' | 'PAID' | 'REFUNDED' | 'EXPIRED'; };
    'OrderDisplayFulfillmentStatus': { name: 'OrderDisplayFulfillmentStatus'; enumValues: 'UNFULFILLED' | 'PARTIALLY_FULFILLED' | 'FULFILLED' | 'RESTOCKED' | 'PENDING_FULFILLMENT' | 'OPEN' | 'IN_PROGRESS' | 'ON_HOLD' | 'SCHEDULED'; };
    'OrderDisputeSummary': { kind: 'OBJECT'; name: 'OrderDisputeSummary'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'initiatedAs': { name: 'initiatedAs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DisputeType'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DisputeStatus'; ofType: null; }; } }; }; };
    'OrderEdge': { kind: 'OBJECT'; name: 'OrderEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; }; };
    'OrderEditAddCustomItemPayload': { kind: 'OBJECT'; name: 'OrderEditAddCustomItemPayload'; fields: { 'calculatedLineItem': { name: 'calculatedLineItem'; type: { kind: 'OBJECT'; name: 'CalculatedLineItem'; ofType: null; } }; 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditAddLineItemDiscountPayload': { kind: 'OBJECT'; name: 'OrderEditAddLineItemDiscountPayload'; fields: { 'addedDiscountStagedChange': { name: 'addedDiscountStagedChange'; type: { kind: 'OBJECT'; name: 'OrderStagedChangeAddLineItemDiscount'; ofType: null; } }; 'calculatedLineItem': { name: 'calculatedLineItem'; type: { kind: 'OBJECT'; name: 'CalculatedLineItem'; ofType: null; } }; 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditAddShippingLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderEditAddShippingLineInput'; isOneOf: false; inputFields: [{ name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OrderEditAddShippingLinePayload': { kind: 'OBJECT'; name: 'OrderEditAddShippingLinePayload'; fields: { 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'calculatedShippingLine': { name: 'calculatedShippingLine'; type: { kind: 'OBJECT'; name: 'CalculatedShippingLine'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEditAddShippingLineUserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditAddShippingLineUserError': { kind: 'OBJECT'; name: 'OrderEditAddShippingLineUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderEditAddShippingLineUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderEditAddShippingLineUserErrorCode': { name: 'OrderEditAddShippingLineUserErrorCode'; enumValues: 'INVALID'; };
    'OrderEditAddVariantPayload': { kind: 'OBJECT'; name: 'OrderEditAddVariantPayload'; fields: { 'calculatedLineItem': { name: 'calculatedLineItem'; type: { kind: 'OBJECT'; name: 'CalculatedLineItem'; ofType: null; } }; 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditAgreement': { kind: 'OBJECT'; name: 'OrderEditAgreement'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'happenedAt': { name: 'happenedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderActionType'; ofType: null; }; } }; 'sales': { name: 'sales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleConnection'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; }; };
    'OrderEditAppliedDiscountInput': { kind: 'INPUT_OBJECT'; name: 'OrderEditAppliedDiscountInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fixedValue'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'percentValue'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'OrderEditBeginPayload': { kind: 'OBJECT'; name: 'OrderEditBeginPayload'; fields: { 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditCommitPayload': { kind: 'OBJECT'; name: 'OrderEditCommitPayload'; fields: { 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditRemoveDiscountPayload': { kind: 'OBJECT'; name: 'OrderEditRemoveDiscountPayload'; fields: { 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEditRemoveDiscountUserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditRemoveDiscountUserError': { kind: 'OBJECT'; name: 'OrderEditRemoveDiscountUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderEditRemoveDiscountUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderEditRemoveDiscountUserErrorCode': { name: 'OrderEditRemoveDiscountUserErrorCode'; enumValues: 'INVALID'; };
    'OrderEditRemoveLineItemDiscountPayload': { kind: 'OBJECT'; name: 'OrderEditRemoveLineItemDiscountPayload'; fields: { 'calculatedLineItem': { name: 'calculatedLineItem'; type: { kind: 'OBJECT'; name: 'CalculatedLineItem'; ofType: null; } }; 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditRemoveShippingLinePayload': { kind: 'OBJECT'; name: 'OrderEditRemoveShippingLinePayload'; fields: { 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEditRemoveShippingLineUserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditRemoveShippingLineUserError': { kind: 'OBJECT'; name: 'OrderEditRemoveShippingLineUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderEditRemoveShippingLineUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderEditRemoveShippingLineUserErrorCode': { name: 'OrderEditRemoveShippingLineUserErrorCode'; enumValues: 'INVALID'; };
    'OrderEditSetQuantityPayload': { kind: 'OBJECT'; name: 'OrderEditSetQuantityPayload'; fields: { 'calculatedLineItem': { name: 'calculatedLineItem'; type: { kind: 'OBJECT'; name: 'CalculatedLineItem'; ofType: null; } }; 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditUpdateDiscountPayload': { kind: 'OBJECT'; name: 'OrderEditUpdateDiscountPayload'; fields: { 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEditUpdateDiscountUserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditUpdateDiscountUserError': { kind: 'OBJECT'; name: 'OrderEditUpdateDiscountUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderEditUpdateDiscountUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderEditUpdateDiscountUserErrorCode': { name: 'OrderEditUpdateDiscountUserErrorCode'; enumValues: 'INVALID'; };
    'OrderEditUpdateShippingLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderEditUpdateShippingLineInput'; isOneOf: false; inputFields: [{ name: 'price'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OrderEditUpdateShippingLinePayload': { kind: 'OBJECT'; name: 'OrderEditUpdateShippingLinePayload'; fields: { 'calculatedOrder': { name: 'calculatedOrder'; type: { kind: 'OBJECT'; name: 'CalculatedOrder'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEditUpdateShippingLineUserError'; ofType: null; }; }; }; } }; }; };
    'OrderEditUpdateShippingLineUserError': { kind: 'OBJECT'; name: 'OrderEditUpdateShippingLineUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderEditUpdateShippingLineUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderEditUpdateShippingLineUserErrorCode': { name: 'OrderEditUpdateShippingLineUserErrorCode'; enumValues: 'INVALID'; };
    'OrderInput': { kind: 'INPUT_OBJECT'; name: 'OrderInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'MailingAddressInput'; ofType: null; }; defaultValue: null }, { name: 'customAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'localizationExtensions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'LocalizationExtensionInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'poNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OrderInvoiceSendPayload': { kind: 'OBJECT'; name: 'OrderInvoiceSendPayload'; fields: { 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderInvoiceSendUserError'; ofType: null; }; }; }; } }; }; };
    'OrderInvoiceSendUserError': { kind: 'OBJECT'; name: 'OrderInvoiceSendUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderInvoiceSendUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderInvoiceSendUserErrorCode': { name: 'OrderInvoiceSendUserErrorCode'; enumValues: 'ORDER_INVOICE_SEND_UNSUCCESSFUL'; };
    'OrderMarkAsPaidInput': { kind: 'INPUT_OBJECT'; name: 'OrderMarkAsPaidInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'OrderMarkAsPaidPayload': { kind: 'OBJECT'; name: 'OrderMarkAsPaidPayload'; fields: { 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderOpenInput': { kind: 'INPUT_OBJECT'; name: 'OrderOpenInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'OrderOpenPayload': { kind: 'OBJECT'; name: 'OrderOpenPayload'; fields: { 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'OrderPaymentCollectionDetails': { kind: 'OBJECT'; name: 'OrderPaymentCollectionDetails'; fields: { 'additionalPaymentCollectionUrl': { name: 'additionalPaymentCollectionUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'vaultedPaymentMethods': { name: 'vaultedPaymentMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentMandate'; ofType: null; }; }; } }; }; };
    'OrderPaymentStatus': { kind: 'OBJECT'; name: 'OrderPaymentStatus'; fields: { 'errorMessage': { name: 'errorMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'paymentReferenceId': { name: 'paymentReferenceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderPaymentStatusResult'; ofType: null; }; } }; 'transactions': { name: 'transactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderTransaction'; ofType: null; }; }; }; } }; 'translatedErrorMessage': { name: 'translatedErrorMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderPaymentStatusResult': { name: 'OrderPaymentStatusResult'; enumValues: 'SUCCESS' | 'AUTHORIZED' | 'VOIDED' | 'REFUNDED' | 'CAPTURED' | 'PURCHASED' | 'ERROR' | 'PROCESSING' | 'REDIRECT_REQUIRED' | 'RETRYABLE' | 'UNKNOWN' | 'INITIATED' | 'PENDING'; };
    'OrderReturnStatus': { name: 'OrderReturnStatus'; enumValues: 'IN_PROGRESS' | 'INSPECTION_COMPLETE' | 'NO_RETURN' | 'RETURNED' | 'RETURN_FAILED' | 'RETURN_REQUESTED'; };
    'OrderRisk': { kind: 'OBJECT'; name: 'OrderRisk'; fields: { 'display': { name: 'display'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'level': { name: 'level'; type: { kind: 'ENUM'; name: 'OrderRiskLevel'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderRiskAssessment': { kind: 'OBJECT'; name: 'OrderRiskAssessment'; fields: { 'facts': { name: 'facts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RiskFact'; ofType: null; }; }; }; } }; 'provider': { name: 'provider'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RiskAssessmentResult'; ofType: null; }; } }; }; };
    'OrderRiskAssessmentCreateInput': { kind: 'INPUT_OBJECT'; name: 'OrderRiskAssessmentCreateInput'; isOneOf: false; inputFields: [{ name: 'orderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'riskLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RiskAssessmentResult'; ofType: null; }; }; defaultValue: null }, { name: 'facts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderRiskAssessmentFactInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'OrderRiskAssessmentCreatePayload': { kind: 'OBJECT'; name: 'OrderRiskAssessmentCreatePayload'; fields: { 'orderRiskAssessment': { name: 'orderRiskAssessment'; type: { kind: 'OBJECT'; name: 'OrderRiskAssessment'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderRiskAssessmentCreateUserError'; ofType: null; }; }; }; } }; }; };
    'OrderRiskAssessmentCreateUserError': { kind: 'OBJECT'; name: 'OrderRiskAssessmentCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderRiskAssessmentCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderRiskAssessmentCreateUserErrorCode': { name: 'OrderRiskAssessmentCreateUserErrorCode'; enumValues: 'TOO_MANY_FACTS' | 'ORDER_ALREADY_FULFILLED' | 'INVALID' | 'NOT_FOUND'; };
    'OrderRiskAssessmentFactInput': { kind: 'INPUT_OBJECT'; name: 'OrderRiskAssessmentFactInput'; isOneOf: false; inputFields: [{ name: 'sentiment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RiskFactSentiment'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OrderRiskLevel': { name: 'OrderRiskLevel'; enumValues: 'LOW' | 'MEDIUM' | 'HIGH'; };
    'OrderRiskRecommendationResult': { name: 'OrderRiskRecommendationResult'; enumValues: 'CANCEL' | 'INVESTIGATE' | 'ACCEPT' | 'NONE'; };
    'OrderRiskSummary': { kind: 'OBJECT'; name: 'OrderRiskSummary'; fields: { 'assessments': { name: 'assessments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderRiskAssessment'; ofType: null; }; }; }; } }; 'recommendation': { name: 'recommendation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderRiskRecommendationResult'; ofType: null; }; } }; }; };
    'OrderSortKeys': { name: 'OrderSortKeys'; enumValues: 'CREATED_AT' | 'CUSTOMER_NAME' | 'DESTINATION' | 'FINANCIAL_STATUS' | 'FULFILLMENT_STATUS' | 'ORDER_NUMBER' | 'PROCESSED_AT' | 'TOTAL_ITEMS_QUANTITY' | 'TOTAL_PRICE' | 'UPDATED_AT' | 'PO_NUMBER' | 'ID' | 'RELEVANCE'; };
    'OrderStagedChange': { kind: 'UNION'; name: 'OrderStagedChange'; fields: {}; possibleTypes: 'OrderStagedChangeAddCustomItem' | 'OrderStagedChangeAddLineItemDiscount' | 'OrderStagedChangeAddShippingLine' | 'OrderStagedChangeAddVariant' | 'OrderStagedChangeDecrementItem' | 'OrderStagedChangeIncrementItem' | 'OrderStagedChangeRemoveShippingLine'; };
    'OrderStagedChangeAddCustomItem': { kind: 'OBJECT'; name: 'OrderStagedChangeAddCustomItem'; fields: { 'originalUnitPrice': { name: 'originalUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrderStagedChangeAddLineItemDiscount': { kind: 'OBJECT'; name: 'OrderStagedChangeAddLineItemDiscount'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'OrderStagedChangeAddShippingLine': { kind: 'OBJECT'; name: 'OrderStagedChangeAddShippingLine'; fields: { 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'presentmentTitle': { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderStagedChangeAddVariant': { kind: 'OBJECT'; name: 'OrderStagedChangeAddVariant'; fields: { 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'OrderStagedChangeConnection': { kind: 'OBJECT'; name: 'OrderStagedChangeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderStagedChangeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'OrderStagedChange'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'OrderStagedChangeDecrementItem': { kind: 'OBJECT'; name: 'OrderStagedChangeDecrementItem'; fields: { 'delta': { name: 'delta'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; } }; 'restock': { name: 'restock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'OrderStagedChangeEdge': { kind: 'OBJECT'; name: 'OrderStagedChangeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'OrderStagedChange'; ofType: null; }; } }; }; };
    'OrderStagedChangeIncrementItem': { kind: 'OBJECT'; name: 'OrderStagedChangeIncrementItem'; fields: { 'delta': { name: 'delta'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; } }; }; };
    'OrderStagedChangeRemoveShippingLine': { kind: 'OBJECT'; name: 'OrderStagedChangeRemoveShippingLine'; fields: { 'shippingLine': { name: 'shippingLine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingLine'; ofType: null; }; } }; }; };
    'OrderTransaction': { kind: 'OBJECT'; name: 'OrderTransaction'; fields: { 'accountNumber': { name: 'accountNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'amountV2': { name: 'amountV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'authorizationCode': { name: 'authorizationCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'authorizationExpiresAt': { name: 'authorizationExpiresAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'errorCode': { name: 'errorCode'; type: { kind: 'ENUM'; name: 'OrderTransactionErrorCode'; ofType: null; } }; 'fees': { name: 'fees'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionFee'; ofType: null; }; }; }; } }; 'formattedGateway': { name: 'formattedGateway'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gateway': { name: 'gateway'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderTransactionKind'; ofType: null; }; } }; 'manuallyCapturable': { name: 'manuallyCapturable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'maximumRefundable': { name: 'maximumRefundable'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'maximumRefundableV2': { name: 'maximumRefundableV2'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'multiCapturable': { name: 'multiCapturable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'parentTransaction': { name: 'parentTransaction'; type: { kind: 'OBJECT'; name: 'OrderTransaction'; ofType: null; } }; 'paymentDetails': { name: 'paymentDetails'; type: { kind: 'UNION'; name: 'PaymentDetails'; ofType: null; } }; 'paymentIcon': { name: 'paymentIcon'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'paymentId': { name: 'paymentId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'paymentMethod': { name: 'paymentMethod'; type: { kind: 'ENUM'; name: 'PaymentMethods'; ofType: null; } }; 'processedAt': { name: 'processedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'receiptJson': { name: 'receiptJson'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'settlementCurrency': { name: 'settlementCurrency'; type: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; } }; 'settlementCurrencyRate': { name: 'settlementCurrencyRate'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'shopifyPaymentsSet': { name: 'shopifyPaymentsSet'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsTransactionSet'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderTransactionStatus'; ofType: null; }; } }; 'test': { name: 'test'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'totalUnsettled': { name: 'totalUnsettled'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'totalUnsettledSet': { name: 'totalUnsettledSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'totalUnsettledV2': { name: 'totalUnsettledV2'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; }; };
    'OrderTransactionConnection': { kind: 'OBJECT'; name: 'OrderTransactionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderTransactionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderTransaction'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'OrderTransactionEdge': { kind: 'OBJECT'; name: 'OrderTransactionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderTransaction'; ofType: null; }; } }; }; };
    'OrderTransactionErrorCode': { name: 'OrderTransactionErrorCode'; enumValues: 'INCORRECT_NUMBER' | 'INVALID_NUMBER' | 'INVALID_EXPIRY_DATE' | 'INVALID_CVC' | 'EXPIRED_CARD' | 'INCORRECT_CVC' | 'INCORRECT_ZIP' | 'INCORRECT_ADDRESS' | 'INCORRECT_PIN' | 'CARD_DECLINED' | 'PROCESSING_ERROR' | 'CALL_ISSUER' | 'PICK_UP_CARD' | 'CONFIG_ERROR' | 'TEST_MODE_LIVE_CARD' | 'UNSUPPORTED_FEATURE' | 'GENERIC_ERROR' | 'INVALID_COUNTRY' | 'INVALID_AMOUNT' | 'PAYMENT_METHOD_UNAVAILABLE' | 'AMAZON_PAYMENTS_INVALID_PAYMENT_METHOD' | 'AMAZON_PAYMENTS_MAX_AMOUNT_CHARGED' | 'AMAZON_PAYMENTS_MAX_AMOUNT_REFUNDED' | 'AMAZON_PAYMENTS_MAX_AUTHORIZATIONS_CAPTURED' | 'AMAZON_PAYMENTS_MAX_REFUNDS_PROCESSED' | 'AMAZON_PAYMENTS_ORDER_REFERENCE_CANCELED' | 'AMAZON_PAYMENTS_STALE'; };
    'OrderTransactionInput': { kind: 'INPUT_OBJECT'; name: 'OrderTransactionInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; }; defaultValue: null }, { name: 'gateway'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderTransactionKind'; ofType: null; }; }; defaultValue: null }, { name: 'orderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'parentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'OrderTransactionKind': { name: 'OrderTransactionKind'; enumValues: 'SALE' | 'CAPTURE' | 'AUTHORIZATION' | 'VOID' | 'REFUND' | 'CHANGE' | 'EMV_AUTHORIZATION' | 'SUGGESTED_REFUND'; };
    'OrderTransactionStatus': { name: 'OrderTransactionStatus'; enumValues: 'SUCCESS' | 'FAILURE' | 'PENDING' | 'ERROR' | 'AWAITING_RESPONSE' | 'UNKNOWN'; };
    'OrderUpdatePayload': { kind: 'OBJECT'; name: 'OrderUpdatePayload'; fields: { 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasPreviousPage': { name: 'hasPreviousPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentCustomization': { kind: 'OBJECT'; name: 'PaymentCustomization'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'errorHistory': { name: 'errorHistory'; type: { kind: 'OBJECT'; name: 'FunctionsErrorHistory'; ofType: null; } }; 'functionId': { name: 'functionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'shopifyFunction': { name: 'shopifyFunction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyFunction'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentCustomizationActivationPayload': { kind: 'OBJECT'; name: 'PaymentCustomizationActivationPayload'; fields: { 'ids': { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentCustomizationError'; ofType: null; }; }; }; } }; }; };
    'PaymentCustomizationConnection': { kind: 'OBJECT'; name: 'PaymentCustomizationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentCustomizationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentCustomization'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PaymentCustomizationCreatePayload': { kind: 'OBJECT'; name: 'PaymentCustomizationCreatePayload'; fields: { 'paymentCustomization': { name: 'paymentCustomization'; type: { kind: 'OBJECT'; name: 'PaymentCustomization'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentCustomizationError'; ofType: null; }; }; }; } }; }; };
    'PaymentCustomizationDeletePayload': { kind: 'OBJECT'; name: 'PaymentCustomizationDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentCustomizationError'; ofType: null; }; }; }; } }; }; };
    'PaymentCustomizationEdge': { kind: 'OBJECT'; name: 'PaymentCustomizationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentCustomization'; ofType: null; }; } }; }; };
    'PaymentCustomizationError': { kind: 'OBJECT'; name: 'PaymentCustomizationError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PaymentCustomizationErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentCustomizationErrorCode': { name: 'PaymentCustomizationErrorCode'; enumValues: 'CUSTOM_APP_FUNCTION_NOT_ELIGIBLE' | 'FUNCTION_DOES_NOT_IMPLEMENT' | 'FUNCTION_NOT_FOUND' | 'FUNCTION_PENDING_DELETION' | 'INVALID' | 'PAYMENT_CUSTOMIZATION_NOT_FOUND' | 'PAYMENT_CUSTOMIZATION_FUNCTION_NOT_ELIGIBLE' | 'MAXIMUM_ACTIVE_PAYMENT_CUSTOMIZATIONS' | 'REQUIRED_INPUT_FIELD' | 'INVALID_METAFIELDS' | 'FUNCTION_ID_CANNOT_BE_CHANGED'; };
    'PaymentCustomizationInput': { kind: 'INPUT_OBJECT'; name: 'PaymentCustomizationInput'; isOneOf: false; inputFields: [{ name: 'functionId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'PaymentCustomizationUpdatePayload': { kind: 'OBJECT'; name: 'PaymentCustomizationUpdatePayload'; fields: { 'paymentCustomization': { name: 'paymentCustomization'; type: { kind: 'OBJECT'; name: 'PaymentCustomization'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentCustomizationError'; ofType: null; }; }; }; } }; }; };
    'PaymentDetails': { kind: 'UNION'; name: 'PaymentDetails'; fields: {}; possibleTypes: 'CardPaymentDetails' | 'ShopPayInstallmentsPaymentDetails'; };
    'PaymentInstrument': { kind: 'UNION'; name: 'PaymentInstrument'; fields: {}; possibleTypes: 'VaultCreditCard' | 'VaultPaypalBillingAgreement'; };
    'PaymentMandate': { kind: 'OBJECT'; name: 'PaymentMandate'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'paymentInstrument': { name: 'paymentInstrument'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PaymentInstrument'; ofType: null; }; } }; }; };
    'PaymentMethods': { name: 'PaymentMethods'; enumValues: 'VISA' | 'MASTERCARD' | 'DISCOVER' | 'AMERICAN_EXPRESS' | 'DINERS_CLUB' | 'JCB' | 'UNIONPAY' | 'ELO' | 'DANKORT' | 'MAESTRO' | 'FORBRUGSFORENINGEN' | 'PAYPAL' | 'BOGUS' | 'BITCOIN' | 'LITECOIN' | 'DOGECOIN' | 'INTERAC' | 'EFTPOS'; };
    'PaymentReminderSendPayload': { kind: 'OBJECT'; name: 'PaymentReminderSendPayload'; fields: { 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentReminderSendUserError'; ofType: null; }; }; }; } }; }; };
    'PaymentReminderSendUserError': { kind: 'OBJECT'; name: 'PaymentReminderSendUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PaymentReminderSendUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentReminderSendUserErrorCode': { name: 'PaymentReminderSendUserErrorCode'; enumValues: 'PAYMENT_REMINDER_SEND_UNSUCCESSFUL'; };
    'PaymentSchedule': { kind: 'OBJECT'; name: 'PaymentSchedule'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'dueAt': { name: 'dueAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'paymentTerms': { name: 'paymentTerms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentTerms'; ofType: null; }; } }; }; };
    'PaymentScheduleConnection': { kind: 'OBJECT'; name: 'PaymentScheduleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentScheduleEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentSchedule'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PaymentScheduleEdge': { kind: 'OBJECT'; name: 'PaymentScheduleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentSchedule'; ofType: null; }; } }; }; };
    'PaymentScheduleInput': { kind: 'INPUT_OBJECT'; name: 'PaymentScheduleInput'; isOneOf: false; inputFields: [{ name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'dueAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'PaymentSettings': { kind: 'OBJECT'; name: 'PaymentSettings'; fields: { 'supportedDigitalWallets': { name: 'supportedDigitalWallets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DigitalWallet'; ofType: null; }; }; }; } }; }; };
    'PaymentTerms': { kind: 'OBJECT'; name: 'PaymentTerms'; fields: { 'draftOrder': { name: 'draftOrder'; type: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; } }; 'dueInDays': { name: 'dueInDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'overdue': { name: 'overdue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'paymentSchedules': { name: 'paymentSchedules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentScheduleConnection'; ofType: null; }; } }; 'paymentTermsName': { name: 'paymentTermsName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'paymentTermsType': { name: 'paymentTermsType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentTermsType'; ofType: null; }; } }; 'translatedName': { name: 'translatedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentTermsCreateInput': { kind: 'INPUT_OBJECT'; name: 'PaymentTermsCreateInput'; isOneOf: false; inputFields: [{ name: 'paymentTermsTemplateId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'paymentSchedules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PaymentScheduleInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PaymentTermsCreatePayload': { kind: 'OBJECT'; name: 'PaymentTermsCreatePayload'; fields: { 'paymentTerms': { name: 'paymentTerms'; type: { kind: 'OBJECT'; name: 'PaymentTerms'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentTermsCreateUserError'; ofType: null; }; }; }; } }; }; };
    'PaymentTermsCreateUserError': { kind: 'OBJECT'; name: 'PaymentTermsCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PaymentTermsCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentTermsCreateUserErrorCode': { name: 'PaymentTermsCreateUserErrorCode'; enumValues: 'PAYMENT_TERMS_CREATION_UNSUCCESSFUL'; };
    'PaymentTermsDeleteInput': { kind: 'INPUT_OBJECT'; name: 'PaymentTermsDeleteInput'; isOneOf: false; inputFields: [{ name: 'paymentTermsId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'PaymentTermsDeletePayload': { kind: 'OBJECT'; name: 'PaymentTermsDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentTermsDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'PaymentTermsDeleteUserError': { kind: 'OBJECT'; name: 'PaymentTermsDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PaymentTermsDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentTermsDeleteUserErrorCode': { name: 'PaymentTermsDeleteUserErrorCode'; enumValues: 'PAYMENT_TERMS_DELETE_UNSUCCESSFUL'; };
    'PaymentTermsInput': { kind: 'INPUT_OBJECT'; name: 'PaymentTermsInput'; isOneOf: false; inputFields: [{ name: 'paymentTermsTemplateId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'paymentSchedules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PaymentScheduleInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PaymentTermsTemplate': { kind: 'OBJECT'; name: 'PaymentTermsTemplate'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'dueInDays': { name: 'dueInDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'paymentTermsType': { name: 'paymentTermsType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentTermsType'; ofType: null; }; } }; 'translatedName': { name: 'translatedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentTermsType': { name: 'PaymentTermsType'; enumValues: 'RECEIPT' | 'NET' | 'FIXED' | 'FULFILLMENT' | 'UNKNOWN'; };
    'PaymentTermsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PaymentTermsUpdateInput'; isOneOf: false; inputFields: [{ name: 'paymentTermsId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'paymentTermsAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PaymentTermsInput'; ofType: null; }; }; defaultValue: null }]; };
    'PaymentTermsUpdatePayload': { kind: 'OBJECT'; name: 'PaymentTermsUpdatePayload'; fields: { 'paymentTerms': { name: 'paymentTerms'; type: { kind: 'OBJECT'; name: 'PaymentTerms'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentTermsUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'PaymentTermsUpdateUserError': { kind: 'OBJECT'; name: 'PaymentTermsUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PaymentTermsUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentTermsUpdateUserErrorCode': { name: 'PaymentTermsUpdateUserErrorCode'; enumValues: 'PAYMENT_TERMS_UPDATE_UNSUCCESSFUL'; };
    'PayoutSortKeys': { name: 'PayoutSortKeys'; enumValues: 'ISSUED_AT' | 'STATUS' | 'CHARGE_GROSS' | 'REFUND_GROSS' | 'ADJUSTMENT_GROSS' | 'DUTIES_GROSS' | 'SHIPPING_LABEL_GROSS' | 'FEE_AMOUNT' | 'AMOUNT' | 'ID' | 'RELEVANCE'; };
    'PaypalExpressSubscriptionsGatewayStatus': { name: 'PaypalExpressSubscriptionsGatewayStatus'; enumValues: 'ENABLED' | 'DISABLED' | 'PENDING'; };
    'PreparedFulfillmentOrderLineItemsInput': { kind: 'INPUT_OBJECT'; name: 'PreparedFulfillmentOrderLineItemsInput'; isOneOf: false; inputFields: [{ name: 'fulfillmentOrderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'PriceCalculationType': { name: 'PriceCalculationType'; enumValues: 'COMPONENTS_SUM' | 'FIXED' | 'NONE'; };
    'PriceInput': { kind: 'INPUT_OBJECT'; name: 'PriceInput'; isOneOf: false; inputFields: [{ name: 'calculation'; type: { kind: 'ENUM'; name: 'PriceCalculationType'; ofType: null; }; defaultValue: null }, { name: 'price'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }]; };
    'PriceList': { kind: 'OBJECT'; name: 'PriceList'; fields: { 'catalog': { name: 'catalog'; type: { kind: 'INTERFACE'; name: 'Catalog'; ofType: null; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'fixedPricesCount': { name: 'fixedPricesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'parent': { name: 'parent'; type: { kind: 'OBJECT'; name: 'PriceListParent'; ofType: null; } }; 'prices': { name: 'prices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListPriceConnection'; ofType: null; }; } }; 'quantityRules': { name: 'quantityRules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityRuleConnection'; ofType: null; }; } }; }; };
    'PriceListAdjustment': { kind: 'OBJECT'; name: 'PriceListAdjustment'; fields: { 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceListAdjustmentType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'PriceListAdjustmentInput': { kind: 'INPUT_OBJECT'; name: 'PriceListAdjustmentInput'; isOneOf: false; inputFields: [{ name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceListAdjustmentType'; ofType: null; }; }; defaultValue: null }]; };
    'PriceListAdjustmentSettings': { kind: 'OBJECT'; name: 'PriceListAdjustmentSettings'; fields: { 'compareAtMode': { name: 'compareAtMode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceListCompareAtMode'; ofType: null; }; } }; }; };
    'PriceListAdjustmentSettingsInput': { kind: 'INPUT_OBJECT'; name: 'PriceListAdjustmentSettingsInput'; isOneOf: false; inputFields: [{ name: 'compareAtMode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceListCompareAtMode'; ofType: null; }; }; defaultValue: "ADJUSTED" }]; };
    'PriceListAdjustmentType': { name: 'PriceListAdjustmentType'; enumValues: 'PERCENTAGE_DECREASE' | 'PERCENTAGE_INCREASE'; };
    'PriceListCompareAtMode': { name: 'PriceListCompareAtMode'; enumValues: 'ADJUSTED' | 'NULLIFY'; };
    'PriceListConnection': { kind: 'OBJECT'; name: 'PriceListConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PriceListCreateInput': { kind: 'INPUT_OBJECT'; name: 'PriceListCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; }; defaultValue: null }, { name: 'parent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PriceListParentCreateInput'; ofType: null; }; }; defaultValue: null }, { name: 'catalogId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'PriceListCreatePayload': { kind: 'OBJECT'; name: 'PriceListCreatePayload'; fields: { 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListUserError'; ofType: null; }; }; }; } }; }; };
    'PriceListDeletePayload': { kind: 'OBJECT'; name: 'PriceListDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListUserError'; ofType: null; }; }; }; } }; }; };
    'PriceListEdge': { kind: 'OBJECT'; name: 'PriceListEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; }; } }; }; };
    'PriceListFixedPricesAddPayload': { kind: 'OBJECT'; name: 'PriceListFixedPricesAddPayload'; fields: { 'prices': { name: 'prices'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListPrice'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListPriceUserError'; ofType: null; }; }; }; } }; }; };
    'PriceListFixedPricesByProductBulkUpdateUserError': { kind: 'OBJECT'; name: 'PriceListFixedPricesByProductBulkUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PriceListFixedPricesByProductBulkUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PriceListFixedPricesByProductBulkUpdateUserErrorCode': { name: 'PriceListFixedPricesByProductBulkUpdateUserErrorCode'; enumValues: 'NO_UPDATE_OPERATIONS_SPECIFIED' | 'PRICES_TO_ADD_CURRENCY_MISMATCH' | 'PRICE_LIST_DOES_NOT_EXIST' | 'DUPLICATE_ID_IN_INPUT' | 'ID_MUST_BE_MUTUALLY_EXCLUSIVE' | 'PRODUCT_DOES_NOT_EXIST' | 'PRICE_LIMIT_EXCEEDED'; };
    'PriceListFixedPricesByProductUpdatePayload': { kind: 'OBJECT'; name: 'PriceListFixedPricesByProductUpdatePayload'; fields: { 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'pricesToAddProducts': { name: 'pricesToAddProducts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; }; } }; 'pricesToDeleteProducts': { name: 'pricesToDeleteProducts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListFixedPricesByProductBulkUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'PriceListFixedPricesDeletePayload': { kind: 'OBJECT'; name: 'PriceListFixedPricesDeletePayload'; fields: { 'deletedFixedPriceVariantIds': { name: 'deletedFixedPriceVariantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListPriceUserError'; ofType: null; }; }; }; } }; }; };
    'PriceListFixedPricesUpdatePayload': { kind: 'OBJECT'; name: 'PriceListFixedPricesUpdatePayload'; fields: { 'deletedFixedPriceVariantIds': { name: 'deletedFixedPriceVariantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'pricesAdded': { name: 'pricesAdded'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListPrice'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListPriceUserError'; ofType: null; }; }; }; } }; }; };
    'PriceListParent': { kind: 'OBJECT'; name: 'PriceListParent'; fields: { 'adjustment': { name: 'adjustment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListAdjustment'; ofType: null; }; } }; 'settings': { name: 'settings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListAdjustmentSettings'; ofType: null; }; } }; }; };
    'PriceListParentCreateInput': { kind: 'INPUT_OBJECT'; name: 'PriceListParentCreateInput'; isOneOf: false; inputFields: [{ name: 'adjustment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PriceListAdjustmentInput'; ofType: null; }; }; defaultValue: null }, { name: 'settings'; type: { kind: 'INPUT_OBJECT'; name: 'PriceListAdjustmentSettingsInput'; ofType: null; }; defaultValue: null }]; };
    'PriceListParentUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PriceListParentUpdateInput'; isOneOf: false; inputFields: [{ name: 'adjustment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PriceListAdjustmentInput'; ofType: null; }; }; defaultValue: null }, { name: 'settings'; type: { kind: 'INPUT_OBJECT'; name: 'PriceListAdjustmentSettingsInput'; ofType: null; }; defaultValue: null }]; };
    'PriceListPrice': { kind: 'OBJECT'; name: 'PriceListPrice'; fields: { 'compareAtPrice': { name: 'compareAtPrice'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'originType': { name: 'originType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceListPriceOriginType'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'quantityPriceBreaks': { name: 'quantityPriceBreaks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityPriceBreakConnection'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'PriceListPriceConnection': { kind: 'OBJECT'; name: 'PriceListPriceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListPriceEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListPrice'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PriceListPriceEdge': { kind: 'OBJECT'; name: 'PriceListPriceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListPrice'; ofType: null; }; } }; }; };
    'PriceListPriceInput': { kind: 'INPUT_OBJECT'; name: 'PriceListPriceInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }, { name: 'compareAtPrice'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }]; };
    'PriceListPriceOriginType': { name: 'PriceListPriceOriginType'; enumValues: 'FIXED' | 'RELATIVE'; };
    'PriceListPriceUserError': { kind: 'OBJECT'; name: 'PriceListPriceUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PriceListPriceUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PriceListPriceUserErrorCode': { name: 'PriceListPriceUserErrorCode'; enumValues: 'BLANK' | 'PRICE_LIST_NOT_FOUND' | 'PRICE_LIST_CURRENCY_MISMATCH' | 'VARIANT_NOT_FOUND' | 'PRICE_NOT_FIXED'; };
    'PriceListProductPriceInput': { kind: 'INPUT_OBJECT'; name: 'PriceListProductPriceInput'; isOneOf: false; inputFields: [{ name: 'productId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }]; };
    'PriceListSortKeys': { name: 'PriceListSortKeys'; enumValues: 'NAME' | 'ID' | 'RELEVANCE'; };
    'PriceListUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PriceListUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'currency'; type: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; defaultValue: null }, { name: 'parent'; type: { kind: 'INPUT_OBJECT'; name: 'PriceListParentUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'catalogId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'PriceListUpdatePayload': { kind: 'OBJECT'; name: 'PriceListUpdatePayload'; fields: { 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListUserError'; ofType: null; }; }; }; } }; }; };
    'PriceListUserError': { kind: 'OBJECT'; name: 'PriceListUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PriceListUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PriceListUserErrorCode': { name: 'PriceListUserErrorCode'; enumValues: 'TAKEN' | 'BLANK' | 'INCLUSION' | 'TOO_LONG' | 'PRICE_LIST_NOT_FOUND' | 'PRICE_LIST_LOCKED' | 'CONTEXT_RULE_LIMIT_REACHED' | 'CONTEXT_RULE_COUNTRIES_LIMIT' | 'CURRENCY_COUNTRY_MISMATCH' | 'COUNTRY_CURRENCY_MISMATCH' | 'CURRENCY_MARKET_MISMATCH' | 'MARKET_CURRENCY_MISMATCH' | 'INVALID_ADJUSTMENT_VALUE' | 'INVALID_ADJUSTMENT_MIN_VALUE' | 'INVALID_ADJUSTMENT_MAX_VALUE' | 'CONTEXT_RULE_COUNTRY_TAKEN' | 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES' | 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_PRICE_BREAKS' | 'CONTEXT_RULE_LIMIT_ONE_OPTION' | 'CONTEXT_RULE_MARKET_NOT_FOUND' | 'CONTEXT_RULE_MARKET_TAKEN' | 'CURRENCY_NOT_SUPPORTED' | 'PRICE_LIST_NOT_ALLOWED_FOR_PRIMARY_MARKET' | 'CATALOG_ASSIGNMENT_NOT_ALLOWED' | 'CATALOG_DOES_NOT_EXIST' | 'CATALOG_CANNOT_CHANGE_CONTEXT_TYPE' | 'CATALOG_MARKET_AND_PRICE_LIST_CURRENCY_MISMATCH' | 'CATALOG_TAKEN' | 'COUNTRY_PRICE_LIST_ASSIGNMENT' | 'APP_CATALOG_PRICE_LIST_ASSIGNMENT' | 'GENERIC_ERROR'; };
    'PriceRule': { kind: 'OBJECT'; name: 'PriceRule'; fields: { 'allocationLimit': { name: 'allocationLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceRuleAllocationMethod'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'combinesWith': { name: 'combinesWith'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCombinesWith'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customerSelection': { name: 'customerSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleCustomerSelection'; ofType: null; }; } }; 'discountClass': { name: 'discountClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountClass'; ofType: null; }; } }; 'discountCodes': { name: 'discountCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleDiscountCodeConnection'; ofType: null; }; } }; 'discountCodesCount': { name: 'discountCodesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'entitlementToPrerequisiteQuantityRatio': { name: 'entitlementToPrerequisiteQuantityRatio'; type: { kind: 'OBJECT'; name: 'PriceRuleEntitlementToPrerequisiteQuantityRatio'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; }; } }; 'features': { name: 'features'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceRuleFeature'; ofType: null; }; }; }; } }; 'hasTimelineComment': { name: 'hasTimelineComment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'itemEntitlements': { name: 'itemEntitlements'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleItemEntitlements'; ofType: null; }; } }; 'itemPrerequisites': { name: 'itemPrerequisites'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleLineItemPrerequisites'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'oncePerCustomer': { name: 'oncePerCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'prerequisiteQuantityRange': { name: 'prerequisiteQuantityRange'; type: { kind: 'OBJECT'; name: 'PriceRuleQuantityRange'; ofType: null; } }; 'prerequisiteShippingPriceRange': { name: 'prerequisiteShippingPriceRange'; type: { kind: 'OBJECT'; name: 'PriceRuleMoneyRange'; ofType: null; } }; 'prerequisiteSubtotalRange': { name: 'prerequisiteSubtotalRange'; type: { kind: 'OBJECT'; name: 'PriceRuleMoneyRange'; ofType: null; } }; 'prerequisiteToEntitlementQuantityRatio': { name: 'prerequisiteToEntitlementQuantityRatio'; type: { kind: 'OBJECT'; name: 'PriceRulePrerequisiteToEntitlementQuantityRatio'; ofType: null; } }; 'shareableUrls': { name: 'shareableUrls'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleShareableUrl'; ofType: null; }; }; }; } }; 'shippingEntitlements': { name: 'shippingEntitlements'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleShippingLineEntitlements'; ofType: null; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceRuleStatus'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'target': { name: 'target'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceRuleTarget'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalSales': { name: 'totalSales'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'traits': { name: 'traits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceRuleTrait'; ofType: null; }; }; }; } }; 'usageCount': { name: 'usageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'usageLimit': { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'validityPeriod': { name: 'validityPeriod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleValidityPeriod'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PriceRuleValue'; ofType: null; }; } }; 'valueV2': { name: 'valueV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'PriceRuleActivatePayload': { kind: 'OBJECT'; name: 'PriceRuleActivatePayload'; fields: { 'priceRule': { name: 'priceRule'; type: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; } }; 'priceRuleUserErrors': { name: 'priceRuleUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleUserError'; ofType: null; }; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PriceRuleAllocationMethod': { name: 'PriceRuleAllocationMethod'; enumValues: 'EACH' | 'ACROSS'; };
    'PriceRuleConnection': { kind: 'OBJECT'; name: 'PriceRuleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PriceRuleCreatePayload': { kind: 'OBJECT'; name: 'PriceRuleCreatePayload'; fields: { 'priceRule': { name: 'priceRule'; type: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; } }; 'priceRuleDiscountCode': { name: 'priceRuleDiscountCode'; type: { kind: 'OBJECT'; name: 'PriceRuleDiscountCode'; ofType: null; } }; 'priceRuleUserErrors': { name: 'priceRuleUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleUserError'; ofType: null; }; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PriceRuleCustomerSelection': { kind: 'OBJECT'; name: 'PriceRuleCustomerSelection'; fields: { 'customers': { name: 'customers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerConnection'; ofType: null; }; } }; 'forAllCustomers': { name: 'forAllCustomers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'segments': { name: 'segments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Segment'; ofType: null; }; }; }; } }; }; };
    'PriceRuleCustomerSelectionInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleCustomerSelectionInput'; isOneOf: false; inputFields: [{ name: 'forAllCustomers'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'segmentIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'customerIdsToAdd'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'customerIdsToRemove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'PriceRuleDeactivatePayload': { kind: 'OBJECT'; name: 'PriceRuleDeactivatePayload'; fields: { 'priceRule': { name: 'priceRule'; type: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; } }; 'priceRuleUserErrors': { name: 'priceRuleUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleUserError'; ofType: null; }; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PriceRuleDeletePayload': { kind: 'OBJECT'; name: 'PriceRuleDeletePayload'; fields: { 'deletedPriceRuleId': { name: 'deletedPriceRuleId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'priceRuleUserErrors': { name: 'priceRuleUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleUserError'; ofType: null; }; }; }; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PriceRuleDiscountCode': { kind: 'OBJECT'; name: 'PriceRuleDiscountCode'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'usageCount': { name: 'usageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'PriceRuleDiscountCodeConnection': { kind: 'OBJECT'; name: 'PriceRuleDiscountCodeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleDiscountCodeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleDiscountCode'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PriceRuleDiscountCodeCreatePayload': { kind: 'OBJECT'; name: 'PriceRuleDiscountCodeCreatePayload'; fields: { 'priceRule': { name: 'priceRule'; type: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; } }; 'priceRuleDiscountCode': { name: 'priceRuleDiscountCode'; type: { kind: 'OBJECT'; name: 'PriceRuleDiscountCode'; ofType: null; } }; 'priceRuleUserErrors': { name: 'priceRuleUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleUserError'; ofType: null; }; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PriceRuleDiscountCodeEdge': { kind: 'OBJECT'; name: 'PriceRuleDiscountCodeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleDiscountCode'; ofType: null; }; } }; }; };
    'PriceRuleDiscountCodeInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleDiscountCodeInput'; isOneOf: false; inputFields: [{ name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'PriceRuleDiscountCodeUpdatePayload': { kind: 'OBJECT'; name: 'PriceRuleDiscountCodeUpdatePayload'; fields: { 'priceRule': { name: 'priceRule'; type: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; } }; 'priceRuleDiscountCode': { name: 'priceRuleDiscountCode'; type: { kind: 'OBJECT'; name: 'PriceRuleDiscountCode'; ofType: null; } }; 'priceRuleUserErrors': { name: 'priceRuleUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleUserError'; ofType: null; }; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PriceRuleEdge': { kind: 'OBJECT'; name: 'PriceRuleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; }; } }; }; };
    'PriceRuleEntitlementToPrerequisiteQuantityRatio': { kind: 'OBJECT'; name: 'PriceRuleEntitlementToPrerequisiteQuantityRatio'; fields: { 'entitlementQuantity': { name: 'entitlementQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'prerequisiteQuantity': { name: 'prerequisiteQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'PriceRuleEntitlementToPrerequisiteQuantityRatioInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleEntitlementToPrerequisiteQuantityRatioInput'; isOneOf: false; inputFields: [{ name: 'entitlementQuantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'prerequisiteQuantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'PriceRuleErrorCode': { name: 'PriceRuleErrorCode'; enumValues: 'BLANK' | 'EQUAL_TO' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'INVALID' | 'LESS_THAN' | 'LESS_THAN_OR_EQUAL_TO' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'INTERNAL_ERROR' | 'TOO_MANY_ARGUMENTS' | 'MISSING_ARGUMENT' | 'EXCEEDED_MAX' | 'PRICE_RULE_ALLOCATION_LIMIT_ON_NON_BOGO' | 'PRICE_RULE_ALLOCATION_LIMIT_IS_ZERO' | 'PRICE_RULE_EXCEEDED_MAX_DISCOUNT_CODE' | 'SHOP_EXCEEDED_MAX_PRICE_RULES' | 'END_DATE_BEFORE_START_DATE' | 'PRICE_RULE_PERCENTAGE_VALUE_OUTSIDE_RANGE' | 'PREREQUISITE_SUBTOTAL_AND_QUANTITY_RANGE_BOTH_PRESENT' | 'ALLOCATION_METHOD_MUST_BE_ACROSS_FOR_GIVEN_TARGET_SELECTION' | 'APPLIES_ON_NOTHING' | 'MULTIPLE_RECURRING_CYCLE_LIMIT_FOR_NON_SUBSCRIPTION_ITEMS' | 'BOGO_INVALID_TARGET_SELECTION' | 'BOGO_INVALID_TARGET_TYPE' | 'BOGO_INVALID_VALUE_TYPE' | 'DISCOUNT_CODE_DUPLICATE' | 'BOTH_CUSTOMER_AND_SAVED_SEARCH_PREREQUISITES_SELECTED' | 'CUSTOMER_SAVED_SEARCH_DUPLICATE' | 'CUSTOMER_SAVED_SEARCH_EXCEEDED_MAX' | 'CUSTOMER_SAVED_SEARCH_INVALID' | 'CUSTOMER_PREREQUISITES_EXCEEDED_MAX' | 'CUSTOMER_PREREQUISITES_INVALID_SELECTION' | 'CUSTOMER_PREREQUISITE_DUPLICATE' | 'CUSTOMER_PREREQUISITES_MISSING' | 'BOTH_CUSTOMER_AND_SEGMENT_PREREQUISITES_SELECTED' | 'BOTH_SAVED_SEARCH_AND_SEGMENT_PREREQUISITES_SELECTED' | 'CUSTOMER_SEGMENT_EXCEEDED_MAX' | 'CUSTOMER_SEGMENT_INVALID' | 'CUSTOMER_SEGMENT_PREREQUISITE_DUPLICATE' | 'CANNOT_PREREQUISITE_COLLECTION_WITH_PRODUCT_OR_VARIANTS' | 'ITEM_PREREQUISITES_DUPLICATE_COLLECTION' | 'ITEM_PREREQUISITES_DUPLICATE_PRODUCT' | 'ITEM_PREREQUISITES_DUPLICATE_VARIANT' | 'ITEM_PREREQUISITES_EXCEEDED_MAX' | 'ITEM_PREREQUISITES_INVALID_COLLECTION' | 'ITEM_PREREQUISITES_INVALID_TYPE' | 'ITEM_PREREQUISITES_INVALID_PRODUCT' | 'ITEM_PREREQUISITES_INVALID_VARIANT' | 'ITEM_PREREQUISITES_MUST_BE_EMPTY' | 'ITEM_PREREQUISITES_MISSING' | 'CANNOT_ENTITLE_COLLECTIONS_WITH_PRODUCTS_OR_VARIANTS' | 'ITEM_ENTITLEMENTS_DUPLICATE_COLLECTION' | 'ITEM_ENTITLEMENTS_DUPLICATE_PRODUCT' | 'ITEM_ENTITLEMENTS_DUPLICATE_VARIANT' | 'ITEM_ENTITLEMENTS_EXCEEDED_MAX_COLLECTION' | 'ITEM_ENTITLEMENTS_EXCEEDED_MAX_PRODUCT' | 'ITEM_ENTITLEMENTS_EXCEEDED_MAX_VARIANT' | 'ITEM_ENTITLEMENT_INVALID_TYPE' | 'ITEM_ENTITLEMENTS_INVALID_COLLECTION' | 'ITEM_ENTITLEMENTS_INVALID_PRODUCT' | 'ITEM_ENTITLEMENTS_INVALID_VARIANT' | 'ITEM_ENTITLEMENTS_INVALID_TARGET_TYPE_OR_SELECTION' | 'ITEM_ENTITLEMENTS_MISSING' | 'VARIANT_ALREADY_ENTITLED_THROUGH_PRODUCT' | 'SHIPPING_ENTITLEMENTS_DUPLICATE_COUNTRY' | 'SHIPPING_ENTITLEMENTS_EXCEEDED_MAX' | 'SHIPPING_ENTITLEMENTS_INVALID_COUNTRY' | 'SHIPPING_ENTITLEMENTS_INVALID_TARGET_TYPE_OR_SELECTION' | 'SHIPPING_ENTITLEMENTS_MISSING' | 'SHIPPING_ENTITLEMENTS_UNSUPPORTED_DESTINATION_TYPE' | 'INVALID_TARGET_TYPE_PREREQUISITE_SHIPPING_PRICE_RANGE' | 'INVALID_COMBINES_WITH_FOR_DISCOUNT_CLASS' | 'INVALID_DISCOUNT_CLASS_FOR_PRICE_RULE'; };
    'PriceRuleFeature': { name: 'PriceRuleFeature'; enumValues: 'BUY_ONE_GET_ONE' | 'BUY_ONE_GET_ONE_WITH_ALLOCATION_LIMIT' | 'BULK' | 'SPECIFIC_CUSTOMERS' | 'QUANTITY_DISCOUNTS'; };
    'PriceRuleFixedAmountValue': { kind: 'OBJECT'; name: 'PriceRuleFixedAmountValue'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; }; };
    'PriceRuleInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleInput'; isOneOf: false; inputFields: [{ name: 'combinesWith'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountCombinesWithInput'; ofType: null; }; defaultValue: null }, { name: 'validityPeriod'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleValidityPeriodInput'; ofType: null; }; defaultValue: null }, { name: 'oncePerCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'customerSelection'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleCustomerSelectionInput'; ofType: null; }; defaultValue: null }, { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'allocationLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'allocationMethod'; type: { kind: 'ENUM'; name: 'PriceRuleAllocationMethod'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleValueInput'; ofType: null; }; defaultValue: null }, { name: 'target'; type: { kind: 'ENUM'; name: 'PriceRuleTarget'; ofType: null; }; defaultValue: null }, { name: 'prerequisiteSubtotalRange'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleMoneyRangeInput'; ofType: null; }; defaultValue: null }, { name: 'prerequisiteQuantityRange'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleQuantityRangeInput'; ofType: null; }; defaultValue: null }, { name: 'prerequisiteShippingPriceRange'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleMoneyRangeInput'; ofType: null; }; defaultValue: null }, { name: 'itemEntitlements'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleItemEntitlementsInput'; ofType: null; }; defaultValue: null }, { name: 'itemPrerequisites'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleItemPrerequisitesInput'; ofType: null; }; defaultValue: null }, { name: 'shippingEntitlements'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleShippingEntitlementsInput'; ofType: null; }; defaultValue: null }, { name: 'entitlementToPrerequisiteQuantityRatio'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRuleEntitlementToPrerequisiteQuantityRatioInput'; ofType: null; }; defaultValue: null }, { name: 'prerequisiteToEntitlementQuantityRatio'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRulePrerequisiteToEntitlementQuantityRatioInput'; ofType: null; }; defaultValue: null }]; };
    'PriceRuleItemEntitlements': { kind: 'OBJECT'; name: 'PriceRuleItemEntitlements'; fields: { 'collections': { name: 'collections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionConnection'; ofType: null; }; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantConnection'; ofType: null; }; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductConnection'; ofType: null; }; } }; 'targetAllLineItems': { name: 'targetAllLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PriceRuleItemEntitlementsInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleItemEntitlementsInput'; isOneOf: false; inputFields: [{ name: 'targetAllLineItems'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'productIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'productVariantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'collectionIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'PriceRuleItemPrerequisitesInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleItemPrerequisitesInput'; isOneOf: false; inputFields: [{ name: 'productIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'productVariantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'collectionIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'PriceRuleLineItemPrerequisites': { kind: 'OBJECT'; name: 'PriceRuleLineItemPrerequisites'; fields: { 'collections': { name: 'collections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionConnection'; ofType: null; }; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantConnection'; ofType: null; }; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductConnection'; ofType: null; }; } }; }; };
    'PriceRuleMoneyRange': { kind: 'OBJECT'; name: 'PriceRuleMoneyRange'; fields: { 'greaterThan': { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'greaterThanOrEqualTo': { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'lessThan': { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'lessThanOrEqualTo': { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; }; };
    'PriceRuleMoneyRangeInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleMoneyRangeInput'; isOneOf: false; inputFields: [{ name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }]; };
    'PriceRulePercentValue': { kind: 'OBJECT'; name: 'PriceRulePercentValue'; fields: { 'percentage': { name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'PriceRulePrerequisiteToEntitlementQuantityRatio': { kind: 'OBJECT'; name: 'PriceRulePrerequisiteToEntitlementQuantityRatio'; fields: { 'entitlementQuantity': { name: 'entitlementQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'prerequisiteQuantity': { name: 'prerequisiteQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'PriceRulePrerequisiteToEntitlementQuantityRatioInput': { kind: 'INPUT_OBJECT'; name: 'PriceRulePrerequisiteToEntitlementQuantityRatioInput'; isOneOf: false; inputFields: [{ name: 'entitlementQuantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'prerequisiteQuantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'PriceRuleQuantityRange': { kind: 'OBJECT'; name: 'PriceRuleQuantityRange'; fields: { 'greaterThan': { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'greaterThanOrEqualTo': { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'lessThan': { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'lessThanOrEqualTo': { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PriceRuleQuantityRangeInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleQuantityRangeInput'; isOneOf: false; inputFields: [{ name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'PriceRuleShareableUrl': { kind: 'OBJECT'; name: 'PriceRuleShareableUrl'; fields: { 'targetItemImage': { name: 'targetItemImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PriceRuleShareableUrlTargetType'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'PriceRuleShareableUrlTargetType': { name: 'PriceRuleShareableUrlTargetType'; enumValues: 'HOME' | 'PRODUCT' | 'COLLECTION'; };
    'PriceRuleShippingEntitlementsInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleShippingEntitlementsInput'; isOneOf: false; inputFields: [{ name: 'targetAllShippingLines'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'countryCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; defaultValue: null }, { name: 'includeRestOfWorld'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'PriceRuleShippingLineEntitlements': { kind: 'OBJECT'; name: 'PriceRuleShippingLineEntitlements'; fields: { 'countryCodes': { name: 'countryCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; } }; 'includeRestOfWorld': { name: 'includeRestOfWorld'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'targetAllShippingLines': { name: 'targetAllShippingLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PriceRuleSortKeys': { name: 'PriceRuleSortKeys'; enumValues: 'STARTS_AT' | 'ENDS_AT' | 'TITLE' | 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'; };
    'PriceRuleStatus': { name: 'PriceRuleStatus'; enumValues: 'ACTIVE' | 'EXPIRED' | 'SCHEDULED'; };
    'PriceRuleTarget': { name: 'PriceRuleTarget'; enumValues: 'LINE_ITEM' | 'SHIPPING_LINE'; };
    'PriceRuleTrait': { name: 'PriceRuleTrait'; enumValues: 'BUY_ONE_GET_ONE' | 'BUY_ONE_GET_ONE_WITH_ALLOCATION_LIMIT' | 'BULK' | 'SPECIFIC_CUSTOMERS' | 'QUANTITY_DISCOUNTS'; };
    'PriceRuleUpdatePayload': { kind: 'OBJECT'; name: 'PriceRuleUpdatePayload'; fields: { 'priceRule': { name: 'priceRule'; type: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; } }; 'priceRuleDiscountCode': { name: 'priceRuleDiscountCode'; type: { kind: 'OBJECT'; name: 'PriceRuleDiscountCode'; ofType: null; } }; 'priceRuleUserErrors': { name: 'priceRuleUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleUserError'; ofType: null; }; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PriceRuleUserError': { kind: 'OBJECT'; name: 'PriceRuleUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PriceRuleErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PriceRuleValidityPeriod': { kind: 'OBJECT'; name: 'PriceRuleValidityPeriod'; fields: { 'end': { name: 'end'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'start': { name: 'start'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'PriceRuleValidityPeriodInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleValidityPeriodInput'; isOneOf: false; inputFields: [{ name: 'start'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'end'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'PriceRuleValue': { kind: 'UNION'; name: 'PriceRuleValue'; fields: {}; possibleTypes: 'PriceRuleFixedAmountValue' | 'PriceRulePercentValue'; };
    'PriceRuleValueInput': { kind: 'INPUT_OBJECT'; name: 'PriceRuleValueInput'; isOneOf: false; inputFields: [{ name: 'percentageValue'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'fixedAmountValue'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }]; };
    'PricingPercentageValue': { kind: 'OBJECT'; name: 'PricingPercentageValue'; fields: { 'percentage': { name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'PricingValue': { kind: 'UNION'; name: 'PricingValue'; fields: {}; possibleTypes: 'MoneyV2' | 'PricingPercentageValue'; };
    'PrivateMetafield': { kind: 'OBJECT'; name: 'PrivateMetafield'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'valueType': { name: 'valueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PrivateMetafieldValueType'; ofType: null; }; } }; }; };
    'PrivateMetafieldConnection': { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PrivateMetafieldDeleteInput': { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldDeleteInput'; isOneOf: false; inputFields: [{ name: 'owner'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'PrivateMetafieldDeletePayload': { kind: 'OBJECT'; name: 'PrivateMetafieldDeletePayload'; fields: { 'deletedPrivateMetafieldId': { name: 'deletedPrivateMetafieldId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PrivateMetafieldEdge': { kind: 'OBJECT'; name: 'PrivateMetafieldEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; }; } }; }; };
    'PrivateMetafieldInput': { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldInput'; isOneOf: false; inputFields: [{ name: 'owner'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'valueInput'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldValueInput'; ofType: null; }; }; defaultValue: null }]; };
    'PrivateMetafieldUpsertPayload': { kind: 'OBJECT'; name: 'PrivateMetafieldUpsertPayload'; fields: { 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PrivateMetafieldValueInput': { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldValueInput'; isOneOf: false; inputFields: [{ name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'valueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PrivateMetafieldValueType'; ofType: null; }; }; defaultValue: null }]; };
    'PrivateMetafieldValueType': { name: 'PrivateMetafieldValueType'; enumValues: 'STRING' | 'INTEGER' | 'JSON_STRING'; };
    'Product': { kind: 'OBJECT'; name: 'Product'; fields: { 'availablePublicationsCount': { name: 'availablePublicationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'bodyHtml': { name: 'bodyHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bundleComponents': { name: 'bundleComponents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBundleComponentConnection'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'TaxonomyCategory'; ofType: null; } }; 'collections': { name: 'collections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionConnection'; ofType: null; }; } }; 'combinedListing': { name: 'combinedListing'; type: { kind: 'OBJECT'; name: 'CombinedListing'; ofType: null; } }; 'combinedListingRole': { name: 'combinedListingRole'; type: { kind: 'ENUM'; name: 'CombinedListingsRole'; ofType: null; } }; 'compareAtPriceRange': { name: 'compareAtPriceRange'; type: { kind: 'OBJECT'; name: 'ProductCompareAtPriceRange'; ofType: null; } }; 'contextualPricing': { name: 'contextualPricing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductContextualPricing'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customProductType': { name: 'customProductType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'defaultCursor': { name: 'defaultCursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'HTML'; ofType: null; }; } }; 'descriptionPlainSummary': { name: 'descriptionPlainSummary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'featuredImage': { name: 'featuredImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'featuredMedia': { name: 'featuredMedia'; type: { kind: 'INTERFACE'; name: 'Media'; ofType: null; } }; 'feedback': { name: 'feedback'; type: { kind: 'OBJECT'; name: 'ResourceFeedback'; ofType: null; } }; 'giftCardTemplateSuffix': { name: 'giftCardTemplateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'hasOnlyDefaultVariant': { name: 'hasOnlyDefaultVariant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasOutOfStockVariants': { name: 'hasOutOfStockVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasVariantsThatRequiresComponents': { name: 'hasVariantsThatRequiresComponents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'images': { name: 'images'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ImageConnection'; ofType: null; }; } }; 'inCollection': { name: 'inCollection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isGiftCard': { name: 'isGiftCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'media': { name: 'media'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaConnection'; ofType: null; }; } }; 'mediaCount': { name: 'mediaCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'onlineStorePreviewUrl': { name: 'onlineStorePreviewUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'onlineStoreUrl': { name: 'onlineStoreUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'options': { name: 'options'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductOption'; ofType: null; }; }; }; } }; 'priceRange': { name: 'priceRange'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPriceRange'; ofType: null; }; } }; 'priceRangeV2': { name: 'priceRangeV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPriceRangeV2'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'productCategory': { name: 'productCategory'; type: { kind: 'OBJECT'; name: 'ProductCategory'; ofType: null; } }; 'productPublications': { name: 'productPublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPublicationConnection'; ofType: null; }; } }; 'productType': { name: 'productType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'publicationCount': { name: 'publicationCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'publications': { name: 'publications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPublicationConnection'; ofType: null; }; } }; 'publishedAt': { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'publishedInContext': { name: 'publishedInContext'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnChannel': { name: 'publishedOnChannel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnCurrentChannel': { name: 'publishedOnCurrentChannel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnCurrentPublication': { name: 'publishedOnCurrentPublication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnPublication': { name: 'publishedOnPublication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'requiresSellingPlan': { name: 'requiresSellingPlan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resourcePublicationOnCurrentPublication': { name: 'resourcePublicationOnCurrentPublication'; type: { kind: 'OBJECT'; name: 'ResourcePublicationV2'; ofType: null; } }; 'resourcePublications': { name: 'resourcePublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationConnection'; ofType: null; }; } }; 'resourcePublicationsCount': { name: 'resourcePublicationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'resourcePublicationsV2': { name: 'resourcePublicationsV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationV2Connection'; ofType: null; }; } }; 'sellingPlanGroupCount': { name: 'sellingPlanGroupCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'sellingPlanGroups': { name: 'sellingPlanGroups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupConnection'; ofType: null; }; } }; 'sellingPlanGroupsCount': { name: 'sellingPlanGroupsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'seo': { name: 'seo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SEO'; ofType: null; }; } }; 'standardizedProductType': { name: 'standardizedProductType'; type: { kind: 'OBJECT'; name: 'StandardizedProductType'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductStatus'; ofType: null; }; } }; 'storefrontId': { name: 'storefrontId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'StorefrontID'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'templateSuffix': { name: 'templateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalInventory': { name: 'totalInventory'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalVariants': { name: 'totalVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'tracksInventory': { name: 'tracksInventory'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; 'unpublishedChannels': { name: 'unpublishedChannels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelConnection'; ofType: null; }; } }; 'unpublishedPublications': { name: 'unpublishedPublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicationConnection'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'variants': { name: 'variants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantConnection'; ofType: null; }; } }; 'variantsCount': { name: 'variantsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'vendor': { name: 'vendor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductAppendImagesInput': { kind: 'INPUT_OBJECT'; name: 'ProductAppendImagesInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'images'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ImageInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ProductAppendImagesPayload': { kind: 'OBJECT'; name: 'ProductAppendImagesPayload'; fields: { 'newImages': { name: 'newImages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductBundleComponent': { kind: 'OBJECT'; name: 'ProductBundleComponent'; fields: { 'componentProduct': { name: 'componentProduct'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; 'componentVariants': { name: 'componentVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantConnection'; ofType: null; }; } }; 'componentVariantsCount': { name: 'componentVariantsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'optionSelections': { name: 'optionSelections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBundleComponentOptionSelection'; ofType: null; }; }; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'quantityOption': { name: 'quantityOption'; type: { kind: 'OBJECT'; name: 'ProductBundleComponentQuantityOption'; ofType: null; } }; }; };
    'ProductBundleComponentConnection': { kind: 'OBJECT'; name: 'ProductBundleComponentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBundleComponentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBundleComponent'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProductBundleComponentEdge': { kind: 'OBJECT'; name: 'ProductBundleComponentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBundleComponent'; ofType: null; }; } }; }; };
    'ProductBundleComponentInput': { kind: 'INPUT_OBJECT'; name: 'ProductBundleComponentInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'productId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'optionSelections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductBundleComponentOptionSelectionInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'quantityOption'; type: { kind: 'INPUT_OBJECT'; name: 'ProductBundleComponentQuantityOptionInput'; ofType: null; }; defaultValue: null }]; };
    'ProductBundleComponentOptionSelection': { kind: 'OBJECT'; name: 'ProductBundleComponentOptionSelection'; fields: { 'componentOption': { name: 'componentOption'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductOption'; ofType: null; }; } }; 'parentOption': { name: 'parentOption'; type: { kind: 'OBJECT'; name: 'ProductOption'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBundleComponentOptionSelectionValue'; ofType: null; }; }; }; } }; }; };
    'ProductBundleComponentOptionSelectionInput': { kind: 'INPUT_OBJECT'; name: 'ProductBundleComponentOptionSelectionInput'; isOneOf: false; inputFields: [{ name: 'componentOptionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ProductBundleComponentOptionSelectionStatus': { name: 'ProductBundleComponentOptionSelectionStatus'; enumValues: 'SELECTED' | 'DESELECTED' | 'NEW' | 'UNAVAILABLE'; };
    'ProductBundleComponentOptionSelectionValue': { kind: 'OBJECT'; name: 'ProductBundleComponentOptionSelectionValue'; fields: { 'selectionStatus': { name: 'selectionStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductBundleComponentOptionSelectionStatus'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductBundleComponentQuantityOption': { kind: 'OBJECT'; name: 'ProductBundleComponentQuantityOption'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'parentOption': { name: 'parentOption'; type: { kind: 'OBJECT'; name: 'ProductOption'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBundleComponentQuantityOptionValue'; ofType: null; }; }; }; } }; }; };
    'ProductBundleComponentQuantityOptionInput': { kind: 'INPUT_OBJECT'; name: 'ProductBundleComponentQuantityOptionInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductBundleComponentQuantityOptionValueInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ProductBundleComponentQuantityOptionValue': { kind: 'OBJECT'; name: 'ProductBundleComponentQuantityOptionValue'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ProductBundleComponentQuantityOptionValueInput': { kind: 'INPUT_OBJECT'; name: 'ProductBundleComponentQuantityOptionValueInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'ProductBundleCreateInput': { kind: 'INPUT_OBJECT'; name: 'ProductBundleCreateInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'components'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductBundleComponentInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ProductBundleCreatePayload': { kind: 'OBJECT'; name: 'ProductBundleCreatePayload'; fields: { 'productBundleOperation': { name: 'productBundleOperation'; type: { kind: 'OBJECT'; name: 'ProductBundleOperation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductBundleMutationUserError': { kind: 'OBJECT'; name: 'ProductBundleMutationUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductBundleMutationUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductBundleMutationUserErrorCode': { name: 'ProductBundleMutationUserErrorCode'; enumValues: 'GENERIC_ERROR' | 'PRODUCT_DOES_NOT_EXIST' | 'INVALID_INPUT' | 'JOB_ERROR'; };
    'ProductBundleOperation': { kind: 'OBJECT'; name: 'ProductBundleOperation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductOperationStatus'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBundleMutationUserError'; ofType: null; }; }; }; } }; }; };
    'ProductBundleUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProductBundleUpdateInput'; isOneOf: false; inputFields: [{ name: 'productId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'components'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductBundleComponentInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductBundleUpdatePayload': { kind: 'OBJECT'; name: 'ProductBundleUpdatePayload'; fields: { 'productBundleOperation': { name: 'productBundleOperation'; type: { kind: 'OBJECT'; name: 'ProductBundleOperation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductCategory': { kind: 'OBJECT'; name: 'ProductCategory'; fields: { 'productTaxonomyNode': { name: 'productTaxonomyNode'; type: { kind: 'OBJECT'; name: 'ProductTaxonomyNode'; ofType: null; } }; }; };
    'ProductCategoryInput': { kind: 'INPUT_OBJECT'; name: 'ProductCategoryInput'; isOneOf: false; inputFields: [{ name: 'productTaxonomyNodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ProductChangeStatusPayload': { kind: 'OBJECT'; name: 'ProductChangeStatusPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductChangeStatusUserError'; ofType: null; }; }; }; } }; }; };
    'ProductChangeStatusUserError': { kind: 'OBJECT'; name: 'ProductChangeStatusUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductChangeStatusUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductChangeStatusUserErrorCode': { name: 'ProductChangeStatusUserErrorCode'; enumValues: 'PRODUCT_NOT_FOUND' | 'COMBINED_LISTINGS_NOT_COMPATIBLE_WITH_SHOP'; };
    'ProductClaimOwnershipInput': { kind: 'INPUT_OBJECT'; name: 'ProductClaimOwnershipInput'; isOneOf: false; inputFields: [{ name: 'bundles'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ProductCollectionSortKeys': { name: 'ProductCollectionSortKeys'; enumValues: 'TITLE' | 'PRICE' | 'BEST_SELLING' | 'CREATED' | 'ID' | 'MANUAL' | 'COLLECTION_DEFAULT' | 'RELEVANCE'; };
    'ProductCompareAtPriceRange': { kind: 'OBJECT'; name: 'ProductCompareAtPriceRange'; fields: { 'maxVariantCompareAtPrice': { name: 'maxVariantCompareAtPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'minVariantCompareAtPrice': { name: 'minVariantCompareAtPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'ProductConnection': { kind: 'OBJECT'; name: 'ProductConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProductContextualPricing': { kind: 'OBJECT'; name: 'ProductContextualPricing'; fields: { 'fixedQuantityRulesCount': { name: 'fixedQuantityRulesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'maxVariantPricing': { name: 'maxVariantPricing'; type: { kind: 'OBJECT'; name: 'ProductVariantContextualPricing'; ofType: null; } }; 'minVariantPricing': { name: 'minVariantPricing'; type: { kind: 'OBJECT'; name: 'ProductVariantContextualPricing'; ofType: null; } }; 'priceRange': { name: 'priceRange'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPriceRangeV2'; ofType: null; }; } }; }; };
    'ProductCreateMediaPayload': { kind: 'OBJECT'; name: 'ProductCreateMediaPayload'; fields: { 'media': { name: 'media'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Media'; ofType: null; }; }; } }; 'mediaUserErrors': { name: 'mediaUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaUserError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductCreatePayload': { kind: 'OBJECT'; name: 'ProductCreatePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductDeleteAsyncPayload': { kind: 'OBJECT'; name: 'ProductDeleteAsyncPayload'; fields: { 'deleteProductId': { name: 'deleteProductId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'ProductDeleteImagesPayload': { kind: 'OBJECT'; name: 'ProductDeleteImagesPayload'; fields: { 'deletedImageIds': { name: 'deletedImageIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductDeleteInput': { kind: 'INPUT_OBJECT'; name: 'ProductDeleteInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ProductDeleteMediaPayload': { kind: 'OBJECT'; name: 'ProductDeleteMediaPayload'; fields: { 'deletedMediaIds': { name: 'deletedMediaIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'deletedProductImageIds': { name: 'deletedProductImageIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'mediaUserErrors': { name: 'mediaUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaUserError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductDeletePayload': { kind: 'OBJECT'; name: 'ProductDeletePayload'; fields: { 'deletedProductId': { name: 'deletedProductId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductDeleteUserError': { kind: 'OBJECT'; name: 'ProductDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductDeleteUserErrorCode': { name: 'ProductDeleteUserErrorCode'; enumValues: 'PRODUCT_DOES_NOT_EXIST' | 'GENERIC_ERROR'; };
    'ProductDuplicateAsyncInput': { kind: 'INPUT_OBJECT'; name: 'ProductDuplicateAsyncInput'; isOneOf: false; inputFields: [{ name: 'productId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'newTitle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'newStatus'; type: { kind: 'ENUM'; name: 'ProductStatus'; ofType: null; }; defaultValue: null }, { name: 'includeImages'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'includeTranslations'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'ProductDuplicateAsyncV2Payload': { kind: 'OBJECT'; name: 'ProductDuplicateAsyncV2Payload'; fields: { 'duplicatedProductId': { name: 'duplicatedProductId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'productDuplicateJobId': { name: 'productDuplicateJobId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductDuplicateUserError'; ofType: null; }; }; }; } }; }; };
    'ProductDuplicateJob': { kind: 'OBJECT'; name: 'ProductDuplicateJob'; fields: { 'done': { name: 'done'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'ProductDuplicatePayload': { kind: 'OBJECT'; name: 'ProductDuplicatePayload'; fields: { 'imageJob': { name: 'imageJob'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'newProduct': { name: 'newProduct'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductDuplicateUserError': { kind: 'OBJECT'; name: 'ProductDuplicateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductDuplicateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductDuplicateUserErrorCode': { name: 'ProductDuplicateUserErrorCode'; enumValues: 'PRODUCT_DOES_NOT_EXIST' | 'EMPTY_VARIANT' | 'EMPTY_TITLE' | 'BUNDLES_ERROR' | 'GENERIC_ERROR' | 'FAILED_TO_SAVE'; };
    'ProductEdge': { kind: 'OBJECT'; name: 'ProductEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; }; };
    'ProductFeed': { kind: 'OBJECT'; name: 'ProductFeed'; fields: { 'country': { name: 'country'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'ENUM'; name: 'LanguageCode'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductFeedStatus'; ofType: null; }; } }; }; };
    'ProductFeedConnection': { kind: 'OBJECT'; name: 'ProductFeedConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductFeedEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductFeed'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProductFeedCreatePayload': { kind: 'OBJECT'; name: 'ProductFeedCreatePayload'; fields: { 'productFeed': { name: 'productFeed'; type: { kind: 'OBJECT'; name: 'ProductFeed'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductFeedCreateUserError'; ofType: null; }; }; }; } }; }; };
    'ProductFeedCreateUserError': { kind: 'OBJECT'; name: 'ProductFeedCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductFeedCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductFeedCreateUserErrorCode': { name: 'ProductFeedCreateUserErrorCode'; enumValues: 'INVALID' | 'TAKEN'; };
    'ProductFeedDeletePayload': { kind: 'OBJECT'; name: 'ProductFeedDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductFeedDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'ProductFeedDeleteUserError': { kind: 'OBJECT'; name: 'ProductFeedDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductFeedDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductFeedDeleteUserErrorCode': { name: 'ProductFeedDeleteUserErrorCode'; enumValues: 'INVALID'; };
    'ProductFeedEdge': { kind: 'OBJECT'; name: 'ProductFeedEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductFeed'; ofType: null; }; } }; }; };
    'ProductFeedInput': { kind: 'INPUT_OBJECT'; name: 'ProductFeedInput'; isOneOf: false; inputFields: [{ name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCode'; ofType: null; }; }; defaultValue: null }, { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; defaultValue: null }]; };
    'ProductFeedStatus': { name: 'ProductFeedStatus'; enumValues: 'ACTIVE' | 'INACTIVE'; };
    'ProductFullSyncPayload': { kind: 'OBJECT'; name: 'ProductFullSyncPayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductFullSyncUserError'; ofType: null; }; }; }; } }; }; };
    'ProductFullSyncUserError': { kind: 'OBJECT'; name: 'ProductFullSyncUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductFullSyncUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductFullSyncUserErrorCode': { name: 'ProductFullSyncUserErrorCode'; enumValues: 'INVALID'; };
    'ProductImageSortKeys': { name: 'ProductImageSortKeys'; enumValues: 'CREATED_AT' | 'POSITION' | 'ID' | 'RELEVANCE'; };
    'ProductImageUpdatePayload': { kind: 'OBJECT'; name: 'ProductImageUpdatePayload'; fields: { 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductInput': { kind: 'INPUT_OBJECT'; name: 'ProductInput'; isOneOf: false; inputFields: [{ name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'handle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'redirectNewHandle'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SEOInput'; ofType: null; }; defaultValue: null }, { name: 'productType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'standardizedProductType'; type: { kind: 'INPUT_OBJECT'; name: 'StandardizedProductTypeInput'; ofType: null; }; defaultValue: null }, { name: 'productCategory'; type: { kind: 'INPUT_OBJECT'; name: 'ProductCategoryInput'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'customProductType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'templateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'giftCard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'giftCardTemplateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'bodyHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'collectionsToJoin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'collectionsToLeave'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'combinedListingRole'; type: { kind: 'ENUM'; name: 'CombinedListingsRole'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'productOptions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OptionCreateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'productPublications'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductPublicationInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'publications'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductPublicationInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'publishDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'publishOn'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'published'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'ProductStatus'; ofType: null; }; defaultValue: null }, { name: 'requiresSellingPlan'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'claimOwnership'; type: { kind: 'INPUT_OBJECT'; name: 'ProductClaimOwnershipInput'; ofType: null; }; defaultValue: null }]; };
    'ProductJoinSellingPlanGroupsPayload': { kind: 'OBJECT'; name: 'ProductJoinSellingPlanGroupsPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'ProductLeaveSellingPlanGroupsPayload': { kind: 'OBJECT'; name: 'ProductLeaveSellingPlanGroupsPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'ProductMediaSortKeys': { name: 'ProductMediaSortKeys'; enumValues: 'POSITION' | 'ID' | 'RELEVANCE'; };
    'ProductOperation': { kind: 'INTERFACE'; name: 'ProductOperation'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductOperationStatus'; ofType: null; }; } }; }; possibleTypes: 'ProductBundleOperation' | 'ProductSetOperation'; };
    'ProductOperationStatus': { name: 'ProductOperationStatus'; enumValues: 'CREATED' | 'ACTIVE' | 'COMPLETE'; };
    'ProductOption': { kind: 'OBJECT'; name: 'ProductOption'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'linkedMetafield': { name: 'linkedMetafield'; type: { kind: 'OBJECT'; name: 'LinkedMetafield'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'optionValues': { name: 'optionValues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductOptionValue'; ofType: null; }; }; }; } }; 'position': { name: 'position'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; 'values': { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ProductOptionDeleteStrategy': { name: 'ProductOptionDeleteStrategy'; enumValues: 'DEFAULT' | 'POSITION' | 'NON_DESTRUCTIVE'; };
    'ProductOptionUpdatePayload': { kind: 'OBJECT'; name: 'ProductOptionUpdatePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductOptionUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'ProductOptionUpdateUserError': { kind: 'OBJECT'; name: 'ProductOptionUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductOptionUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductOptionUpdateUserErrorCode': { name: 'ProductOptionUpdateUserErrorCode'; enumValues: 'PRODUCT_DOES_NOT_EXIST' | 'PRODUCT_SUSPENDED' | 'OPTION_DOES_NOT_EXIST' | 'OPTION_ALREADY_EXISTS' | 'INVALID_POSITION' | 'INVALID_NAME' | 'OPTION_VALUES_OVER_LIMIT' | 'OPTION_VALUE_DOES_NOT_EXIST' | 'OPTION_VALUE_ALREADY_EXISTS' | 'OPTION_VALUE_HAS_VARIANTS' | 'CANNOT_DELETE_ALL_OPTION_VALUES_IN_OPTION' | 'CANNOT_LEAVE_OPTIONS_WITHOUT_VARIANTS' | 'NO_KEY_ON_CREATE' | 'KEY_MISSING_IN_INPUT' | 'DUPLICATED_OPTION_VALUE' | 'OPTION_NAME_TOO_LONG' | 'OPTION_VALUE_NAME_TOO_LONG' | 'OPTION_VALUE_CONFLICTING_OPERATION' | 'CANNOT_CREATE_VARIANTS_ABOVE_LIMIT' | 'CANNOT_COMBINE_LINKED_AND_NONLINKED_OPTION_VALUES' | 'INVALID_METAFIELD_VALUE_FOR_LINKED_OPTION' | 'DUPLICATE_LINKED_OPTION' | 'OPTION_LINKED_METAFIELD_ALREADY_TAKEN' | 'LINKED_OPTION_UPDATE_MISSING_VALUES' | 'LINKED_OPTIONS_NOT_SUPPORTED_FOR_SHOP' | 'LINKED_METAFIELD_DEFINITION_NOT_FOUND' | 'CANNOT_MAKE_CHANGES_IF_VARIANT_IS_MISSING_REQUIRED_SKU' | 'UNSUPPORTED_COMBINED_LISTING_PARENT_OPERATION' | 'CANNOT_DELETE_VARIANT_WITHOUT_PERMISSION'; };
    'ProductOptionUpdateVariantStrategy': { name: 'ProductOptionUpdateVariantStrategy'; enumValues: 'LEAVE_AS_IS' | 'MANAGE'; };
    'ProductOptionValue': { kind: 'OBJECT'; name: 'ProductOptionValue'; fields: { 'hasVariants': { name: 'hasVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'linkedMetafieldValue': { name: 'linkedMetafieldValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'swatch': { name: 'swatch'; type: { kind: 'OBJECT'; name: 'ProductOptionValueSwatch'; ofType: null; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; }; };
    'ProductOptionValueSwatch': { kind: 'OBJECT'; name: 'ProductOptionValueSwatch'; fields: { 'color': { name: 'color'; type: { kind: 'SCALAR'; name: 'Color'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'MediaImage'; ofType: null; } }; }; };
    'ProductOptionsCreatePayload': { kind: 'OBJECT'; name: 'ProductOptionsCreatePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductOptionsCreateUserError'; ofType: null; }; }; }; } }; }; };
    'ProductOptionsCreateUserError': { kind: 'OBJECT'; name: 'ProductOptionsCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductOptionsCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductOptionsCreateUserErrorCode': { name: 'ProductOptionsCreateUserErrorCode'; enumValues: 'OPTION_ALREADY_EXISTS' | 'OPTIONS_OVER_LIMIT' | 'OPTION_VALUES_OVER_LIMIT' | 'INVALID_NAME' | 'PRODUCT_SUSPENDED' | 'NEW_OPTION_WITHOUT_VALUE_FOR_EXISTING_VARIANTS' | 'DUPLICATED_OPTION_NAME' | 'DUPLICATED_OPTION_VALUE' | 'OPTION_NAME_MISSING' | 'OPTION_VALUES_MISSING' | 'POSITION_OUT_OF_BOUNDS' | 'OPTION_POSITION_MISSING' | 'PRODUCT_DOES_NOT_EXIST' | 'LINKED_METAFIELD_DEFINITION_NOT_FOUND' | 'INVALID_METAFIELD_VALUE_FOR_LINKED_OPTION' | 'MISSING_METAFIELD_VALUES_FOR_LINKED_OPTION' | 'CANNOT_COMBINE_LINKED_METAFIELD_AND_OPTION_VALUES' | 'DUPLICATE_LINKED_OPTION' | 'OPTION_LINKED_METAFIELD_ALREADY_TAKEN' | 'LINKED_OPTIONS_NOT_SUPPORTED_FOR_SHOP' | 'CANNOT_MAKE_CHANGES_IF_VARIANT_IS_MISSING_REQUIRED_SKU' | 'UNSUPPORTED_COMBINED_LISTING_PARENT_OPERATION'; };
    'ProductOptionsDeletePayload': { kind: 'OBJECT'; name: 'ProductOptionsDeletePayload'; fields: { 'deletedOptionsIds': { name: 'deletedOptionsIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductOptionsDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'ProductOptionsDeleteUserError': { kind: 'OBJECT'; name: 'ProductOptionsDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductOptionsDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductOptionsDeleteUserErrorCode': { name: 'ProductOptionsDeleteUserErrorCode'; enumValues: 'PRODUCT_DOES_NOT_EXIST' | 'PRODUCT_SUSPENDED' | 'OPTION_DOES_NOT_EXIST' | 'OPTIONS_DO_NOT_BELONG_TO_THE_SAME_PRODUCT' | 'CANNOT_DELETE_OPTION_WITH_MULTIPLE_VALUES' | 'CANNOT_USE_NON_DESTRUCTIVE_STRATEGY' | 'CANNOT_MAKE_CHANGES_IF_VARIANT_IS_MISSING_REQUIRED_SKU' | 'UNSUPPORTED_COMBINED_LISTING_PARENT_OPERATION'; };
    'ProductOptionsReorderPayload': { kind: 'OBJECT'; name: 'ProductOptionsReorderPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductOptionsReorderUserError'; ofType: null; }; }; }; } }; }; };
    'ProductOptionsReorderUserError': { kind: 'OBJECT'; name: 'ProductOptionsReorderUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductOptionsReorderUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductOptionsReorderUserErrorCode': { name: 'ProductOptionsReorderUserErrorCode'; enumValues: 'OPTION_NAME_DOES_NOT_EXIST' | 'OPTION_VALUE_DOES_NOT_EXIST' | 'OPTION_ID_DOES_NOT_EXIST' | 'OPTION_VALUE_ID_DOES_NOT_EXIST' | 'DUPLICATED_OPTION_NAME' | 'DUPLICATED_OPTION_VALUE' | 'MISSING_OPTION_NAME' | 'MISSING_OPTION_VALUE' | 'PRODUCT_DOES_NOT_EXIST' | 'NO_KEY_ON_REORDER' | 'MIXING_ID_AND_NAME_KEYS_IS_NOT_ALLOWED' | 'CANNOT_MAKE_CHANGES_IF_VARIANT_IS_MISSING_REQUIRED_SKU'; };
    'ProductPriceRange': { kind: 'OBJECT'; name: 'ProductPriceRange'; fields: { 'maxVariantPrice': { name: 'maxVariantPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'minVariantPrice': { name: 'minVariantPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'ProductPriceRangeV2': { kind: 'OBJECT'; name: 'ProductPriceRangeV2'; fields: { 'maxVariantPrice': { name: 'maxVariantPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'minVariantPrice': { name: 'minVariantPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'ProductPublication': { kind: 'OBJECT'; name: 'ProductPublication'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'isPublished': { name: 'isPublished'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; 'publishDate': { name: 'publishDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; }; };
    'ProductPublicationConnection': { kind: 'OBJECT'; name: 'ProductPublicationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPublicationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPublication'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProductPublicationEdge': { kind: 'OBJECT'; name: 'ProductPublicationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPublication'; ofType: null; }; } }; }; };
    'ProductPublicationInput': { kind: 'INPUT_OBJECT'; name: 'ProductPublicationInput'; isOneOf: false; inputFields: [{ name: 'publicationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'channelId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'channelHandle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'publishDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'ProductPublishInput': { kind: 'INPUT_OBJECT'; name: 'ProductPublishInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'productPublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductPublicationInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ProductPublishPayload': { kind: 'OBJECT'; name: 'ProductPublishPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productPublications': { name: 'productPublications'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductPublication'; ofType: null; }; }; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductReorderImagesPayload': { kind: 'OBJECT'; name: 'ProductReorderImagesPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductReorderMediaPayload': { kind: 'OBJECT'; name: 'ProductReorderMediaPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'mediaUserErrors': { name: 'mediaUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaUserError'; ofType: null; }; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductResourceFeedback': { kind: 'OBJECT'; name: 'ProductResourceFeedback'; fields: { 'feedbackGeneratedAt': { name: 'feedbackGeneratedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'messages': { name: 'messages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'productId': { name: 'productId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'productUpdatedAt': { name: 'productUpdatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ResourceFeedbackState'; ofType: null; }; } }; }; };
    'ProductResourceFeedbackInput': { kind: 'INPUT_OBJECT'; name: 'ProductResourceFeedbackInput'; isOneOf: false; inputFields: [{ name: 'productId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ResourceFeedbackState'; ofType: null; }; }; defaultValue: null }, { name: 'feedbackGeneratedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'productUpdatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'messages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductSale': { kind: 'OBJECT'; name: 'ProductSale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'ProductSetInput': { kind: 'INPUT_OBJECT'; name: 'ProductSetInput'; isOneOf: false; inputFields: [{ name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'handle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'redirectNewHandle'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SEOInput'; ofType: null; }; defaultValue: null }, { name: 'productType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'standardizedProductType'; type: { kind: 'INPUT_OBJECT'; name: 'StandardizedProductTypeInput'; ofType: null; }; defaultValue: null }, { name: 'productCategory'; type: { kind: 'INPUT_OBJECT'; name: 'ProductCategoryInput'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'customProductType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'templateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'giftCard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'giftCardTemplateSuffix'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'collections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductVariantSetInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'mediaIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'ProductStatus'; ofType: null; }; defaultValue: null }, { name: 'requiresSellingPlan'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'productOptions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OptionSetInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'claimOwnership'; type: { kind: 'INPUT_OBJECT'; name: 'ProductClaimOwnershipInput'; ofType: null; }; defaultValue: null }, { name: 'combinedListingRole'; type: { kind: 'ENUM'; name: 'CombinedListingsRole'; ofType: null; }; defaultValue: null }]; };
    'ProductSetOperation': { kind: 'OBJECT'; name: 'ProductSetOperation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductOperationStatus'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductSetUserError'; ofType: null; }; }; }; } }; }; };
    'ProductSetPayload': { kind: 'OBJECT'; name: 'ProductSetPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productSetOperation': { name: 'productSetOperation'; type: { kind: 'OBJECT'; name: 'ProductSetOperation'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductSetUserError'; ofType: null; }; }; }; } }; }; };
    'ProductSetUserError': { kind: 'OBJECT'; name: 'ProductSetUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductSetUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductSetUserErrorCode': { name: 'ProductSetUserErrorCode'; enumValues: 'GENERIC_ERROR' | 'INVALID_METAFIELD' | 'INVALID_VARIANT' | 'PRODUCT_DOES_NOT_EXIST' | 'PRODUCT_VARIANT_DOES_NOT_EXIST' | 'OPTION_DOES_NOT_EXIST' | 'OPTION_VALUE_DOES_NOT_EXIST' | 'OPTIONS_OVER_LIMIT' | 'OPTION_VALUES_OVER_LIMIT' | 'OPTION_VALUES_MISSING' | 'DUPLICATED_OPTION_NAME' | 'DUPLICATED_OPTION_VALUE' | 'VARIANTS_OVER_LIMIT' | 'PRODUCT_OPTIONS_INPUT_MISSING' | 'VARIANTS_INPUT_MISSING' | 'GIFT_CARDS_NOT_ACTIVATED' | 'GIFT_CARD_ATTRIBUTE_CANNOT_BE_CHANGED' | 'INVALID_PRODUCT' | 'INVALID_INPUT' | 'JOB_ERROR' | 'CAPABILITY_VIOLATION' | 'DUPLICATED_VALUE'; };
    'ProductSortKeys': { name: 'ProductSortKeys'; enumValues: 'TITLE' | 'PRODUCT_TYPE' | 'VENDOR' | 'INVENTORY_TOTAL' | 'UPDATED_AT' | 'CREATED_AT' | 'PUBLISHED_AT' | 'ID' | 'RELEVANCE'; };
    'ProductStatus': { name: 'ProductStatus'; enumValues: 'ACTIVE' | 'ARCHIVED' | 'DRAFT'; };
    'ProductTaxonomyNode': { kind: 'OBJECT'; name: 'ProductTaxonomyNode'; fields: { 'fullName': { name: 'fullName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isLeaf': { name: 'isLeaf'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isRoot': { name: 'isRoot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductUnpublishInput': { kind: 'INPUT_OBJECT'; name: 'ProductUnpublishInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'productPublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductPublicationInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ProductUnpublishPayload': { kind: 'OBJECT'; name: 'ProductUnpublishPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductUpdateMediaPayload': { kind: 'OBJECT'; name: 'ProductUpdateMediaPayload'; fields: { 'media': { name: 'media'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Media'; ofType: null; }; }; } }; 'mediaUserErrors': { name: 'mediaUserErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaUserError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductUpdatePayload': { kind: 'OBJECT'; name: 'ProductUpdatePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariant': { kind: 'OBJECT'; name: 'ProductVariant'; fields: { 'availableForSale': { name: 'availableForSale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'barcode': { name: 'barcode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'compareAtPrice': { name: 'compareAtPrice'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'contextualPricing': { name: 'contextualPricing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantContextualPricing'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'defaultCursor': { name: 'defaultCursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'deliveryProfile': { name: 'deliveryProfile'; type: { kind: 'OBJECT'; name: 'DeliveryProfile'; ofType: null; } }; 'displayName': { name: 'displayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'inventoryItem': { name: 'inventoryItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryItem'; ofType: null; }; } }; 'inventoryPolicy': { name: 'inventoryPolicy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductVariantInventoryPolicy'; ofType: null; }; } }; 'inventoryQuantity': { name: 'inventoryQuantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'media': { name: 'media'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaConnection'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'position': { name: 'position'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'presentmentPrices': { name: 'presentmentPrices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantPricePairConnection'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; 'productVariantComponents': { name: 'productVariantComponents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantComponentConnection'; ofType: null; }; } }; 'requiresComponents': { name: 'requiresComponents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'selectedOptions': { name: 'selectedOptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SelectedOption'; ofType: null; }; }; }; } }; 'sellableOnlineQuantity': { name: 'sellableOnlineQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'sellingPlanGroupCount': { name: 'sellingPlanGroupCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'sellingPlanGroups': { name: 'sellingPlanGroups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupConnection'; ofType: null; }; } }; 'sellingPlanGroupsCount': { name: 'sellingPlanGroupsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'storefrontId': { name: 'storefrontId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'StorefrontID'; ofType: null; }; } }; 'taxCode': { name: 'taxCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxable': { name: 'taxable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'ProductVariantAppendMediaInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantAppendMediaInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'mediaIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ProductVariantAppendMediaPayload': { kind: 'OBJECT'; name: 'ProductVariantAppendMediaPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaUserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantComponent': { kind: 'OBJECT'; name: 'ProductVariantComponent'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ProductVariantComponentConnection': { kind: 'OBJECT'; name: 'ProductVariantComponentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantComponentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantComponent'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProductVariantComponentEdge': { kind: 'OBJECT'; name: 'ProductVariantComponentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantComponent'; ofType: null; }; } }; }; };
    'ProductVariantConnection': { kind: 'OBJECT'; name: 'ProductVariantConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProductVariantContextualPricing': { kind: 'OBJECT'; name: 'ProductVariantContextualPricing'; fields: { 'compareAtPrice': { name: 'compareAtPrice'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'quantityPriceBreaks': { name: 'quantityPriceBreaks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityPriceBreakConnection'; ofType: null; }; } }; 'quantityRule': { name: 'quantityRule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityRule'; ofType: null; }; } }; }; };
    'ProductVariantCreatePayload': { kind: 'OBJECT'; name: 'ProductVariantCreatePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantDeletePayload': { kind: 'OBJECT'; name: 'ProductVariantDeletePayload'; fields: { 'deletedProductVariantId': { name: 'deletedProductVariantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantDetachMediaInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantDetachMediaInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'mediaIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ProductVariantDetachMediaPayload': { kind: 'OBJECT'; name: 'ProductVariantDetachMediaPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaUserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantEdge': { kind: 'OBJECT'; name: 'ProductVariantEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'ProductVariantGroupRelationshipInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantGroupRelationshipInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'ProductVariantInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantInput'; isOneOf: false; inputFields: [{ name: 'requiresComponents'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'barcode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'compareAtPrice'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'imageId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'imageSrc'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'mediaId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'mediaSrc'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'inventoryPolicy'; type: { kind: 'ENUM'; name: 'ProductVariantInventoryPolicy'; ofType: null; }; defaultValue: null }, { name: 'inventoryQuantities'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventoryLevelInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'inventoryItem'; type: { kind: 'INPUT_OBJECT'; name: 'InventoryItemInput'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'options'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'price'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'productId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'taxable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'taxCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ProductVariantInventoryPolicy': { name: 'ProductVariantInventoryPolicy'; enumValues: 'DENY' | 'CONTINUE'; };
    'ProductVariantJoinSellingPlanGroupsPayload': { kind: 'OBJECT'; name: 'ProductVariantJoinSellingPlanGroupsPayload'; fields: { 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantLeaveSellingPlanGroupsPayload': { kind: 'OBJECT'; name: 'ProductVariantLeaveSellingPlanGroupsPayload'; fields: { 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantPositionInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantPositionInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'position'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'ProductVariantPricePair': { kind: 'OBJECT'; name: 'ProductVariantPricePair'; fields: { 'compareAtPrice': { name: 'compareAtPrice'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'ProductVariantPricePairConnection': { kind: 'OBJECT'; name: 'ProductVariantPricePairConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantPricePairEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantPricePair'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProductVariantPricePairEdge': { kind: 'OBJECT'; name: 'ProductVariantPricePairEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantPricePair'; ofType: null; }; } }; }; };
    'ProductVariantRelationshipBulkUpdatePayload': { kind: 'OBJECT'; name: 'ProductVariantRelationshipBulkUpdatePayload'; fields: { 'parentProductVariants': { name: 'parentProductVariants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantRelationshipBulkUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantRelationshipBulkUpdateUserError': { kind: 'OBJECT'; name: 'ProductVariantRelationshipBulkUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductVariantRelationshipBulkUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductVariantRelationshipBulkUpdateUserErrorCode': { name: 'ProductVariantRelationshipBulkUpdateUserErrorCode'; enumValues: 'PARENT_REQUIRED' | 'FAILED_TO_CREATE' | 'PRODUCT_VARIANTS_NOT_FOUND' | 'CIRCULAR_REFERENCE' | 'NESTED_PARENT_PRODUCT_VARIANT' | 'INVALID_QUANTITY' | 'DUPLICATE_PRODUCT_VARIANT_RELATIONSHIP' | 'EXCEEDED_PRODUCT_VARIANT_RELATIONSHIP_LIMIT' | 'PRODUCT_VARIANT_RELATIONSHIP_TYPE_CONFLICT' | 'UNEXPECTED_ERROR' | 'FAILED_TO_REMOVE' | 'MUST_SPECIFY_COMPONENTS' | 'FAILED_TO_UPDATE' | 'FAILED_TO_UPDATE_PARENT_PRODUCT_VARIANT_PRICE' | 'UPDATE_PARENT_VARIANT_PRICE_REQUIRED' | 'PRODUCT_VARIANTS_NOT_COMPONENTS' | 'PRODUCT_EXPANDER_APP_OWNERSHIP_ALREADY_EXISTS' | 'UNSUPPORTED_MULTIPACK_RELATIONSHIP' | 'PARENT_PRODUCT_VARIANT_CANNOT_BE_GIFT_CARD' | 'PARENT_PRODUCT_VARIANT_CANNOT_REQUIRE_SELLING_PLAN' | 'PARENT_PRODUCT_VARIANT_CANNOT_BE_COMBINED_LISTING' | 'CHILD_PRODUCT_VARIANT_CANNOT_BE_COMBINED_LISTING'; };
    'ProductVariantRelationshipUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantRelationshipUpdateInput'; isOneOf: false; inputFields: [{ name: 'parentProductVariantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'parentProductId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'productVariantRelationshipsToCreate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductVariantGroupRelationshipInput'; ofType: null; }; }; }; defaultValue: "null" }, { name: 'productVariantRelationshipsToUpdate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductVariantGroupRelationshipInput'; ofType: null; }; }; }; defaultValue: "null" }, { name: 'productVariantRelationshipsToRemove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: "null" }, { name: 'removeAllProductVariantRelationships'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'priceInput'; type: { kind: 'INPUT_OBJECT'; name: 'PriceInput'; ofType: null; }; defaultValue: "null" }]; };
    'ProductVariantSetInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantSetInput'; isOneOf: false; inputFields: [{ name: 'requiresComponents'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'barcode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'compareAtPrice'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'mediaId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'inventoryPolicy'; type: { kind: 'ENUM'; name: 'ProductVariantInventoryPolicy'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'optionValues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VariantOptionValueInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'price'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'taxable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'taxCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ProductVariantSortKeys': { name: 'ProductVariantSortKeys'; enumValues: 'TITLE' | 'NAME' | 'SKU' | 'INVENTORY_QUANTITY' | 'INVENTORY_MANAGEMENT' | 'INVENTORY_LEVELS_AVAILABLE' | 'INVENTORY_POLICY' | 'FULL_TITLE' | 'POPULAR' | 'POSITION' | 'ID' | 'RELEVANCE'; };
    'ProductVariantUpdatePayload': { kind: 'OBJECT'; name: 'ProductVariantUpdatePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantsBulkCreatePayload': { kind: 'OBJECT'; name: 'ProductVariantsBulkCreatePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantsBulkCreateUserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantsBulkCreateStrategy': { name: 'ProductVariantsBulkCreateStrategy'; enumValues: 'DEFAULT' | 'REMOVE_STANDALONE_VARIANT'; };
    'ProductVariantsBulkCreateUserError': { kind: 'OBJECT'; name: 'ProductVariantsBulkCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductVariantsBulkCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductVariantsBulkCreateUserErrorCode': { name: 'ProductVariantsBulkCreateUserErrorCode'; enumValues: 'INVALID_INPUT' | 'PRODUCT_DOES_NOT_EXIST' | 'NO_KEY_ON_CREATE' | 'VARIANT_ALREADY_EXISTS' | 'GREATER_THAN_OR_EQUAL_TO' | 'NEED_TO_ADD_OPTION_VALUES' | 'OPTION_VALUES_FOR_NUMBER_OF_UNKNOWN_OPTIONS' | 'TOO_MANY_INVENTORY_LOCATIONS' | 'SUBSCRIPTION_VIOLATION' | 'VARIANT_ALREADY_EXISTS_CHANGE_OPTION_VALUE' | 'TRACKED_VARIANT_LOCATION_NOT_FOUND' | 'MUST_BE_FOR_THIS_PRODUCT' | 'NOT_DEFINED_FOR_SHOP' | 'INVALID' | 'NEGATIVE_PRICE_VALUE' | 'UNSUPPORTED_COMBINED_LISTING_PARENT_OPERATION' | 'CANNOT_SET_NAME_FOR_LINKED_OPTION_VALUE'; };
    'ProductVariantsBulkDeletePayload': { kind: 'OBJECT'; name: 'ProductVariantsBulkDeletePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantsBulkDeleteUserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantsBulkDeleteUserError': { kind: 'OBJECT'; name: 'ProductVariantsBulkDeleteUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductVariantsBulkDeleteUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductVariantsBulkDeleteUserErrorCode': { name: 'ProductVariantsBulkDeleteUserErrorCode'; enumValues: 'PRODUCT_DOES_NOT_EXIST' | 'CANNOT_DELETE_LAST_VARIANT' | 'AT_LEAST_ONE_VARIANT_DOES_NOT_BELONG_TO_THE_PRODUCT' | 'UNSUPPORTED_COMBINED_LISTING_PARENT_OPERATION'; };
    'ProductVariantsBulkInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantsBulkInput'; isOneOf: false; inputFields: [{ name: 'barcode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'compareAtPrice'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'mediaSrc'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'inventoryPolicy'; type: { kind: 'ENUM'; name: 'ProductVariantInventoryPolicy'; ofType: null; }; defaultValue: null }, { name: 'inventoryQuantities'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'InventoryLevelInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'inventoryItem'; type: { kind: 'INPUT_OBJECT'; name: 'InventoryItemInput'; ofType: null; }; defaultValue: null }, { name: 'mediaId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PrivateMetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'optionValues'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VariantOptionValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'price'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'taxable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'taxCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ProductVariantsBulkReorderPayload': { kind: 'OBJECT'; name: 'ProductVariantsBulkReorderPayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantsBulkReorderUserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantsBulkReorderUserError': { kind: 'OBJECT'; name: 'ProductVariantsBulkReorderUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductVariantsBulkReorderUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductVariantsBulkReorderUserErrorCode': { name: 'ProductVariantsBulkReorderUserErrorCode'; enumValues: 'PRODUCT_DOES_NOT_EXIST' | 'MISSING_VARIANT' | 'INVALID_POSITION' | 'DUPLICATED_VARIANT_ID'; };
    'ProductVariantsBulkUpdatePayload': { kind: 'OBJECT'; name: 'ProductVariantsBulkUpdatePayload'; fields: { 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantsBulkUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantsBulkUpdateUserError': { kind: 'OBJECT'; name: 'ProductVariantsBulkUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ProductVariantsBulkUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductVariantsBulkUpdateUserErrorCode': { name: 'ProductVariantsBulkUpdateUserErrorCode'; enumValues: 'INVALID_INPUT' | 'CANNOT_SPECIFY_BOTH' | 'MUST_SPECIFY_ONE_OF_PAIR' | 'PRODUCT_DOES_NOT_EXIST' | 'PRODUCT_VARIANT_ID_MISSING' | 'PRODUCT_VARIANT_DOES_NOT_EXIST' | 'OPTION_DOES_NOT_EXIST' | 'OPTION_VALUE_DOES_NOT_EXIST' | 'MUST_BE_FOR_THIS_PRODUCT' | 'NO_INVENTORY_QUANTITIES_ON_VARIANTS_UPDATE' | 'VARIANT_ALREADY_EXISTS' | 'GREATER_THAN_OR_EQUAL_TO' | 'NEED_TO_ADD_OPTION_VALUES' | 'OPTION_VALUES_FOR_NUMBER_OF_UNKNOWN_OPTIONS' | 'SUBSCRIPTION_VIOLATION' | 'NO_INVENTORY_QUANTITES_DURING_UPDATE' | 'NEGATIVE_PRICE_VALUE' | 'CANNOT_SET_NAME_FOR_LINKED_OPTION_VALUE' | 'UNSUPPORTED_COMBINED_LISTING_PARENT_OPERATION'; };
    'ProfileItemSortKeys': { name: 'ProfileItemSortKeys'; enumValues: 'TITLE' | 'PRODUCT_TYPE' | 'VENDOR' | 'INVENTORY_TOTAL' | 'UPDATED_AT' | 'CREATED_AT' | 'PUBLISHED_AT' | 'ID' | 'RELEVANCE'; };
    'PubSubServerPixelUpdatePayload': { kind: 'OBJECT'; name: 'PubSubServerPixelUpdatePayload'; fields: { 'serverPixel': { name: 'serverPixel'; type: { kind: 'OBJECT'; name: 'ServerPixel'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ErrorsServerPixelUserError'; ofType: null; }; }; }; } }; }; };
    'PubSubWebhookSubscriptionCreatePayload': { kind: 'OBJECT'; name: 'PubSubWebhookSubscriptionCreatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PubSubWebhookSubscriptionCreateUserError'; ofType: null; }; }; }; } }; 'webhookSubscription': { name: 'webhookSubscription'; type: { kind: 'OBJECT'; name: 'WebhookSubscription'; ofType: null; } }; }; };
    'PubSubWebhookSubscriptionCreateUserError': { kind: 'OBJECT'; name: 'PubSubWebhookSubscriptionCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PubSubWebhookSubscriptionCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PubSubWebhookSubscriptionCreateUserErrorCode': { name: 'PubSubWebhookSubscriptionCreateUserErrorCode'; enumValues: 'INVALID_PARAMETERS' | 'TAKEN'; };
    'PubSubWebhookSubscriptionInput': { kind: 'INPUT_OBJECT'; name: 'PubSubWebhookSubscriptionInput'; isOneOf: false; inputFields: [{ name: 'pubSubProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'pubSubTopic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'format'; type: { kind: 'ENUM'; name: 'WebhookSubscriptionFormat'; ofType: null; }; defaultValue: null }, { name: 'includeFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'filter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metafieldNamespaces'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'PubSubWebhookSubscriptionUpdatePayload': { kind: 'OBJECT'; name: 'PubSubWebhookSubscriptionUpdatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PubSubWebhookSubscriptionUpdateUserError'; ofType: null; }; }; }; } }; 'webhookSubscription': { name: 'webhookSubscription'; type: { kind: 'OBJECT'; name: 'WebhookSubscription'; ofType: null; } }; }; };
    'PubSubWebhookSubscriptionUpdateUserError': { kind: 'OBJECT'; name: 'PubSubWebhookSubscriptionUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PubSubWebhookSubscriptionUpdateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PubSubWebhookSubscriptionUpdateUserErrorCode': { name: 'PubSubWebhookSubscriptionUpdateUserErrorCode'; enumValues: 'INVALID_PARAMETERS'; };
    'Publication': { kind: 'OBJECT'; name: 'Publication'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'autoPublish': { name: 'autoPublish'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'catalog': { name: 'catalog'; type: { kind: 'INTERFACE'; name: 'Catalog'; ofType: null; } }; 'collectionPublicationsV3': { name: 'collectionPublicationsV3'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationConnection'; ofType: null; }; } }; 'collections': { name: 'collections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionConnection'; ofType: null; }; } }; 'hasCollection': { name: 'hasCollection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'operation': { name: 'operation'; type: { kind: 'UNION'; name: 'PublicationOperation'; ofType: null; } }; 'productPublicationsV3': { name: 'productPublicationsV3'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationConnection'; ofType: null; }; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductConnection'; ofType: null; }; } }; 'supportsFuturePublishing': { name: 'supportsFuturePublishing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PublicationConnection': { kind: 'OBJECT'; name: 'PublicationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Publication'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PublicationCreateInput': { kind: 'INPUT_OBJECT'; name: 'PublicationCreateInput'; isOneOf: false; inputFields: [{ name: 'catalogId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'defaultState'; type: { kind: 'ENUM'; name: 'PublicationCreateInputPublicationDefaultState'; ofType: null; }; defaultValue: "EMPTY" }, { name: 'autoPublish'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'PublicationCreateInputPublicationDefaultState': { name: 'PublicationCreateInputPublicationDefaultState'; enumValues: 'EMPTY' | 'ALL_PRODUCTS'; };
    'PublicationCreatePayload': { kind: 'OBJECT'; name: 'PublicationCreatePayload'; fields: { 'publication': { name: 'publication'; type: { kind: 'OBJECT'; name: 'Publication'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicationUserError'; ofType: null; }; }; }; } }; }; };
    'PublicationDeletePayload': { kind: 'OBJECT'; name: 'PublicationDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicationUserError'; ofType: null; }; }; }; } }; }; };
    'PublicationEdge': { kind: 'OBJECT'; name: 'PublicationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Publication'; ofType: null; }; } }; }; };
    'PublicationInput': { kind: 'INPUT_OBJECT'; name: 'PublicationInput'; isOneOf: false; inputFields: [{ name: 'channelId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'publicationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'publishDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'PublicationOperation': { kind: 'UNION'; name: 'PublicationOperation'; fields: {}; possibleTypes: 'AddAllProductsOperation' | 'CatalogCsvOperation' | 'PublicationResourceOperation'; };
    'PublicationResourceOperation': { kind: 'OBJECT'; name: 'PublicationResourceOperation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'processedRowCount': { name: 'processedRowCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rowCount': { name: 'rowCount'; type: { kind: 'OBJECT'; name: 'RowCount'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ResourceOperationStatus'; ofType: null; }; } }; }; };
    'PublicationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PublicationUpdateInput'; isOneOf: false; inputFields: [{ name: 'publishablesToAdd'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: "[]" }, { name: 'publishablesToRemove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: "[]" }, { name: 'autoPublish'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'PublicationUpdatePayload': { kind: 'OBJECT'; name: 'PublicationUpdatePayload'; fields: { 'publication': { name: 'publication'; type: { kind: 'OBJECT'; name: 'Publication'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicationUserError'; ofType: null; }; }; }; } }; }; };
    'PublicationUserError': { kind: 'OBJECT'; name: 'PublicationUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'PublicationUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PublicationUserErrorCode': { name: 'PublicationUserErrorCode'; enumValues: 'UNSUPPORTED_PUBLICATION_ACTION' | 'PUBLICATION_NOT_FOUND' | 'PUBLICATION_LOCKED' | 'UNSUPPORTED_PUBLISHABLE_TYPE' | 'INVALID_PUBLISHABLE_ID' | 'MARKET_NOT_FOUND' | 'CATALOG_NOT_FOUND' | 'CANNOT_MODIFY_APP_CATALOG_PUBLICATION' | 'CANNOT_MODIFY_MARKET_CATALOG_PUBLICATION' | 'CANNOT_MODIFY_APP_CATALOG' | 'CANNOT_MODIFY_MARKET_CATALOG' | 'INVALID' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'BLANK' | 'PRODUCT_TYPE_INCOMPATIBLE_WITH_CATALOG_TYPE' | 'PUBLICATION_UPDATE_LIMIT_EXCEEDED'; };
    'Publishable': { kind: 'INTERFACE'; name: 'Publishable'; fields: { 'availablePublicationsCount': { name: 'availablePublicationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'publicationCount': { name: 'publicationCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'publishedOnChannel': { name: 'publishedOnChannel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnCurrentChannel': { name: 'publishedOnCurrentChannel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnCurrentPublication': { name: 'publishedOnCurrentPublication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedOnPublication': { name: 'publishedOnPublication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resourcePublications': { name: 'resourcePublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationConnection'; ofType: null; }; } }; 'resourcePublicationsCount': { name: 'resourcePublicationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'resourcePublicationsV2': { name: 'resourcePublicationsV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationV2Connection'; ofType: null; }; } }; 'unpublishedChannels': { name: 'unpublishedChannels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelConnection'; ofType: null; }; } }; 'unpublishedPublications': { name: 'unpublishedPublications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicationConnection'; ofType: null; }; } }; }; possibleTypes: 'Collection' | 'Product'; };
    'PublishablePublishPayload': { kind: 'OBJECT'; name: 'PublishablePublishPayload'; fields: { 'publishable': { name: 'publishable'; type: { kind: 'INTERFACE'; name: 'Publishable'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PublishablePublishToCurrentChannelPayload': { kind: 'OBJECT'; name: 'PublishablePublishToCurrentChannelPayload'; fields: { 'publishable': { name: 'publishable'; type: { kind: 'INTERFACE'; name: 'Publishable'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PublishableUnpublishPayload': { kind: 'OBJECT'; name: 'PublishableUnpublishPayload'; fields: { 'publishable': { name: 'publishable'; type: { kind: 'INTERFACE'; name: 'Publishable'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PublishableUnpublishToCurrentChannelPayload': { kind: 'OBJECT'; name: 'PublishableUnpublishToCurrentChannelPayload'; fields: { 'publishable': { name: 'publishable'; type: { kind: 'INTERFACE'; name: 'Publishable'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'PurchasingCompany': { kind: 'OBJECT'; name: 'PurchasingCompany'; fields: { 'company': { name: 'company'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Company'; ofType: null; }; } }; 'contact': { name: 'contact'; type: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; }; } }; }; };
    'PurchasingCompanyInput': { kind: 'INPUT_OBJECT'; name: 'PurchasingCompanyInput'; isOneOf: false; inputFields: [{ name: 'companyId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'companyContactId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'companyLocationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'PurchasingEntity': { kind: 'UNION'; name: 'PurchasingEntity'; fields: {}; possibleTypes: 'Customer' | 'PurchasingCompany'; };
    'PurchasingEntityInput': { kind: 'INPUT_OBJECT'; name: 'PurchasingEntityInput'; isOneOf: false; inputFields: [{ name: 'customerId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'purchasingCompany'; type: { kind: 'INPUT_OBJECT'; name: 'PurchasingCompanyInput'; ofType: null; }; defaultValue: null }]; };
    'QuantityPriceBreak': { kind: 'OBJECT'; name: 'QuantityPriceBreak'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'minimumQuantity': { name: 'minimumQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'priceList': { name: 'priceList'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'QuantityPriceBreakConnection': { kind: 'OBJECT'; name: 'QuantityPriceBreakConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityPriceBreakEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityPriceBreak'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'QuantityPriceBreakEdge': { kind: 'OBJECT'; name: 'QuantityPriceBreakEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityPriceBreak'; ofType: null; }; } }; }; };
    'QuantityPriceBreakInput': { kind: 'INPUT_OBJECT'; name: 'QuantityPriceBreakInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }, { name: 'minimumQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'QuantityPriceBreakSortKeys': { name: 'QuantityPriceBreakSortKeys'; enumValues: 'MINIMUM_QUANTITY' | 'ID' | 'RELEVANCE'; };
    'QuantityPricingByVariantUpdateInput': { kind: 'INPUT_OBJECT'; name: 'QuantityPricingByVariantUpdateInput'; isOneOf: false; inputFields: [{ name: 'quantityPriceBreaksToAdd'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'QuantityPriceBreakInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'quantityPriceBreaksToDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'quantityRulesToAdd'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'QuantityRuleInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'quantityRulesToDeleteByVariantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'pricesToAdd'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PriceListPriceInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'pricesToDeleteByVariantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'QuantityPricingByVariantUpdatePayload': { kind: 'OBJECT'; name: 'QuantityPricingByVariantUpdatePayload'; fields: { 'productVariants': { name: 'productVariants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityPricingByVariantUserError'; ofType: null; }; }; }; } }; }; };
    'QuantityPricingByVariantUserError': { kind: 'OBJECT'; name: 'QuantityPricingByVariantUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'QuantityPricingByVariantUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'QuantityPricingByVariantUserErrorCode': { name: 'QuantityPricingByVariantUserErrorCode'; enumValues: 'BLANK' | 'PRICE_LIST_NOT_FOUND' | 'GENERIC_ERROR' | 'QUANTITY_PRICE_BREAK_ADD_INVALID' | 'QUANTITY_PRICE_BREAK_ADD_PRICE_LIST_PRICE_NOT_FOUND' | 'QUANTITY_PRICE_BREAK_ADD_LIMIT_EXCEEDED' | 'QUANTITY_PRICE_BREAK_ADD_CURRENCY_MISMATCH' | 'QUANTITY_PRICE_BREAK_ADD_FAILED_TO_SAVE' | 'QUANTITY_PRICE_BREAK_ADD_MIN_LOWER_THAN_QUANTITY_RULES_MIN' | 'QUANTITY_PRICE_BREAK_ADD_MIN_HIGHER_THAN_QUANTITY_RULES_MAX' | 'QUANTITY_PRICE_BREAK_ADD_MIN_NOT_A_MULTIPLE_OF_QUANTITY_RULES_INCREMENT' | 'QUANTITY_PRICE_BREAK_ADD_VARIANT_NOT_FOUND' | 'QUANTITY_PRICE_BREAK_ADD_DUPLICATE_INPUT_FOR_VARIANT_AND_MIN' | 'QUANTITY_PRICE_BREAK_DELETE_NOT_FOUND' | 'QUANTITY_PRICE_BREAK_DELETE_FAILED' | 'QUANTITY_RULE_ADD_VARIANT_NOT_FOUND' | 'QUANTITY_RULE_ADD_MIN_HIGHER_THAN_QUANTITY_PRICE_BREAK_MIN' | 'QUANTITY_RULE_ADD_MAX_LOWER_THAN_QUANTITY_PRICE_BREAK_MIN' | 'QUANTITY_RULE_ADD_INCREMENT_NOT_A_MULTIPLE_OF_QUANTITY_PRICE_BREAK_MIN' | 'QUANTITY_RULE_ADD_CATALOG_CONTEXT_NOT_SUPPORTED' | 'QUANTITY_RULE_ADD_INCREMENT_IS_GREATER_THAN_MINIMUM' | 'QUANTITY_RULE_ADD_MINIMUM_NOT_A_MULTIPLE_OF_INCREMENT' | 'QUANTITY_RULE_ADD_MAXIMUM_NOT_A_MULTIPLE_OF_INCREMENT' | 'QUANTITY_RULE_ADD_MINIMUM_GREATER_THAN_MAXIMUM' | 'QUANTITY_RULE_ADD_INCREMENT_IS_LESS_THAN_ONE' | 'QUANTITY_RULE_ADD_MINIMUM_IS_LESS_THAN_ONE' | 'QUANTITY_RULE_ADD_MAXIMUM_IS_LESS_THAN_ONE' | 'QUANTITY_RULE_ADD_DUPLICATE_INPUT_FOR_VARIANT' | 'QUANTITY_RULE_DELETE_RULE_NOT_FOUND' | 'QUANTITY_RULE_DELETE_VARIANT_NOT_FOUND' | 'PRICE_ADD_CURRENCY_MISMATCH' | 'PRICE_ADD_VARIANT_NOT_FOUND' | 'PRICE_ADD_DUPLICATE_INPUT_FOR_VARIANT' | 'PRICE_DELETE_PRICE_NOT_FIXED' | 'PRICE_DELETE_VARIANT_NOT_FOUND'; };
    'QuantityRule': { kind: 'OBJECT'; name: 'QuantityRule'; fields: { 'increment': { name: 'increment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'isDefault': { name: 'isDefault'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'maximum': { name: 'maximum'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minimum': { name: 'minimum'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'originType': { name: 'originType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'QuantityRuleOriginType'; ofType: null; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'QuantityRuleConnection': { kind: 'OBJECT'; name: 'QuantityRuleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityRuleEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityRule'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'QuantityRuleEdge': { kind: 'OBJECT'; name: 'QuantityRuleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityRule'; ofType: null; }; } }; }; };
    'QuantityRuleInput': { kind: 'INPUT_OBJECT'; name: 'QuantityRuleInput'; isOneOf: false; inputFields: [{ name: 'increment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'maximum'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: "null" }, { name: 'minimum'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'variantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'QuantityRuleOriginType': { name: 'QuantityRuleOriginType'; enumValues: 'FIXED' | 'RELATIVE'; };
    'QuantityRuleUserError': { kind: 'OBJECT'; name: 'QuantityRuleUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'QuantityRuleUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'QuantityRuleUserErrorCode': { name: 'QuantityRuleUserErrorCode'; enumValues: 'BLANK' | 'PRODUCT_VARIANT_DOES_NOT_EXIST' | 'PRICE_LIST_DOES_NOT_EXIST' | 'VARIANT_QUANTITY_RULE_DOES_NOT_EXIST' | 'MINIMUM_IS_GREATER_THAN_MAXIMUM' | 'MINIMUM_IS_HIGHER_THAN_QUANTITY_PRICE_BREAK_MINIMUM' | 'MAXIMUM_IS_LOWER_THAN_QUANTITY_PRICE_BREAK_MINIMUM' | 'INCREMENT_NOT_A_MULTIPLE_OF_QUANTITY_PRICE_BREAK_MINIMUM' | 'INCREMENT_IS_GREATER_THAN_MINIMUM' | 'GREATER_THAN_OR_EQUAL_TO' | 'MAXIMUM_NOT_MULTIPLE_OF_INCREMENT' | 'MINIMUM_NOT_MULTIPLE_OF_INCREMENT' | 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES' | 'DUPLICATE_INPUT_FOR_VARIANT' | 'GENERIC_ERROR'; };
    'QuantityRulesAddPayload': { kind: 'OBJECT'; name: 'QuantityRulesAddPayload'; fields: { 'quantityRules': { name: 'quantityRules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityRule'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityRuleUserError'; ofType: null; }; }; }; } }; }; };
    'QuantityRulesDeletePayload': { kind: 'OBJECT'; name: 'QuantityRulesDeletePayload'; fields: { 'deletedQuantityRulesVariantIds': { name: 'deletedQuantityRulesVariantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QuantityRuleUserError'; ofType: null; }; }; }; } }; }; };
    'QueryRoot': { kind: 'OBJECT'; name: 'QueryRoot'; fields: { 'abandonment': { name: 'abandonment'; type: { kind: 'OBJECT'; name: 'Abandonment'; ofType: null; } }; 'abandonmentByAbandonedCheckoutId': { name: 'abandonmentByAbandonedCheckoutId'; type: { kind: 'OBJECT'; name: 'Abandonment'; ofType: null; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appByHandle': { name: 'appByHandle'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appByKey': { name: 'appByKey'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appDiscountType': { name: 'appDiscountType'; type: { kind: 'OBJECT'; name: 'AppDiscountType'; ofType: null; } }; 'appDiscountTypes': { name: 'appDiscountTypes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppDiscountType'; ofType: null; }; }; }; } }; 'appInstallation': { name: 'appInstallation'; type: { kind: 'OBJECT'; name: 'AppInstallation'; ofType: null; } }; 'appInstallations': { name: 'appInstallations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppInstallationConnection'; ofType: null; }; } }; 'assignedFulfillmentOrders': { name: 'assignedFulfillmentOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderConnection'; ofType: null; }; } }; 'automaticDiscount': { name: 'automaticDiscount'; type: { kind: 'UNION'; name: 'DiscountAutomatic'; ofType: null; } }; 'automaticDiscountNode': { name: 'automaticDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountAutomaticNode'; ofType: null; } }; 'automaticDiscountNodes': { name: 'automaticDiscountNodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAutomaticNodeConnection'; ofType: null; }; } }; 'automaticDiscountSavedSearches': { name: 'automaticDiscountSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'automaticDiscounts': { name: 'automaticDiscounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAutomaticConnection'; ofType: null; }; } }; 'availableCarrierServices': { name: 'availableCarrierServices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCarrierServiceAndLocations'; ofType: null; }; }; }; } }; 'availableLocales': { name: 'availableLocales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Locale'; ofType: null; }; }; }; } }; 'carrierService': { name: 'carrierService'; type: { kind: 'OBJECT'; name: 'DeliveryCarrierService'; ofType: null; } }; 'carrierServices': { name: 'carrierServices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCarrierServiceConnection'; ofType: null; }; } }; 'cartTransforms': { name: 'cartTransforms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CartTransformConnection'; ofType: null; }; } }; 'cashTrackingSession': { name: 'cashTrackingSession'; type: { kind: 'OBJECT'; name: 'CashTrackingSession'; ofType: null; } }; 'cashTrackingSessions': { name: 'cashTrackingSessions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CashTrackingSessionConnection'; ofType: null; }; } }; 'catalog': { name: 'catalog'; type: { kind: 'INTERFACE'; name: 'Catalog'; ofType: null; } }; 'catalogOperations': { name: 'catalogOperations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'ResourceOperation'; ofType: null; }; }; }; } }; 'catalogs': { name: 'catalogs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CatalogConnection'; ofType: null; }; } }; 'catalogsCount': { name: 'catalogsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'channels': { name: 'channels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelConnection'; ofType: null; }; } }; 'checkoutBranding': { name: 'checkoutBranding'; type: { kind: 'OBJECT'; name: 'CheckoutBranding'; ofType: null; } }; 'checkoutProfile': { name: 'checkoutProfile'; type: { kind: 'OBJECT'; name: 'CheckoutProfile'; ofType: null; } }; 'checkoutProfiles': { name: 'checkoutProfiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutProfileConnection'; ofType: null; }; } }; 'codeDiscountNode': { name: 'codeDiscountNode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'codeDiscountNodeByCode': { name: 'codeDiscountNodeByCode'; type: { kind: 'OBJECT'; name: 'DiscountCodeNode'; ofType: null; } }; 'codeDiscountNodes': { name: 'codeDiscountNodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountCodeNodeConnection'; ofType: null; }; } }; 'codeDiscountSavedSearches': { name: 'codeDiscountSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionByHandle': { name: 'collectionByHandle'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionRulesConditions': { name: 'collectionRulesConditions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionRuleConditions'; ofType: null; }; }; }; } }; 'collectionSavedSearches': { name: 'collectionSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'collections': { name: 'collections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionConnection'; ofType: null; }; } }; 'companies': { name: 'companies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyConnection'; ofType: null; }; } }; 'companiesCount': { name: 'companiesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'company': { name: 'company'; type: { kind: 'OBJECT'; name: 'Company'; ofType: null; } }; 'companyContact': { name: 'companyContact'; type: { kind: 'OBJECT'; name: 'CompanyContact'; ofType: null; } }; 'companyContactRole': { name: 'companyContactRole'; type: { kind: 'OBJECT'; name: 'CompanyContactRole'; ofType: null; } }; 'companyLocation': { name: 'companyLocation'; type: { kind: 'OBJECT'; name: 'CompanyLocation'; ofType: null; } }; 'companyLocations': { name: 'companyLocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CompanyLocationConnection'; ofType: null; }; } }; 'currentAppInstallation': { name: 'currentAppInstallation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppInstallation'; ofType: null; }; } }; 'currentBulkOperation': { name: 'currentBulkOperation'; type: { kind: 'OBJECT'; name: 'BulkOperation'; ofType: null; } }; 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'customerMergeJobStatus': { name: 'customerMergeJobStatus'; type: { kind: 'OBJECT'; name: 'CustomerMergeRequest'; ofType: null; } }; 'customerMergePreview': { name: 'customerMergePreview'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerMergePreview'; ofType: null; }; } }; 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'customerSegmentMembers': { name: 'customerSegmentMembers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerSegmentMemberConnection'; ofType: null; }; } }; 'customerSegmentMembersQuery': { name: 'customerSegmentMembersQuery'; type: { kind: 'OBJECT'; name: 'CustomerSegmentMembersQuery'; ofType: null; } }; 'customerSegmentMembership': { name: 'customerSegmentMembership'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentMembershipResponse'; ofType: null; }; } }; 'customers': { name: 'customers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerConnection'; ofType: null; }; } }; 'customersCount': { name: 'customersCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'deletionEvents': { name: 'deletionEvents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeletionEventConnection'; ofType: null; }; } }; 'deliveryCustomization': { name: 'deliveryCustomization'; type: { kind: 'OBJECT'; name: 'DeliveryCustomization'; ofType: null; } }; 'deliveryCustomizations': { name: 'deliveryCustomizations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryCustomizationConnection'; ofType: null; }; } }; 'deliveryProfile': { name: 'deliveryProfile'; type: { kind: 'OBJECT'; name: 'DeliveryProfile'; ofType: null; } }; 'deliveryProfiles': { name: 'deliveryProfiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeliveryProfileConnection'; ofType: null; }; } }; 'deliveryPromiseProvider': { name: 'deliveryPromiseProvider'; type: { kind: 'OBJECT'; name: 'DeliveryPromiseProvider'; ofType: null; } }; 'deliverySettings': { name: 'deliverySettings'; type: { kind: 'OBJECT'; name: 'DeliverySetting'; ofType: null; } }; 'discountCodesCount': { name: 'discountCodesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'discountNode': { name: 'discountNode'; type: { kind: 'OBJECT'; name: 'DiscountNode'; ofType: null; } }; 'discountNodes': { name: 'discountNodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountNodeConnection'; ofType: null; }; } }; 'discountRedeemCodeBulkCreation': { name: 'discountRedeemCodeBulkCreation'; type: { kind: 'OBJECT'; name: 'DiscountRedeemCodeBulkCreation'; ofType: null; } }; 'discountRedeemCodeSavedSearches': { name: 'discountRedeemCodeSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'dispute': { name: 'dispute'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsDispute'; ofType: null; } }; 'disputeEvidence': { name: 'disputeEvidence'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeEvidence'; ofType: null; } }; 'domain': { name: 'domain'; type: { kind: 'OBJECT'; name: 'Domain'; ofType: null; } }; 'draftOrder': { name: 'draftOrder'; type: { kind: 'OBJECT'; name: 'DraftOrder'; ofType: null; } }; 'draftOrderSavedSearches': { name: 'draftOrderSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'draftOrderTag': { name: 'draftOrderTag'; type: { kind: 'OBJECT'; name: 'DraftOrderTag'; ofType: null; } }; 'draftOrders': { name: 'draftOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderConnection'; ofType: null; }; } }; 'fileSavedSearches': { name: 'fileSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'files': { name: 'files'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FileConnection'; ofType: null; }; } }; 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'fulfillmentConstraintRules': { name: 'fulfillmentConstraintRules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentConstraintRule'; ofType: null; }; }; }; } }; 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'OBJECT'; name: 'FulfillmentOrder'; ofType: null; } }; 'fulfillmentOrders': { name: 'fulfillmentOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderConnection'; ofType: null; }; } }; 'fulfillmentService': { name: 'fulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'giftCards': { name: 'giftCards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardConnection'; ofType: null; }; } }; 'giftCardsCount': { name: 'giftCardsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'inventoryItem': { name: 'inventoryItem'; type: { kind: 'OBJECT'; name: 'InventoryItem'; ofType: null; } }; 'inventoryItems': { name: 'inventoryItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryItemConnection'; ofType: null; }; } }; 'inventoryLevel': { name: 'inventoryLevel'; type: { kind: 'OBJECT'; name: 'InventoryLevel'; ofType: null; } }; 'inventoryProperties': { name: 'inventoryProperties'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryProperties'; ofType: null; }; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'locations': { name: 'locations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationConnection'; ofType: null; }; } }; 'locationsAvailableForDeliveryProfiles': { name: 'locationsAvailableForDeliveryProfiles'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; }; } }; 'locationsAvailableForDeliveryProfilesConnection': { name: 'locationsAvailableForDeliveryProfilesConnection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationConnection'; ofType: null; }; } }; 'locationsCount': { name: 'locationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'manualHoldsFulfillmentOrders': { name: 'manualHoldsFulfillmentOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderConnection'; ofType: null; }; } }; 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'marketByGeography': { name: 'marketByGeography'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'marketLocalizableResource': { name: 'marketLocalizableResource'; type: { kind: 'OBJECT'; name: 'MarketLocalizableResource'; ofType: null; } }; 'marketLocalizableResources': { name: 'marketLocalizableResources'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketLocalizableResourceConnection'; ofType: null; }; } }; 'marketLocalizableResourcesByIds': { name: 'marketLocalizableResourcesByIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketLocalizableResourceConnection'; ofType: null; }; } }; 'marketingActivities': { name: 'marketingActivities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingActivityConnection'; ofType: null; }; } }; 'marketingActivity': { name: 'marketingActivity'; type: { kind: 'OBJECT'; name: 'MarketingActivity'; ofType: null; } }; 'marketingEvent': { name: 'marketingEvent'; type: { kind: 'OBJECT'; name: 'MarketingEvent'; ofType: null; } }; 'marketingEvents': { name: 'marketingEvents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingEventConnection'; ofType: null; }; } }; 'markets': { name: 'markets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketConnection'; ofType: null; }; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'menus': { name: 'menus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuConnection'; ofType: null; }; } }; 'metafieldDefinition': { name: 'metafieldDefinition'; type: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; } }; 'metafieldDefinitionTypes': { name: 'metafieldDefinitionTypes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionType'; ofType: null; }; }; }; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafieldStorefrontVisibilities': { name: 'metafieldStorefrontVisibilities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibilityConnection'; ofType: null; }; } }; 'metafieldStorefrontVisibility': { name: 'metafieldStorefrontVisibility'; type: { kind: 'OBJECT'; name: 'MetafieldStorefrontVisibility'; ofType: null; } }; 'metaobject': { name: 'metaobject'; type: { kind: 'OBJECT'; name: 'Metaobject'; ofType: null; } }; 'metaobjectByHandle': { name: 'metaobjectByHandle'; type: { kind: 'OBJECT'; name: 'Metaobject'; ofType: null; } }; 'metaobjectDefinition': { name: 'metaobjectDefinition'; type: { kind: 'OBJECT'; name: 'MetaobjectDefinition'; ofType: null; } }; 'metaobjectDefinitionByType': { name: 'metaobjectDefinitionByType'; type: { kind: 'OBJECT'; name: 'MetaobjectDefinition'; ofType: null; } }; 'metaobjectDefinitions': { name: 'metaobjectDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectDefinitionConnection'; ofType: null; }; } }; 'metaobjects': { name: 'metaobjects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectConnection'; ofType: null; }; } }; 'mobilePlatformApplication': { name: 'mobilePlatformApplication'; type: { kind: 'UNION'; name: 'MobilePlatformApplication'; ofType: null; } }; 'mobilePlatformApplications': { name: 'mobilePlatformApplications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MobilePlatformApplicationConnection'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'Node'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'INTERFACE'; name: 'Node'; ofType: null; }; }; } }; 'onlineStore': { name: 'onlineStore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OnlineStore'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderPaymentStatus': { name: 'orderPaymentStatus'; type: { kind: 'OBJECT'; name: 'OrderPaymentStatus'; ofType: null; } }; 'orderSavedSearches': { name: 'orderSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'ordersCount': { name: 'ordersCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'paymentCustomization': { name: 'paymentCustomization'; type: { kind: 'OBJECT'; name: 'PaymentCustomization'; ofType: null; } }; 'paymentCustomizations': { name: 'paymentCustomizations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentCustomizationConnection'; ofType: null; }; } }; 'paymentTermsTemplates': { name: 'paymentTermsTemplates'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentTermsTemplate'; ofType: null; }; }; }; } }; 'pendingOrdersCount': { name: 'pendingOrdersCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'priceList': { name: 'priceList'; type: { kind: 'OBJECT'; name: 'PriceList'; ofType: null; } }; 'priceLists': { name: 'priceLists'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceListConnection'; ofType: null; }; } }; 'priceRule': { name: 'priceRule'; type: { kind: 'OBJECT'; name: 'PriceRule'; ofType: null; } }; 'priceRuleSavedSearches': { name: 'priceRuleSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'priceRules': { name: 'priceRules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleConnection'; ofType: null; }; } }; 'primaryMarket': { name: 'primaryMarket'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Market'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productByHandle': { name: 'productByHandle'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productDuplicateJob': { name: 'productDuplicateJob'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductDuplicateJob'; ofType: null; }; } }; 'productFeed': { name: 'productFeed'; type: { kind: 'OBJECT'; name: 'ProductFeed'; ofType: null; } }; 'productFeeds': { name: 'productFeeds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductFeedConnection'; ofType: null; }; } }; 'productOperation': { name: 'productOperation'; type: { kind: 'INTERFACE'; name: 'ProductOperation'; ofType: null; } }; 'productResourceFeedback': { name: 'productResourceFeedback'; type: { kind: 'OBJECT'; name: 'ProductResourceFeedback'; ofType: null; } }; 'productSavedSearches': { name: 'productSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantConnection'; ofType: null; }; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductConnection'; ofType: null; }; } }; 'productsCount': { name: 'productsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'publicApiVersions': { name: 'publicApiVersions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ApiVersion'; ofType: null; }; }; }; } }; 'publication': { name: 'publication'; type: { kind: 'OBJECT'; name: 'Publication'; ofType: null; } }; 'publications': { name: 'publications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PublicationConnection'; ofType: null; }; } }; 'publicationsCount': { name: 'publicationsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'publishedProductsCount': { name: 'publishedProductsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'refund': { name: 'refund'; type: { kind: 'OBJECT'; name: 'Refund'; ofType: null; } }; 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'returnCalculate': { name: 'returnCalculate'; type: { kind: 'OBJECT'; name: 'CalculatedReturn'; ofType: null; } }; 'returnableFulfillment': { name: 'returnableFulfillment'; type: { kind: 'OBJECT'; name: 'ReturnableFulfillment'; ofType: null; } }; 'returnableFulfillments': { name: 'returnableFulfillments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnableFulfillmentConnection'; ofType: null; }; } }; 'reverseDelivery': { name: 'reverseDelivery'; type: { kind: 'OBJECT'; name: 'ReverseDelivery'; ofType: null; } }; 'reverseFulfillmentOrder': { name: 'reverseFulfillmentOrder'; type: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrder'; ofType: null; } }; 'scriptTag': { name: 'scriptTag'; type: { kind: 'OBJECT'; name: 'ScriptTag'; ofType: null; } }; 'scriptTags': { name: 'scriptTags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ScriptTagConnection'; ofType: null; }; } }; 'segment': { name: 'segment'; type: { kind: 'OBJECT'; name: 'Segment'; ofType: null; } }; 'segmentFilterSuggestions': { name: 'segmentFilterSuggestions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentFilterConnection'; ofType: null; }; } }; 'segmentFilters': { name: 'segmentFilters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentFilterConnection'; ofType: null; }; } }; 'segmentMigrations': { name: 'segmentMigrations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentMigrationConnection'; ofType: null; }; } }; 'segmentValueSuggestions': { name: 'segmentValueSuggestions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentValueConnection'; ofType: null; }; } }; 'segments': { name: 'segments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentConnection'; ofType: null; }; } }; 'segmentsCount': { name: 'segmentsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'sellingPlanGroup': { name: 'sellingPlanGroup'; type: { kind: 'OBJECT'; name: 'SellingPlanGroup'; ofType: null; } }; 'sellingPlanGroups': { name: 'sellingPlanGroups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupConnection'; ofType: null; }; } }; 'serverPixel': { name: 'serverPixel'; type: { kind: 'OBJECT'; name: 'ServerPixel'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'shopBillingPreferences': { name: 'shopBillingPreferences'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopBillingPreferences'; ofType: null; }; } }; 'shopLocales': { name: 'shopLocales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopLocale'; ofType: null; }; }; }; } }; 'shopifyFunction': { name: 'shopifyFunction'; type: { kind: 'OBJECT'; name: 'ShopifyFunction'; ofType: null; } }; 'shopifyFunctions': { name: 'shopifyFunctions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyFunctionConnection'; ofType: null; }; } }; 'shopifyPaymentsAccount': { name: 'shopifyPaymentsAccount'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsAccount'; ofType: null; } }; 'staffMember': { name: 'staffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'standardMetafieldDefinitionTemplates': { name: 'standardMetafieldDefinitionTemplates'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionTemplateConnection'; ofType: null; }; } }; 'storeCreditAccount': { name: 'storeCreditAccount'; type: { kind: 'OBJECT'; name: 'StoreCreditAccount'; ofType: null; } }; 'subscriptionBillingAttempt': { name: 'subscriptionBillingAttempt'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingAttempt'; ofType: null; } }; 'subscriptionBillingAttempts': { name: 'subscriptionBillingAttempts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingAttemptConnection'; ofType: null; }; } }; 'subscriptionBillingCycle': { name: 'subscriptionBillingCycle'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; ofType: null; } }; 'subscriptionBillingCycleBulkResults': { name: 'subscriptionBillingCycleBulkResults'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleConnection'; ofType: null; }; } }; 'subscriptionBillingCycles': { name: 'subscriptionBillingCycles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleConnection'; ofType: null; }; } }; 'subscriptionContract': { name: 'subscriptionContract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'subscriptionContracts': { name: 'subscriptionContracts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractConnection'; ofType: null; }; } }; 'subscriptionDraft': { name: 'subscriptionDraft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'taxonomy': { name: 'taxonomy'; type: { kind: 'OBJECT'; name: 'Taxonomy'; ofType: null; } }; 'tenderTransactions': { name: 'tenderTransactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TenderTransactionConnection'; ofType: null; }; } }; 'translatableResource': { name: 'translatableResource'; type: { kind: 'OBJECT'; name: 'TranslatableResource'; ofType: null; } }; 'translatableResources': { name: 'translatableResources'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslatableResourceConnection'; ofType: null; }; } }; 'translatableResourcesByIds': { name: 'translatableResourcesByIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslatableResourceConnection'; ofType: null; }; } }; 'urlRedirect': { name: 'urlRedirect'; type: { kind: 'OBJECT'; name: 'UrlRedirect'; ofType: null; } }; 'urlRedirectImport': { name: 'urlRedirectImport'; type: { kind: 'OBJECT'; name: 'UrlRedirectImport'; ofType: null; } }; 'urlRedirectSavedSearches': { name: 'urlRedirectSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'urlRedirects': { name: 'urlRedirects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectConnection'; ofType: null; }; } }; 'validation': { name: 'validation'; type: { kind: 'OBJECT'; name: 'Validation'; ofType: null; } }; 'validations': { name: 'validations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ValidationConnection'; ofType: null; }; } }; 'webPixel': { name: 'webPixel'; type: { kind: 'OBJECT'; name: 'WebPixel'; ofType: null; } }; 'webhookSubscription': { name: 'webhookSubscription'; type: { kind: 'OBJECT'; name: 'WebhookSubscription'; ofType: null; } }; 'webhookSubscriptions': { name: 'webhookSubscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookSubscriptionConnection'; ofType: null; }; } }; 'webhookSubscriptionsCount': { name: 'webhookSubscriptionsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; }; };
    'Refund': { kind: 'OBJECT'; name: 'Refund'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'duties': { name: 'duties'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundDuty'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; 'refundLineItems': { name: 'refundLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundLineItemConnection'; ofType: null; }; } }; 'refundShippingLines': { name: 'refundShippingLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundShippingLineConnection'; ofType: null; }; } }; 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'staffMember': { name: 'staffMember'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; 'totalRefunded': { name: 'totalRefunded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'totalRefundedSet': { name: 'totalRefundedSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'transactions': { name: 'transactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderTransactionConnection'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'RefundAgreement': { kind: 'OBJECT'; name: 'RefundAgreement'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'happenedAt': { name: 'happenedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderActionType'; ofType: null; }; } }; 'refund': { name: 'refund'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Refund'; ofType: null; }; } }; 'sales': { name: 'sales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleConnection'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; }; };
    'RefundConnection': { kind: 'OBJECT'; name: 'RefundConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Refund'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'RefundCreatePayload': { kind: 'OBJECT'; name: 'RefundCreatePayload'; fields: { 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'refund': { name: 'refund'; type: { kind: 'OBJECT'; name: 'Refund'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'RefundDuty': { kind: 'OBJECT'; name: 'RefundDuty'; fields: { 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'originalDuty': { name: 'originalDuty'; type: { kind: 'OBJECT'; name: 'Duty'; ofType: null; } }; }; };
    'RefundDutyInput': { kind: 'INPUT_OBJECT'; name: 'RefundDutyInput'; isOneOf: false; inputFields: [{ name: 'dutyId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'refundType'; type: { kind: 'ENUM'; name: 'RefundDutyRefundType'; ofType: null; }; defaultValue: null }]; };
    'RefundDutyRefundType': { name: 'RefundDutyRefundType'; enumValues: 'PROPORTIONAL' | 'FULL'; };
    'RefundEdge': { kind: 'OBJECT'; name: 'RefundEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Refund'; ofType: null; }; } }; }; };
    'RefundInput': { kind: 'INPUT_OBJECT'; name: 'RefundInput'; isOneOf: false; inputFields: [{ name: 'currency'; type: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; defaultValue: null }, { name: 'orderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notify'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'shipping'; type: { kind: 'INPUT_OBJECT'; name: 'ShippingRefundInput'; ofType: null; }; defaultValue: null }, { name: 'refundLineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'RefundLineItemInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'refundDuties'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'RefundDutyInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'transactions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderTransactionInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'RefundLineItem': { kind: 'OBJECT'; name: 'RefundLineItem'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'priceSet': { name: 'priceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'restockType': { name: 'restockType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RefundLineItemRestockType'; ofType: null; }; } }; 'restocked': { name: 'restocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'subtotal': { name: 'subtotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'subtotalSet': { name: 'subtotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTax': { name: 'totalTax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'totalTaxSet': { name: 'totalTaxSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'RefundLineItemConnection': { kind: 'OBJECT'; name: 'RefundLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'RefundLineItemEdge': { kind: 'OBJECT'; name: 'RefundLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundLineItem'; ofType: null; }; } }; }; };
    'RefundLineItemInput': { kind: 'INPUT_OBJECT'; name: 'RefundLineItemInput'; isOneOf: false; inputFields: [{ name: 'lineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'restockType'; type: { kind: 'ENUM'; name: 'RefundLineItemRestockType'; ofType: null; }; defaultValue: null }, { name: 'locationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'RefundLineItemRestockType': { name: 'RefundLineItemRestockType'; enumValues: 'RETURN' | 'CANCEL' | 'LEGACY_RESTOCK' | 'NO_RESTOCK'; };
    'RefundShippingInput': { kind: 'INPUT_OBJECT'; name: 'RefundShippingInput'; isOneOf: false; inputFields: [{ name: 'shippingRefundAmount'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'fullRefund'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'RefundShippingLine': { kind: 'OBJECT'; name: 'RefundShippingLine'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'shippingLine': { name: 'shippingLine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingLine'; ofType: null; }; } }; }; };
    'RefundShippingLineConnection': { kind: 'OBJECT'; name: 'RefundShippingLineConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundShippingLineEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundShippingLine'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'RefundShippingLineEdge': { kind: 'OBJECT'; name: 'RefundShippingLineEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundShippingLine'; ofType: null; }; } }; }; };
    'RemoteAuthorizeNetCustomerPaymentProfileInput': { kind: 'INPUT_OBJECT'; name: 'RemoteAuthorizeNetCustomerPaymentProfileInput'; isOneOf: false; inputFields: [{ name: 'customerProfileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'customerPaymentProfileId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'RemoteBraintreePaymentMethodInput': { kind: 'INPUT_OBJECT'; name: 'RemoteBraintreePaymentMethodInput'; isOneOf: false; inputFields: [{ name: 'customerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'paymentMethodToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'RemoteStripePaymentMethodInput': { kind: 'INPUT_OBJECT'; name: 'RemoteStripePaymentMethodInput'; isOneOf: false; inputFields: [{ name: 'customerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'paymentMethodId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ResourceAlert': { kind: 'OBJECT'; name: 'ResourceAlert'; fields: { 'actions': { name: 'actions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourceAlertAction'; ofType: null; }; }; }; } }; 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'HTML'; ofType: null; }; } }; 'dismissibleHandle': { name: 'dismissibleHandle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'ENUM'; name: 'ResourceAlertIcon'; ofType: null; } }; 'severity': { name: 'severity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ResourceAlertSeverity'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ResourceAlertAction': { kind: 'OBJECT'; name: 'ResourceAlertAction'; fields: { 'primary': { name: 'primary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'show': { name: 'show'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'ResourceAlertIcon': { name: 'ResourceAlertIcon'; enumValues: 'CHECKMARK_CIRCLE' | 'INFORMATION_CIRCLE'; };
    'ResourceAlertSeverity': { name: 'ResourceAlertSeverity'; enumValues: 'DEFAULT' | 'INFO' | 'WARNING' | 'SUCCESS' | 'CRITICAL' | 'ERROR'; };
    'ResourceFeedback': { kind: 'OBJECT'; name: 'ResourceFeedback'; fields: { 'appFeedback': { name: 'appFeedback'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppFeedback'; ofType: null; }; }; }; } }; 'details': { name: 'details'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppFeedback'; ofType: null; }; }; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ResourceFeedbackCreateInput': { kind: 'INPUT_OBJECT'; name: 'ResourceFeedbackCreateInput'; isOneOf: false; inputFields: [{ name: 'feedbackGeneratedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'messages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ResourceFeedbackState'; ofType: null; }; }; defaultValue: null }]; };
    'ResourceFeedbackState': { name: 'ResourceFeedbackState'; enumValues: 'ACCEPTED' | 'REQUIRES_ACTION'; };
    'ResourceOperation': { kind: 'INTERFACE'; name: 'ResourceOperation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'processedRowCount': { name: 'processedRowCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rowCount': { name: 'rowCount'; type: { kind: 'OBJECT'; name: 'RowCount'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ResourceOperationStatus'; ofType: null; }; } }; }; possibleTypes: 'AddAllProductsOperation' | 'CatalogCsvOperation' | 'PublicationResourceOperation'; };
    'ResourceOperationStatus': { name: 'ResourceOperationStatus'; enumValues: 'CREATED' | 'ACTIVE' | 'COMPLETE'; };
    'ResourcePublication': { kind: 'OBJECT'; name: 'ResourcePublication'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'isPublished': { name: 'isPublished'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publication': { name: 'publication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Publication'; ofType: null; }; } }; 'publishDate': { name: 'publishDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'publishable': { name: 'publishable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Publishable'; ofType: null; }; } }; }; };
    'ResourcePublicationConnection': { kind: 'OBJECT'; name: 'ResourcePublicationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublication'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ResourcePublicationEdge': { kind: 'OBJECT'; name: 'ResourcePublicationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublication'; ofType: null; }; } }; }; };
    'ResourcePublicationV2': { kind: 'OBJECT'; name: 'ResourcePublicationV2'; fields: { 'isPublished': { name: 'isPublished'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publication': { name: 'publication'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Publication'; ofType: null; }; } }; 'publishDate': { name: 'publishDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'publishable': { name: 'publishable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Publishable'; ofType: null; }; } }; }; };
    'ResourcePublicationV2Connection': { kind: 'OBJECT'; name: 'ResourcePublicationV2Connection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationV2Edge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationV2'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ResourcePublicationV2Edge': { kind: 'OBJECT'; name: 'ResourcePublicationV2Edge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResourcePublicationV2'; ofType: null; }; } }; }; };
    'RestockingFee': { kind: 'OBJECT'; name: 'RestockingFee'; fields: { 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'percentage': { name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'RestockingFeeInput': { kind: 'INPUT_OBJECT'; name: 'RestockingFeeInput'; isOneOf: false; inputFields: [{ name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'Return': { kind: 'OBJECT'; name: 'Return'; fields: { 'decline': { name: 'decline'; type: { kind: 'OBJECT'; name: 'ReturnDecline'; ofType: null; } }; 'exchangeLineItems': { name: 'exchangeLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExchangeLineItemConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; 'refunds': { name: 'refunds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundConnection'; ofType: null; }; } }; 'returnLineItems': { name: 'returnLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnLineItemTypeConnection'; ofType: null; }; } }; 'returnShippingFees': { name: 'returnShippingFees'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnShippingFee'; ofType: null; }; }; }; } }; 'reverseFulfillmentOrders': { name: 'reverseFulfillmentOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderConnection'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReturnStatus'; ofType: null; }; } }; 'suggestedRefund': { name: 'suggestedRefund'; type: { kind: 'OBJECT'; name: 'SuggestedReturnRefund'; ofType: null; } }; 'totalQuantity': { name: 'totalQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ReturnAgreement': { kind: 'OBJECT'; name: 'ReturnAgreement'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'happenedAt': { name: 'happenedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderActionType'; ofType: null; }; } }; 'return': { name: 'return'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Return'; ofType: null; }; } }; 'sales': { name: 'sales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleConnection'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; }; };
    'ReturnApproveRequestInput': { kind: 'INPUT_OBJECT'; name: 'ReturnApproveRequestInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ReturnApproveRequestPayload': { kind: 'OBJECT'; name: 'ReturnApproveRequestPayload'; fields: { 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReturnCancelPayload': { kind: 'OBJECT'; name: 'ReturnCancelPayload'; fields: { 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReturnClosePayload': { kind: 'OBJECT'; name: 'ReturnClosePayload'; fields: { 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReturnConnection': { kind: 'OBJECT'; name: 'ReturnConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Return'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReturnCreatePayload': { kind: 'OBJECT'; name: 'ReturnCreatePayload'; fields: { 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReturnDecline': { kind: 'OBJECT'; name: 'ReturnDecline'; fields: { 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReturnDeclineReason'; ofType: null; }; } }; }; };
    'ReturnDeclineReason': { name: 'ReturnDeclineReason'; enumValues: 'RETURN_PERIOD_ENDED' | 'FINAL_SALE' | 'OTHER'; };
    'ReturnDeclineRequestInput': { kind: 'INPUT_OBJECT'; name: 'ReturnDeclineRequestInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'declineReason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReturnDeclineReason'; ofType: null; }; }; defaultValue: null }]; };
    'ReturnDeclineRequestPayload': { kind: 'OBJECT'; name: 'ReturnDeclineRequestPayload'; fields: { 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReturnEdge': { kind: 'OBJECT'; name: 'ReturnEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Return'; ofType: null; }; } }; }; };
    'ReturnErrorCode': { name: 'ReturnErrorCode'; enumValues: 'INTERNAL_ERROR' | 'TOO_MANY_ARGUMENTS' | 'BLANK' | 'EQUAL_TO' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'INCLUSION' | 'INVALID' | 'LESS_THAN' | 'LESS_THAN_OR_EQUAL_TO' | 'NOT_A_NUMBER' | 'PRESENT' | 'TAKEN' | 'TOO_BIG' | 'TOO_LONG' | 'TOO_SHORT' | 'WRONG_LENGTH' | 'ALREADY_EXISTS' | 'CREATION_FAILED' | 'FEATURE_NOT_ENABLED' | 'INVALID_STATE' | 'NOTIFICATION_FAILED' | 'NOT_EDITABLE' | 'NOT_FOUND'; };
    'ReturnInput': { kind: 'INPUT_OBJECT'; name: 'ReturnInput'; isOneOf: false; inputFields: [{ name: 'exchangeLineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ExchangeLineItemInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'requestedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'orderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'returnLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ReturnLineItemInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'returnShippingFee'; type: { kind: 'INPUT_OBJECT'; name: 'ReturnShippingFeeInput'; ofType: null; }; defaultValue: null }, { name: 'notifyCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'ReturnLineItem': { kind: 'OBJECT'; name: 'ReturnLineItem'; fields: { 'customerNote': { name: 'customerNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fulfillmentLineItem': { name: 'fulfillmentLineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLineItem'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'refundableQuantity': { name: 'refundableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'refundedQuantity': { name: 'refundedQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'restockingFee': { name: 'restockingFee'; type: { kind: 'OBJECT'; name: 'RestockingFee'; ofType: null; } }; 'returnReason': { name: 'returnReason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReturnReason'; ofType: null; }; } }; 'returnReasonNote': { name: 'returnReasonNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalWeight': { name: 'totalWeight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; 'withCodeDiscountedTotalPriceSet': { name: 'withCodeDiscountedTotalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'ReturnLineItemInput': { kind: 'INPUT_OBJECT'; name: 'ReturnLineItemInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'returnReason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReturnReason'; ofType: null; }; }; defaultValue: null }, { name: 'returnReasonNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"\"" }, { name: 'fulfillmentLineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'restockingFee'; type: { kind: 'INPUT_OBJECT'; name: 'RestockingFeeInput'; ofType: null; }; defaultValue: null }]; };
    'ReturnLineItemRemoveFromReturnInput': { kind: 'INPUT_OBJECT'; name: 'ReturnLineItemRemoveFromReturnInput'; isOneOf: false; inputFields: [{ name: 'returnLineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'ReturnLineItemRemoveFromReturnPayload': { kind: 'OBJECT'; name: 'ReturnLineItemRemoveFromReturnPayload'; fields: { 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReturnLineItemType': { kind: 'INTERFACE'; name: 'ReturnLineItemType'; fields: { 'customerNote': { name: 'customerNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'refundableQuantity': { name: 'refundableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'refundedQuantity': { name: 'refundedQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returnReason': { name: 'returnReason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReturnReason'; ofType: null; }; } }; 'returnReasonNote': { name: 'returnReasonNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'ReturnLineItem' | 'UnverifiedReturnLineItem'; };
    'ReturnLineItemTypeConnection': { kind: 'OBJECT'; name: 'ReturnLineItemTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnLineItemTypeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'ReturnLineItemType'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReturnLineItemTypeEdge': { kind: 'OBJECT'; name: 'ReturnLineItemTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'ReturnLineItemType'; ofType: null; }; } }; }; };
    'ReturnReason': { name: 'ReturnReason'; enumValues: 'SIZE_TOO_SMALL' | 'SIZE_TOO_LARGE' | 'UNWANTED' | 'NOT_AS_DESCRIBED' | 'WRONG_ITEM' | 'DEFECTIVE' | 'STYLE' | 'COLOR' | 'OTHER' | 'UNKNOWN'; };
    'ReturnRefundInput': { kind: 'INPUT_OBJECT'; name: 'ReturnRefundInput'; isOneOf: false; inputFields: [{ name: 'returnId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'returnRefundLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ReturnRefundLineItemInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'refundShipping'; type: { kind: 'INPUT_OBJECT'; name: 'RefundShippingInput'; ofType: null; }; defaultValue: null }, { name: 'refundDuties'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'RefundDutyInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'orderTransactions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ReturnRefundOrderTransactionInput'; ofType: null; }; }; }; defaultValue: "[]" }, { name: 'notifyCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'ReturnRefundLineItemInput': { kind: 'INPUT_OBJECT'; name: 'ReturnRefundLineItemInput'; isOneOf: false; inputFields: [{ name: 'returnLineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'ReturnRefundOrderTransactionInput': { kind: 'INPUT_OBJECT'; name: 'ReturnRefundOrderTransactionInput'; isOneOf: false; inputFields: [{ name: 'transactionAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }, { name: 'parentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ReturnRefundPayload': { kind: 'OBJECT'; name: 'ReturnRefundPayload'; fields: { 'refund': { name: 'refund'; type: { kind: 'OBJECT'; name: 'Refund'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReturnReopenPayload': { kind: 'OBJECT'; name: 'ReturnReopenPayload'; fields: { 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReturnRequestInput': { kind: 'INPUT_OBJECT'; name: 'ReturnRequestInput'; isOneOf: false; inputFields: [{ name: 'orderId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'returnLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ReturnRequestLineItemInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'returnShippingFee'; type: { kind: 'INPUT_OBJECT'; name: 'ReturnShippingFeeInput'; ofType: null; }; defaultValue: null }]; };
    'ReturnRequestLineItemInput': { kind: 'INPUT_OBJECT'; name: 'ReturnRequestLineItemInput'; isOneOf: false; inputFields: [{ name: 'fulfillmentLineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'restockingFee'; type: { kind: 'INPUT_OBJECT'; name: 'RestockingFeeInput'; ofType: null; }; defaultValue: null }, { name: 'returnReason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReturnReason'; ofType: null; }; }; defaultValue: null }, { name: 'customerNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ReturnRequestPayload': { kind: 'OBJECT'; name: 'ReturnRequestPayload'; fields: { 'return': { name: 'return'; type: { kind: 'OBJECT'; name: 'Return'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReturnShippingFee': { kind: 'OBJECT'; name: 'ReturnShippingFee'; fields: { 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'ReturnShippingFeeInput': { kind: 'INPUT_OBJECT'; name: 'ReturnShippingFeeInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }]; };
    'ReturnStatus': { name: 'ReturnStatus'; enumValues: 'CANCELED' | 'CLOSED' | 'OPEN' | 'REQUESTED' | 'DECLINED'; };
    'ReturnUserError': { kind: 'OBJECT'; name: 'ReturnUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ReturnErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ReturnableFulfillment': { kind: 'OBJECT'; name: 'ReturnableFulfillment'; fields: { 'fulfillment': { name: 'fulfillment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'returnableFulfillmentLineItems': { name: 'returnableFulfillmentLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnableFulfillmentLineItemConnection'; ofType: null; }; } }; }; };
    'ReturnableFulfillmentConnection': { kind: 'OBJECT'; name: 'ReturnableFulfillmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnableFulfillmentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnableFulfillment'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReturnableFulfillmentEdge': { kind: 'OBJECT'; name: 'ReturnableFulfillmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnableFulfillment'; ofType: null; }; } }; }; };
    'ReturnableFulfillmentLineItem': { kind: 'OBJECT'; name: 'ReturnableFulfillmentLineItem'; fields: { 'fulfillmentLineItem': { name: 'fulfillmentLineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLineItem'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ReturnableFulfillmentLineItemConnection': { kind: 'OBJECT'; name: 'ReturnableFulfillmentLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnableFulfillmentLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnableFulfillmentLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReturnableFulfillmentLineItemEdge': { kind: 'OBJECT'; name: 'ReturnableFulfillmentLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnableFulfillmentLineItem'; ofType: null; }; } }; }; };
    'ReverseDelivery': { kind: 'OBJECT'; name: 'ReverseDelivery'; fields: { 'deliverable': { name: 'deliverable'; type: { kind: 'UNION'; name: 'ReverseDeliveryDeliverable'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'reverseDeliveryLineItems': { name: 'reverseDeliveryLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseDeliveryLineItemConnection'; ofType: null; }; } }; 'reverseFulfillmentOrder': { name: 'reverseFulfillmentOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrder'; ofType: null; }; } }; }; };
    'ReverseDeliveryConnection': { kind: 'OBJECT'; name: 'ReverseDeliveryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseDeliveryEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseDelivery'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReverseDeliveryCreateWithShippingPayload': { kind: 'OBJECT'; name: 'ReverseDeliveryCreateWithShippingPayload'; fields: { 'reverseDelivery': { name: 'reverseDelivery'; type: { kind: 'OBJECT'; name: 'ReverseDelivery'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReverseDeliveryDeliverable': { kind: 'UNION'; name: 'ReverseDeliveryDeliverable'; fields: {}; possibleTypes: 'ReverseDeliveryShippingDeliverable'; };
    'ReverseDeliveryDisposeInput': { kind: 'INPUT_OBJECT'; name: 'ReverseDeliveryDisposeInput'; isOneOf: false; inputFields: [{ name: 'reverseDeliveryLineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'dispositionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReverseFulfillmentOrderDispositionType'; ofType: null; }; }; defaultValue: null }, { name: 'locationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'ReverseDeliveryDisposePayload': { kind: 'OBJECT'; name: 'ReverseDeliveryDisposePayload'; fields: { 'reverseDeliveryLineItems': { name: 'reverseDeliveryLineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseDeliveryLineItem'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReverseDeliveryEdge': { kind: 'OBJECT'; name: 'ReverseDeliveryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseDelivery'; ofType: null; }; } }; }; };
    'ReverseDeliveryLabelInput': { kind: 'INPUT_OBJECT'; name: 'ReverseDeliveryLabelInput'; isOneOf: false; inputFields: [{ name: 'fileUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; }; defaultValue: null }]; };
    'ReverseDeliveryLabelV2': { kind: 'OBJECT'; name: 'ReverseDeliveryLabelV2'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'publicFileUrl': { name: 'publicFileUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'ReverseDeliveryLineItem': { kind: 'OBJECT'; name: 'ReverseDeliveryLineItem'; fields: { 'dispositions': { name: 'dispositions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderDisposition'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'reverseFulfillmentOrderLineItem': { name: 'reverseFulfillmentOrderLineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderLineItem'; ofType: null; }; } }; }; };
    'ReverseDeliveryLineItemConnection': { kind: 'OBJECT'; name: 'ReverseDeliveryLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseDeliveryLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseDeliveryLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReverseDeliveryLineItemEdge': { kind: 'OBJECT'; name: 'ReverseDeliveryLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseDeliveryLineItem'; ofType: null; }; } }; }; };
    'ReverseDeliveryLineItemInput': { kind: 'INPUT_OBJECT'; name: 'ReverseDeliveryLineItemInput'; isOneOf: false; inputFields: [{ name: 'reverseFulfillmentOrderLineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'ReverseDeliveryShippingDeliverable': { kind: 'OBJECT'; name: 'ReverseDeliveryShippingDeliverable'; fields: { 'label': { name: 'label'; type: { kind: 'OBJECT'; name: 'ReverseDeliveryLabelV2'; ofType: null; } }; 'tracking': { name: 'tracking'; type: { kind: 'OBJECT'; name: 'ReverseDeliveryTrackingV2'; ofType: null; } }; }; };
    'ReverseDeliveryShippingUpdatePayload': { kind: 'OBJECT'; name: 'ReverseDeliveryShippingUpdatePayload'; fields: { 'reverseDelivery': { name: 'reverseDelivery'; type: { kind: 'OBJECT'; name: 'ReverseDelivery'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReverseDeliveryTrackingInput': { kind: 'INPUT_OBJECT'; name: 'ReverseDeliveryTrackingInput'; isOneOf: false; inputFields: [{ name: 'number'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; defaultValue: null }]; };
    'ReverseDeliveryTrackingV2': { kind: 'OBJECT'; name: 'ReverseDeliveryTrackingV2'; fields: { 'carrierName': { name: 'carrierName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'number': { name: 'number'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; };
    'ReverseFulfillmentOrder': { kind: 'OBJECT'; name: 'ReverseFulfillmentOrder'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineItems': { name: 'lineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderLineItemConnection'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; 'reverseDeliveries': { name: 'reverseDeliveries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseDeliveryConnection'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReverseFulfillmentOrderStatus'; ofType: null; }; } }; 'thirdPartyConfirmation': { name: 'thirdPartyConfirmation'; type: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderThirdPartyConfirmation'; ofType: null; } }; }; };
    'ReverseFulfillmentOrderConnection': { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrder'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReverseFulfillmentOrderDisposeInput': { kind: 'INPUT_OBJECT'; name: 'ReverseFulfillmentOrderDisposeInput'; isOneOf: false; inputFields: [{ name: 'reverseFulfillmentOrderLineItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'locationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'dispositionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReverseFulfillmentOrderDispositionType'; ofType: null; }; }; defaultValue: null }]; };
    'ReverseFulfillmentOrderDisposePayload': { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderDisposePayload'; fields: { 'reverseFulfillmentOrderLineItems': { name: 'reverseFulfillmentOrderLineItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderLineItem'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReturnUserError'; ofType: null; }; }; }; } }; }; };
    'ReverseFulfillmentOrderDisposition': { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderDisposition'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReverseFulfillmentOrderDispositionType'; ofType: null; }; } }; }; };
    'ReverseFulfillmentOrderDispositionType': { name: 'ReverseFulfillmentOrderDispositionType'; enumValues: 'RESTOCKED' | 'PROCESSING_REQUIRED' | 'NOT_RESTOCKED' | 'MISSING'; };
    'ReverseFulfillmentOrderEdge': { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrder'; ofType: null; }; } }; }; };
    'ReverseFulfillmentOrderLineItem': { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderLineItem'; fields: { 'dispositions': { name: 'dispositions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderDisposition'; ofType: null; }; }; }; } }; 'fulfillmentLineItem': { name: 'fulfillmentLineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLineItem'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'totalQuantity': { name: 'totalQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ReverseFulfillmentOrderLineItemConnection': { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderLineItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderLineItemEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderLineItem'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReverseFulfillmentOrderLineItemEdge': { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderLineItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderLineItem'; ofType: null; }; } }; }; };
    'ReverseFulfillmentOrderStatus': { name: 'ReverseFulfillmentOrderStatus'; enumValues: 'CANCELED' | 'CLOSED' | 'OPEN'; };
    'ReverseFulfillmentOrderThirdPartyConfirmation': { kind: 'OBJECT'; name: 'ReverseFulfillmentOrderThirdPartyConfirmation'; fields: { 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReverseFulfillmentOrderThirdPartyConfirmationStatus'; ofType: null; }; } }; }; };
    'ReverseFulfillmentOrderThirdPartyConfirmationStatus': { name: 'ReverseFulfillmentOrderThirdPartyConfirmationStatus'; enumValues: 'ACCEPTED' | 'CANCEL_ACCEPTED' | 'CANCEL_REJECTED' | 'PENDING_ACCEPTANCE' | 'PENDING_CANCELATION' | 'REJECTED'; };
    'RiskAssessmentResult': { name: 'RiskAssessmentResult'; enumValues: 'HIGH' | 'MEDIUM' | 'LOW' | 'NONE' | 'PENDING'; };
    'RiskFact': { kind: 'OBJECT'; name: 'RiskFact'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sentiment': { name: 'sentiment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RiskFactSentiment'; ofType: null; }; } }; }; };
    'RiskFactSentiment': { name: 'RiskFactSentiment'; enumValues: 'POSITIVE' | 'NEUTRAL' | 'NEGATIVE'; };
    'RowCount': { kind: 'OBJECT'; name: 'RowCount'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'exceedsMax': { name: 'exceedsMax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'SEO': { kind: 'OBJECT'; name: 'SEO'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SEOInput': { kind: 'INPUT_OBJECT'; name: 'SEOInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Sale': { kind: 'INTERFACE'; name: 'Sale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; possibleTypes: 'AdditionalFeeSale' | 'AdjustmentSale' | 'DutySale' | 'FeeSale' | 'GiftCardSale' | 'ProductSale' | 'ShippingLineSale' | 'TipSale' | 'UnknownSale'; };
    'SaleActionType': { name: 'SaleActionType'; enumValues: 'ORDER' | 'RETURN' | 'UPDATE' | 'UNKNOWN'; };
    'SaleAdditionalFee': { kind: 'OBJECT'; name: 'SaleAdditionalFee'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; }; };
    'SaleConnection': { kind: 'OBJECT'; name: 'SaleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Sale'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SaleEdge': { kind: 'OBJECT'; name: 'SaleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Sale'; ofType: null; }; } }; }; };
    'SaleLineType': { name: 'SaleLineType'; enumValues: 'PRODUCT' | 'TIP' | 'GIFT_CARD' | 'SHIPPING' | 'DUTY' | 'ADDITIONAL_FEE' | 'FEE' | 'UNKNOWN' | 'ADJUSTMENT'; };
    'SaleTax': { kind: 'OBJECT'; name: 'SaleTax'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'taxLine': { name: 'taxLine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; } }; }; };
    'SalesAgreement': { kind: 'INTERFACE'; name: 'SalesAgreement'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'happenedAt': { name: 'happenedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderActionType'; ofType: null; }; } }; 'sales': { name: 'sales'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleConnection'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; }; possibleTypes: 'OrderAgreement' | 'OrderEditAgreement' | 'RefundAgreement' | 'ReturnAgreement'; };
    'SalesAgreementConnection': { kind: 'OBJECT'; name: 'SalesAgreementConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SalesAgreementEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'SalesAgreement'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SalesAgreementEdge': { kind: 'OBJECT'; name: 'SalesAgreementEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'SalesAgreement'; ofType: null; }; } }; }; };
    'SavedSearch': { kind: 'OBJECT'; name: 'SavedSearch'; fields: { 'filters': { name: 'filters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SearchFilter'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'query': { name: 'query'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'resourceType': { name: 'resourceType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SearchResultType'; ofType: null; }; } }; 'searchTerms': { name: 'searchTerms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SavedSearchConnection': { kind: 'OBJECT'; name: 'SavedSearchConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearch'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SavedSearchCreateInput': { kind: 'INPUT_OBJECT'; name: 'SavedSearchCreateInput'; isOneOf: false; inputFields: [{ name: 'resourceType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SearchResultType'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'query'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'SavedSearchCreatePayload': { kind: 'OBJECT'; name: 'SavedSearchCreatePayload'; fields: { 'savedSearch': { name: 'savedSearch'; type: { kind: 'OBJECT'; name: 'SavedSearch'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'SavedSearchDeleteInput': { kind: 'INPUT_OBJECT'; name: 'SavedSearchDeleteInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'SavedSearchDeletePayload': { kind: 'OBJECT'; name: 'SavedSearchDeletePayload'; fields: { 'deletedSavedSearchId': { name: 'deletedSavedSearchId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'SavedSearchEdge': { kind: 'OBJECT'; name: 'SavedSearchEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearch'; ofType: null; }; } }; }; };
    'SavedSearchUpdateInput': { kind: 'INPUT_OBJECT'; name: 'SavedSearchUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'query'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SavedSearchUpdatePayload': { kind: 'OBJECT'; name: 'SavedSearchUpdatePayload'; fields: { 'savedSearch': { name: 'savedSearch'; type: { kind: 'OBJECT'; name: 'SavedSearch'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ScheduledChangeSortKeys': { name: 'ScheduledChangeSortKeys'; enumValues: 'EXPECTED_AT' | 'ID' | 'RELEVANCE'; };
    'ScriptDiscountApplication': { kind: 'OBJECT'; name: 'ScriptDiscountApplication'; fields: { 'allocationMethod': { name: 'allocationMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationAllocationMethod'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'index': { name: 'index'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'targetSelection': { name: 'targetSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetSelection'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountApplicationTargetType'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PricingValue'; ofType: null; }; } }; }; };
    'ScriptTag': { kind: 'OBJECT'; name: 'ScriptTag'; fields: { 'cache': { name: 'cache'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'displayScope': { name: 'displayScope'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ScriptTagDisplayScope'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'src': { name: 'src'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'ScriptTagConnection': { kind: 'OBJECT'; name: 'ScriptTagConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ScriptTagEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ScriptTag'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ScriptTagCreatePayload': { kind: 'OBJECT'; name: 'ScriptTagCreatePayload'; fields: { 'scriptTag': { name: 'scriptTag'; type: { kind: 'OBJECT'; name: 'ScriptTag'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ScriptTagDeletePayload': { kind: 'OBJECT'; name: 'ScriptTagDeletePayload'; fields: { 'deletedScriptTagId': { name: 'deletedScriptTagId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ScriptTagDisplayScope': { name: 'ScriptTagDisplayScope'; enumValues: 'ALL' | 'ORDER_STATUS' | 'ONLINE_STORE'; };
    'ScriptTagEdge': { kind: 'OBJECT'; name: 'ScriptTagEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ScriptTag'; ofType: null; }; } }; }; };
    'ScriptTagInput': { kind: 'INPUT_OBJECT'; name: 'ScriptTagInput'; isOneOf: false; inputFields: [{ name: 'src'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; defaultValue: null }, { name: 'displayScope'; type: { kind: 'ENUM'; name: 'ScriptTagDisplayScope'; ofType: null; }; defaultValue: null }, { name: 'cache'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'ScriptTagUpdatePayload': { kind: 'OBJECT'; name: 'ScriptTagUpdatePayload'; fields: { 'scriptTag': { name: 'scriptTag'; type: { kind: 'OBJECT'; name: 'ScriptTag'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'SearchFilter': { kind: 'OBJECT'; name: 'SearchFilter'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SearchFilterOptions': { kind: 'OBJECT'; name: 'SearchFilterOptions'; fields: { 'productAvailability': { name: 'productAvailability'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FilterOption'; ofType: null; }; }; }; } }; }; };
    'SearchResult': { kind: 'OBJECT'; name: 'SearchResult'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'reference': { name: 'reference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Node'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'SearchResultConnection': { kind: 'OBJECT'; name: 'SearchResultConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SearchResultEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'resultsAfterCount': { name: 'resultsAfterCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'SearchResultEdge': { kind: 'OBJECT'; name: 'SearchResultEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SearchResult'; ofType: null; }; } }; }; };
    'SearchResultType': { name: 'SearchResultType'; enumValues: 'CUSTOMER' | 'DRAFT_ORDER' | 'PRODUCT' | 'COLLECTION' | 'FILE' | 'ONLINE_STORE_PAGE' | 'ONLINE_STORE_BLOG' | 'ONLINE_STORE_ARTICLE' | 'URL_REDIRECT' | 'PRICE_RULE' | 'DISCOUNT_REDEEM_CODE' | 'ORDER' | 'BALANCE_TRANSACTION'; };
    'Segment': { kind: 'OBJECT'; name: 'Segment'; fields: { 'creationDate': { name: 'creationDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastEditDate': { name: 'lastEditDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'query': { name: 'query'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentAssociationFilter': { kind: 'OBJECT'; name: 'SegmentAssociationFilter'; fields: { 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'multiValue': { name: 'multiValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentAttributeStatistics': { kind: 'OBJECT'; name: 'SegmentAttributeStatistics'; fields: { 'average': { name: 'average'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'sum': { name: 'sum'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'SegmentBooleanFilter': { kind: 'OBJECT'; name: 'SegmentBooleanFilter'; fields: { 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'multiValue': { name: 'multiValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentConnection': { kind: 'OBJECT'; name: 'SegmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Segment'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SegmentCreatePayload': { kind: 'OBJECT'; name: 'SegmentCreatePayload'; fields: { 'segment': { name: 'segment'; type: { kind: 'OBJECT'; name: 'Segment'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'SegmentDateFilter': { kind: 'OBJECT'; name: 'SegmentDateFilter'; fields: { 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'multiValue': { name: 'multiValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentDeletePayload': { kind: 'OBJECT'; name: 'SegmentDeletePayload'; fields: { 'deletedSegmentId': { name: 'deletedSegmentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'SegmentEdge': { kind: 'OBJECT'; name: 'SegmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Segment'; ofType: null; }; } }; }; };
    'SegmentEnumFilter': { kind: 'OBJECT'; name: 'SegmentEnumFilter'; fields: { 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'multiValue': { name: 'multiValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentEventFilter': { kind: 'OBJECT'; name: 'SegmentEventFilter'; fields: { 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'multiValue': { name: 'multiValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'parameters': { name: 'parameters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentEventFilterParameter'; ofType: null; }; }; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'returnValueType': { name: 'returnValueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentEventFilterParameter': { kind: 'OBJECT'; name: 'SegmentEventFilterParameter'; fields: { 'acceptsMultipleValues': { name: 'acceptsMultipleValues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'localizedDescription': { name: 'localizedDescription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'optional': { name: 'optional'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'parameterType': { name: 'parameterType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentFilter': { kind: 'INTERFACE'; name: 'SegmentFilter'; fields: { 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'multiValue': { name: 'multiValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'SegmentAssociationFilter' | 'SegmentBooleanFilter' | 'SegmentDateFilter' | 'SegmentEnumFilter' | 'SegmentEventFilter' | 'SegmentFloatFilter' | 'SegmentIntegerFilter' | 'SegmentStringFilter'; };
    'SegmentFilterConnection': { kind: 'OBJECT'; name: 'SegmentFilterConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentFilterEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'SegmentFilter'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SegmentFilterEdge': { kind: 'OBJECT'; name: 'SegmentFilterEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'SegmentFilter'; ofType: null; }; } }; }; };
    'SegmentFloatFilter': { kind: 'OBJECT'; name: 'SegmentFloatFilter'; fields: { 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'multiValue': { name: 'multiValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentIntegerFilter': { kind: 'OBJECT'; name: 'SegmentIntegerFilter'; fields: { 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'multiValue': { name: 'multiValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentMembership': { kind: 'OBJECT'; name: 'SegmentMembership'; fields: { 'isMember': { name: 'isMember'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'segmentId': { name: 'segmentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'SegmentMembershipResponse': { kind: 'OBJECT'; name: 'SegmentMembershipResponse'; fields: { 'memberships': { name: 'memberships'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentMembership'; ofType: null; }; }; }; } }; }; };
    'SegmentMigration': { kind: 'OBJECT'; name: 'SegmentMigration'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'savedSearchId': { name: 'savedSearchId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'segmentId': { name: 'segmentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'SegmentMigrationConnection': { kind: 'OBJECT'; name: 'SegmentMigrationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentMigrationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentMigration'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SegmentMigrationEdge': { kind: 'OBJECT'; name: 'SegmentMigrationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentMigration'; ofType: null; }; } }; }; };
    'SegmentSortKeys': { name: 'SegmentSortKeys'; enumValues: 'CREATION_DATE' | 'LAST_EDIT_DATE' | 'ID' | 'RELEVANCE'; };
    'SegmentStatistics': { kind: 'OBJECT'; name: 'SegmentStatistics'; fields: { 'attributeStatistics': { name: 'attributeStatistics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentAttributeStatistics'; ofType: null; }; } }; }; };
    'SegmentStringFilter': { kind: 'OBJECT'; name: 'SegmentStringFilter'; fields: { 'localizedName': { name: 'localizedName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'multiValue': { name: 'multiValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentUpdatePayload': { kind: 'OBJECT'; name: 'SegmentUpdatePayload'; fields: { 'segment': { name: 'segment'; type: { kind: 'OBJECT'; name: 'Segment'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'SegmentValue': { kind: 'OBJECT'; name: 'SegmentValue'; fields: { 'localizedValue': { name: 'localizedValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'queryName': { name: 'queryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SegmentValueConnection': { kind: 'OBJECT'; name: 'SegmentValueConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentValueEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentValue'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SegmentValueEdge': { kind: 'OBJECT'; name: 'SegmentValueEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SegmentValue'; ofType: null; }; } }; }; };
    'SelectedOption': { kind: 'OBJECT'; name: 'SelectedOption'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'optionValue': { name: 'optionValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductOptionValue'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SelectedVariantOptionInput': { kind: 'INPUT_OBJECT'; name: 'SelectedVariantOptionInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'linkedMetafieldValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SellingPlan': { kind: 'OBJECT'; name: 'SellingPlan'; fields: { 'billingPolicy': { name: 'billingPolicy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SellingPlanBillingPolicy'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'ENUM'; name: 'SellingPlanCategory'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'deliveryPolicy': { name: 'deliveryPolicy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SellingPlanDeliveryPolicy'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inventoryPolicy': { name: 'inventoryPolicy'; type: { kind: 'OBJECT'; name: 'SellingPlanInventoryPolicy'; ofType: null; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'options': { name: 'options'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'position': { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'pricingPolicies': { name: 'pricingPolicies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SellingPlanPricingPolicy'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; }; };
    'SellingPlanAnchor': { kind: 'OBJECT'; name: 'SellingPlanAnchor'; fields: { 'cutoffDay': { name: 'cutoffDay'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'day': { name: 'day'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'month': { name: 'month'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanAnchorType'; ofType: null; }; } }; }; };
    'SellingPlanAnchorInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanAnchorInput'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'ENUM'; name: 'SellingPlanAnchorType'; ofType: null; }; defaultValue: null }, { name: 'day'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'month'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cutoffDay'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanAnchorType': { name: 'SellingPlanAnchorType'; enumValues: 'WEEKDAY' | 'MONTHDAY' | 'YEARDAY'; };
    'SellingPlanBillingPolicy': { kind: 'UNION'; name: 'SellingPlanBillingPolicy'; fields: {}; possibleTypes: 'SellingPlanFixedBillingPolicy' | 'SellingPlanRecurringBillingPolicy'; };
    'SellingPlanBillingPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanBillingPolicyInput'; isOneOf: false; inputFields: [{ name: 'fixed'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanFixedBillingPolicyInput'; ofType: null; }; defaultValue: null }, { name: 'recurring'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanRecurringBillingPolicyInput'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanCategory': { name: 'SellingPlanCategory'; enumValues: 'OTHER' | 'PRE_ORDER' | 'SUBSCRIPTION' | 'TRY_BEFORE_YOU_BUY'; };
    'SellingPlanCheckoutCharge': { kind: 'OBJECT'; name: 'SellingPlanCheckoutCharge'; fields: { 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanCheckoutChargeType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SellingPlanCheckoutChargeValue'; ofType: null; }; } }; }; };
    'SellingPlanCheckoutChargeInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanCheckoutChargeInput'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'ENUM'; name: 'SellingPlanCheckoutChargeType'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanCheckoutChargeValueInput'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanCheckoutChargePercentageValue': { kind: 'OBJECT'; name: 'SellingPlanCheckoutChargePercentageValue'; fields: { 'percentage': { name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'SellingPlanCheckoutChargeType': { name: 'SellingPlanCheckoutChargeType'; enumValues: 'PERCENTAGE' | 'PRICE'; };
    'SellingPlanCheckoutChargeValue': { kind: 'UNION'; name: 'SellingPlanCheckoutChargeValue'; fields: {}; possibleTypes: 'MoneyV2' | 'SellingPlanCheckoutChargePercentageValue'; };
    'SellingPlanCheckoutChargeValueInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanCheckoutChargeValueInput'; isOneOf: false; inputFields: [{ name: 'percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'fixedValue'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanConnection': { kind: 'OBJECT'; name: 'SellingPlanConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlan'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SellingPlanDeliveryPolicy': { kind: 'UNION'; name: 'SellingPlanDeliveryPolicy'; fields: {}; possibleTypes: 'SellingPlanFixedDeliveryPolicy' | 'SellingPlanRecurringDeliveryPolicy'; };
    'SellingPlanDeliveryPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanDeliveryPolicyInput'; isOneOf: false; inputFields: [{ name: 'fixed'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanFixedDeliveryPolicyInput'; ofType: null; }; defaultValue: null }, { name: 'recurring'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanRecurringDeliveryPolicyInput'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanEdge': { kind: 'OBJECT'; name: 'SellingPlanEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlan'; ofType: null; }; } }; }; };
    'SellingPlanFixedBillingPolicy': { kind: 'OBJECT'; name: 'SellingPlanFixedBillingPolicy'; fields: { 'checkoutCharge': { name: 'checkoutCharge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanCheckoutCharge'; ofType: null; }; } }; 'remainingBalanceChargeExactTime': { name: 'remainingBalanceChargeExactTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'remainingBalanceChargeTimeAfterCheckout': { name: 'remainingBalanceChargeTimeAfterCheckout'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'remainingBalanceChargeTrigger': { name: 'remainingBalanceChargeTrigger'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanRemainingBalanceChargeTrigger'; ofType: null; }; } }; }; };
    'SellingPlanFixedBillingPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanFixedBillingPolicyInput'; isOneOf: false; inputFields: [{ name: 'remainingBalanceChargeTrigger'; type: { kind: 'ENUM'; name: 'SellingPlanRemainingBalanceChargeTrigger'; ofType: null; }; defaultValue: null }, { name: 'remainingBalanceChargeExactTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'remainingBalanceChargeTimeAfterCheckout'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'checkoutCharge'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanCheckoutChargeInput'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanFixedDeliveryPolicy': { kind: 'OBJECT'; name: 'SellingPlanFixedDeliveryPolicy'; fields: { 'anchors': { name: 'anchors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanAnchor'; ofType: null; }; }; }; } }; 'cutoff': { name: 'cutoff'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'fulfillmentExactTime': { name: 'fulfillmentExactTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'fulfillmentTrigger': { name: 'fulfillmentTrigger'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanFulfillmentTrigger'; ofType: null; }; } }; 'intent': { name: 'intent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanFixedDeliveryPolicyIntent'; ofType: null; }; } }; 'preAnchorBehavior': { name: 'preAnchorBehavior'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanFixedDeliveryPolicyPreAnchorBehavior'; ofType: null; }; } }; }; };
    'SellingPlanFixedDeliveryPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanFixedDeliveryPolicyInput'; isOneOf: false; inputFields: [{ name: 'anchors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SellingPlanAnchorInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'fulfillmentTrigger'; type: { kind: 'ENUM'; name: 'SellingPlanFulfillmentTrigger'; ofType: null; }; defaultValue: null }, { name: 'fulfillmentExactTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'cutoff'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'intent'; type: { kind: 'ENUM'; name: 'SellingPlanFixedDeliveryPolicyIntent'; ofType: null; }; defaultValue: null }, { name: 'preAnchorBehavior'; type: { kind: 'ENUM'; name: 'SellingPlanFixedDeliveryPolicyPreAnchorBehavior'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanFixedDeliveryPolicyIntent': { name: 'SellingPlanFixedDeliveryPolicyIntent'; enumValues: 'FULFILLMENT_BEGIN'; };
    'SellingPlanFixedDeliveryPolicyPreAnchorBehavior': { name: 'SellingPlanFixedDeliveryPolicyPreAnchorBehavior'; enumValues: 'ASAP' | 'NEXT'; };
    'SellingPlanFixedPricingPolicy': { kind: 'OBJECT'; name: 'SellingPlanFixedPricingPolicy'; fields: { 'adjustmentType': { name: 'adjustmentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanPricingPolicyAdjustmentType'; ofType: null; }; } }; 'adjustmentValue': { name: 'adjustmentValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SellingPlanPricingPolicyAdjustmentValue'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'SellingPlanFixedPricingPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanFixedPricingPolicyInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'adjustmentType'; type: { kind: 'ENUM'; name: 'SellingPlanPricingPolicyAdjustmentType'; ofType: null; }; defaultValue: null }, { name: 'adjustmentValue'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanPricingPolicyValueInput'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanFulfillmentTrigger': { name: 'SellingPlanFulfillmentTrigger'; enumValues: 'ANCHOR' | 'ASAP' | 'EXACT_TIME' | 'UNKNOWN'; };
    'SellingPlanGroup': { kind: 'OBJECT'; name: 'SellingPlanGroup'; fields: { 'appId': { name: 'appId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'appliesToProduct': { name: 'appliesToProduct'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'appliesToProductVariant': { name: 'appliesToProductVariant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'appliesToProductVariants': { name: 'appliesToProductVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'merchantCode': { name: 'merchantCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'options': { name: 'options'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'position': { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantConnection'; ofType: null; }; } }; 'productVariantsCount': { name: 'productVariantsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductConnection'; ofType: null; }; } }; 'productsCount': { name: 'productsCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'sellingPlans': { name: 'sellingPlans'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanConnection'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; }; };
    'SellingPlanGroupAddProductVariantsPayload': { kind: 'OBJECT'; name: 'SellingPlanGroupAddProductVariantsPayload'; fields: { 'sellingPlanGroup': { name: 'sellingPlanGroup'; type: { kind: 'OBJECT'; name: 'SellingPlanGroup'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'SellingPlanGroupAddProductsPayload': { kind: 'OBJECT'; name: 'SellingPlanGroupAddProductsPayload'; fields: { 'sellingPlanGroup': { name: 'sellingPlanGroup'; type: { kind: 'OBJECT'; name: 'SellingPlanGroup'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'SellingPlanGroupConnection': { kind: 'OBJECT'; name: 'SellingPlanGroupConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroup'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SellingPlanGroupCreatePayload': { kind: 'OBJECT'; name: 'SellingPlanGroupCreatePayload'; fields: { 'sellingPlanGroup': { name: 'sellingPlanGroup'; type: { kind: 'OBJECT'; name: 'SellingPlanGroup'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'SellingPlanGroupDeletePayload': { kind: 'OBJECT'; name: 'SellingPlanGroupDeletePayload'; fields: { 'deletedSellingPlanGroupId': { name: 'deletedSellingPlanGroupId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'SellingPlanGroupEdge': { kind: 'OBJECT'; name: 'SellingPlanGroupEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroup'; ofType: null; }; } }; }; };
    'SellingPlanGroupInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanGroupInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'merchantCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'sellingPlansToCreate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SellingPlanInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'sellingPlansToUpdate'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SellingPlanInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'sellingPlansToDelete'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'options'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanGroupRemoveProductVariantsPayload': { kind: 'OBJECT'; name: 'SellingPlanGroupRemoveProductVariantsPayload'; fields: { 'removedProductVariantIds': { name: 'removedProductVariantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'SellingPlanGroupRemoveProductsPayload': { kind: 'OBJECT'; name: 'SellingPlanGroupRemoveProductsPayload'; fields: { 'removedProductIds': { name: 'removedProductIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'SellingPlanGroupResourceInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanGroupResourceInput'; isOneOf: false; inputFields: [{ name: 'productVariantIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'productIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'SellingPlanGroupSortKeys': { name: 'SellingPlanGroupSortKeys'; enumValues: 'NAME' | 'UPDATED_AT' | 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'SellingPlanGroupUpdatePayload': { kind: 'OBJECT'; name: 'SellingPlanGroupUpdatePayload'; fields: { 'deletedSellingPlanIds': { name: 'deletedSellingPlanIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'sellingPlanGroup': { name: 'sellingPlanGroup'; type: { kind: 'OBJECT'; name: 'SellingPlanGroup'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; ofType: null; }; }; }; } }; }; };
    'SellingPlanGroupUserError': { kind: 'OBJECT'; name: 'SellingPlanGroupUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'SellingPlanGroupUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SellingPlanGroupUserErrorCode': { name: 'SellingPlanGroupUserErrorCode'; enumValues: 'BLANK' | 'EQUAL_TO' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'INCLUSION' | 'INVALID' | 'LESS_THAN' | 'LESS_THAN_OR_EQUAL_TO' | 'NOT_A_NUMBER' | 'NOT_FOUND' | 'PRESENT' | 'TAKEN' | 'TOO_BIG' | 'TOO_LONG' | 'TOO_SHORT' | 'WRONG_LENGTH' | 'SELLING_PLAN_COUNT_UPPER_BOUND' | 'SELLING_PLAN_COUNT_LOWER_BOUND' | 'SELLING_PLAN_MAX_CYCLES_MUST_BE_GREATER_THAN_MIN_CYCLES' | 'SELLING_PLAN_BILLING_AND_DELIVERY_POLICY_ANCHORS_MUST_BE_EQUAL' | 'SELLING_PLAN_BILLING_CYCLE_MUST_BE_A_MULTIPLE_OF_DELIVERY_CYCLE' | 'SELLING_PLAN_PRICING_POLICIES_MUST_CONTAIN_A_FIXED_PRICING_POLICY' | 'SELLING_PLAN_MISSING_OPTION2_LABEL_ON_PARENT_GROUP' | 'SELLING_PLAN_MISSING_OPTION3_LABEL_ON_PARENT_GROUP' | 'SELLING_PLAN_OPTION2_REQUIRED_AS_DEFINED_ON_PARENT_GROUP' | 'SELLING_PLAN_OPTION3_REQUIRED_AS_DEFINED_ON_PARENT_GROUP' | 'SELLING_PLAN_PRICING_POLICIES_LIMIT' | 'RESOURCE_LIST_CONTAINS_INVALID_IDS' | 'PRODUCT_VARIANT_DOES_NOT_EXIST' | 'PRODUCT_DOES_NOT_EXIST' | 'GROUP_DOES_NOT_EXIST' | 'GROUP_COULD_NOT_BE_DELETED' | 'ERROR_ADDING_RESOURCE_TO_GROUP' | 'SELLING_PLAN_DELIVERY_POLICY_MISSING' | 'SELLING_PLAN_BILLING_POLICY_MISSING' | 'PLAN_DOES_NOT_EXIST' | 'PLAN_ID_MUST_BE_SPECIFIED_TO_UPDATE' | 'ONLY_NEED_ONE_BILLING_POLICY_TYPE' | 'ONLY_NEED_ONE_DELIVERY_POLICY_TYPE' | 'ONLY_NEED_ONE_PRICING_POLICY_TYPE' | 'BILLING_AND_DELIVERY_POLICY_TYPES_MUST_BE_THE_SAME' | 'ONLY_NEED_ONE_PRICING_POLICY_VALUE' | 'PRICING_POLICY_ADJUSTMENT_VALUE_AND_TYPE_MUST_MATCH' | 'SELLING_PLAN_DUPLICATE_NAME' | 'SELLING_PLAN_DUPLICATE_OPTIONS' | 'SELLING_PLAN_FIXED_PRICING_POLICIES_LIMIT' | 'REMAINING_BALANCE_CHARGE_EXACT_TIME_REQUIRED' | 'CHECKOUT_CHARGE_VALUE_AND_TYPE_MUST_MATCH' | 'ONLY_NEED_ONE_CHECKOUT_CHARGE_VALUE' | 'REMAINING_BALANCE_CHARGE_EXACT_TIME_NOT_ALLOWED' | 'REMAINING_BALANCE_CHARGE_TIME_AFTER_CHECKOUT_MUST_BE_GREATER_THAN_ZERO' | 'REMAINING_BALANCE_CHARGE_TRIGGER_ON_FULL_CHECKOUT' | 'REMAINING_BALANCE_CHARGE_TRIGGER_NO_REMAINING_BALANCE_ON_PARTIAL_PERCENTAGE_CHECKOUT_CHARGE' | 'REMAINING_BALANCE_CHARGE_TRIGGER_NO_REMAINING_BALANCE_ON_PRICE_CHECKOUT_CHARGE' | 'FULFILLMENT_EXACT_TIME_REQUIRED' | 'FULFILLMENT_EXACT_TIME_NOT_ALLOWED' | 'SELLING_PLAN_ANCHORS_NOT_ALLOWED' | 'SELLING_PLAN_ANCHORS_REQUIRED' | 'ONLY_ONE_OF_FIXED_OR_RECURRING_BILLING' | 'ONLY_ONE_OF_FIXED_OR_RECURRING_DELIVERY' | 'BILLING_POLICY_INTERVAL_TOO_LARGE' | 'DELIVERY_POLICY_INTERVAL_TOO_LARGE' | 'INVALID_INPUT'; };
    'SellingPlanInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'billingPolicy'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanBillingPolicyInput'; ofType: null; }; defaultValue: null }, { name: 'deliveryPolicy'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanDeliveryPolicyInput'; ofType: null; }; defaultValue: null }, { name: 'inventoryPolicy'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanInventoryPolicyInput'; ofType: null; }; defaultValue: null }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'pricingPolicies'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SellingPlanPricingPolicyInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'options'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'ENUM'; name: 'SellingPlanCategory'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanInterval': { name: 'SellingPlanInterval'; enumValues: 'DAY' | 'WEEK' | 'MONTH' | 'YEAR'; };
    'SellingPlanInventoryPolicy': { kind: 'OBJECT'; name: 'SellingPlanInventoryPolicy'; fields: { 'reserve': { name: 'reserve'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanReserve'; ofType: null; }; } }; }; };
    'SellingPlanInventoryPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanInventoryPolicyInput'; isOneOf: false; inputFields: [{ name: 'reserve'; type: { kind: 'ENUM'; name: 'SellingPlanReserve'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanPricingPolicy': { kind: 'UNION'; name: 'SellingPlanPricingPolicy'; fields: {}; possibleTypes: 'SellingPlanFixedPricingPolicy' | 'SellingPlanRecurringPricingPolicy'; };
    'SellingPlanPricingPolicyAdjustmentType': { name: 'SellingPlanPricingPolicyAdjustmentType'; enumValues: 'PERCENTAGE' | 'FIXED_AMOUNT' | 'PRICE'; };
    'SellingPlanPricingPolicyAdjustmentValue': { kind: 'UNION'; name: 'SellingPlanPricingPolicyAdjustmentValue'; fields: {}; possibleTypes: 'MoneyV2' | 'SellingPlanPricingPolicyPercentageValue'; };
    'SellingPlanPricingPolicyBase': { kind: 'INTERFACE'; name: 'SellingPlanPricingPolicyBase'; fields: { 'adjustmentType': { name: 'adjustmentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanPricingPolicyAdjustmentType'; ofType: null; }; } }; 'adjustmentValue': { name: 'adjustmentValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SellingPlanPricingPolicyAdjustmentValue'; ofType: null; }; } }; }; possibleTypes: 'SellingPlanFixedPricingPolicy' | 'SellingPlanRecurringPricingPolicy'; };
    'SellingPlanPricingPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanPricingPolicyInput'; isOneOf: false; inputFields: [{ name: 'recurring'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanRecurringPricingPolicyInput'; ofType: null; }; defaultValue: null }, { name: 'fixed'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanFixedPricingPolicyInput'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanPricingPolicyPercentageValue': { kind: 'OBJECT'; name: 'SellingPlanPricingPolicyPercentageValue'; fields: { 'percentage': { name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'SellingPlanPricingPolicyValueInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanPricingPolicyValueInput'; isOneOf: false; inputFields: [{ name: 'percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'fixedValue'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanRecurringBillingPolicy': { kind: 'OBJECT'; name: 'SellingPlanRecurringBillingPolicy'; fields: { 'anchors': { name: 'anchors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanAnchor'; ofType: null; }; }; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'interval': { name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanInterval'; ofType: null; }; } }; 'intervalCount': { name: 'intervalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'maxCycles': { name: 'maxCycles'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minCycles': { name: 'minCycles'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'SellingPlanRecurringBillingPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanRecurringBillingPolicyInput'; isOneOf: false; inputFields: [{ name: 'interval'; type: { kind: 'ENUM'; name: 'SellingPlanInterval'; ofType: null; }; defaultValue: null }, { name: 'intervalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'anchors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SellingPlanAnchorInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'minCycles'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxCycles'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanRecurringDeliveryPolicy': { kind: 'OBJECT'; name: 'SellingPlanRecurringDeliveryPolicy'; fields: { 'anchors': { name: 'anchors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanAnchor'; ofType: null; }; }; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'cutoff': { name: 'cutoff'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'intent': { name: 'intent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanRecurringDeliveryPolicyIntent'; ofType: null; }; } }; 'interval': { name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanInterval'; ofType: null; }; } }; 'intervalCount': { name: 'intervalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'preAnchorBehavior': { name: 'preAnchorBehavior'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanRecurringDeliveryPolicyPreAnchorBehavior'; ofType: null; }; } }; }; };
    'SellingPlanRecurringDeliveryPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanRecurringDeliveryPolicyInput'; isOneOf: false; inputFields: [{ name: 'interval'; type: { kind: 'ENUM'; name: 'SellingPlanInterval'; ofType: null; }; defaultValue: null }, { name: 'intervalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'anchors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SellingPlanAnchorInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'cutoff'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'intent'; type: { kind: 'ENUM'; name: 'SellingPlanRecurringDeliveryPolicyIntent'; ofType: null; }; defaultValue: null }, { name: 'preAnchorBehavior'; type: { kind: 'ENUM'; name: 'SellingPlanRecurringDeliveryPolicyPreAnchorBehavior'; ofType: null; }; defaultValue: null }]; };
    'SellingPlanRecurringDeliveryPolicyIntent': { name: 'SellingPlanRecurringDeliveryPolicyIntent'; enumValues: 'FULFILLMENT_BEGIN'; };
    'SellingPlanRecurringDeliveryPolicyPreAnchorBehavior': { name: 'SellingPlanRecurringDeliveryPolicyPreAnchorBehavior'; enumValues: 'ASAP' | 'NEXT'; };
    'SellingPlanRecurringPricingPolicy': { kind: 'OBJECT'; name: 'SellingPlanRecurringPricingPolicy'; fields: { 'adjustmentType': { name: 'adjustmentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanPricingPolicyAdjustmentType'; ofType: null; }; } }; 'adjustmentValue': { name: 'adjustmentValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SellingPlanPricingPolicyAdjustmentValue'; ofType: null; }; } }; 'afterCycle': { name: 'afterCycle'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'SellingPlanRecurringPricingPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SellingPlanRecurringPricingPolicyInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'adjustmentType'; type: { kind: 'ENUM'; name: 'SellingPlanPricingPolicyAdjustmentType'; ofType: null; }; defaultValue: null }, { name: 'adjustmentValue'; type: { kind: 'INPUT_OBJECT'; name: 'SellingPlanPricingPolicyValueInput'; ofType: null; }; defaultValue: null }, { name: 'afterCycle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'SellingPlanRemainingBalanceChargeTrigger': { name: 'SellingPlanRemainingBalanceChargeTrigger'; enumValues: 'NO_REMAINING_BALANCE' | 'EXACT_TIME' | 'TIME_AFTER_CHECKOUT'; };
    'SellingPlanReserve': { name: 'SellingPlanReserve'; enumValues: 'ON_FULFILLMENT' | 'ON_SALE'; };
    'ServerPixel': { kind: 'OBJECT'; name: 'ServerPixel'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'ServerPixelStatus'; ofType: null; } }; 'webhookEndpointAddress': { name: 'webhookEndpointAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ServerPixelCreatePayload': { kind: 'OBJECT'; name: 'ServerPixelCreatePayload'; fields: { 'serverPixel': { name: 'serverPixel'; type: { kind: 'OBJECT'; name: 'ServerPixel'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ErrorsServerPixelUserError'; ofType: null; }; }; }; } }; }; };
    'ServerPixelDeletePayload': { kind: 'OBJECT'; name: 'ServerPixelDeletePayload'; fields: { 'deletedServerPixelId': { name: 'deletedServerPixelId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ErrorsServerPixelUserError'; ofType: null; }; }; }; } }; }; };
    'ServerPixelStatus': { name: 'ServerPixelStatus'; enumValues: 'CONNECTED' | 'DISCONNECTED_UNCONFIGURED' | 'DISCONNECTED_CONFIGURED'; };
    'ShippingDiscountClass': { name: 'ShippingDiscountClass'; enumValues: 'SHIPPING'; };
    'ShippingLine': { kind: 'OBJECT'; name: 'ShippingLine'; fields: { 'carrierIdentifier': { name: 'carrierIdentifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'code': { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'custom': { name: 'custom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deliveryCategory': { name: 'deliveryCategory'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discountAllocations': { name: 'discountAllocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountAllocation'; ofType: null; }; }; }; } }; 'discountedPrice': { name: 'discountedPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'discountedPriceSet': { name: 'discountedPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'isRemoved': { name: 'isRemoved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'originalPrice': { name: 'originalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'originalPriceSet': { name: 'originalPriceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'requestedFulfillmentService': { name: 'requestedFulfillmentService'; type: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; } }; 'shippingRateHandle': { name: 'shippingRateHandle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'source': { name: 'source'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxLines': { name: 'taxLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxLine'; ofType: null; }; }; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShippingLineConnection': { kind: 'OBJECT'; name: 'ShippingLineConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingLineEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingLine'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ShippingLineEdge': { kind: 'OBJECT'; name: 'ShippingLineEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingLine'; ofType: null; }; } }; }; };
    'ShippingLineInput': { kind: 'INPUT_OBJECT'; name: 'ShippingLineInput'; isOneOf: false; inputFields: [{ name: 'price'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'priceWithCurrency'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'shippingRateHandle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ShippingLineSale': { kind: 'OBJECT'; name: 'ShippingLineSale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'shippingLine': { name: 'shippingLine'; type: { kind: 'OBJECT'; name: 'ShippingLine'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'ShippingMethod': { kind: 'OBJECT'; name: 'ShippingMethod'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShippingPackageDeletePayload': { kind: 'OBJECT'; name: 'ShippingPackageDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ShippingPackageMakeDefaultPayload': { kind: 'OBJECT'; name: 'ShippingPackageMakeDefaultPayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ShippingPackageType': { name: 'ShippingPackageType'; enumValues: 'BOX' | 'FLAT_RATE' | 'ENVELOPE' | 'SOFT_PACK'; };
    'ShippingPackageUpdatePayload': { kind: 'OBJECT'; name: 'ShippingPackageUpdatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ShippingRate': { kind: 'OBJECT'; name: 'ShippingRate'; fields: { 'handle': { name: 'handle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShippingRefund': { kind: 'OBJECT'; name: 'ShippingRefund'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'maximumRefundable': { name: 'maximumRefundable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'maximumRefundableSet': { name: 'maximumRefundableSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'tax': { name: 'tax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'taxSet': { name: 'taxSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'ShippingRefundInput': { kind: 'INPUT_OBJECT'; name: 'ShippingRefundInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; defaultValue: null }, { name: 'fullRefund'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'Shop': { kind: 'OBJECT'; name: 'Shop'; fields: { 'alerts': { name: 'alerts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopAlert'; ofType: null; }; }; }; } }; 'allProductCategories': { name: 'allProductCategories'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductCategory'; ofType: null; }; }; }; } }; 'allProductCategoriesList': { name: 'allProductCategoriesList'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyCategory'; ofType: null; }; }; }; } }; 'analyticsToken': { name: 'analyticsToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'assignedFulfillmentOrders': { name: 'assignedFulfillmentOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderConnection'; ofType: null; }; } }; 'availableChannelApps': { name: 'availableChannelApps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppConnection'; ofType: null; }; } }; 'billingAddress': { name: 'billingAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopAddress'; ofType: null; }; } }; 'channelDefinitionsForInstalledChannels': { name: 'channelDefinitionsForInstalledChannels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AvailableChannelDefinitionsByChannel'; ofType: null; }; }; }; } }; 'channels': { name: 'channels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelConnection'; ofType: null; }; } }; 'checkoutApiSupported': { name: 'checkoutApiSupported'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'collectionByHandle': { name: 'collectionByHandle'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionSavedSearches': { name: 'collectionSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'collections': { name: 'collections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionConnection'; ofType: null; }; } }; 'contactEmail': { name: 'contactEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'countriesInShippingZones': { name: 'countriesInShippingZones'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountriesInShippingZones'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'currencyFormats': { name: 'currencyFormats'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CurrencyFormats'; ofType: null; }; } }; 'currencySettings': { name: 'currencySettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CurrencySettingConnection'; ofType: null; }; } }; 'customerAccounts': { name: 'customerAccounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopCustomerAccountsSetting'; ofType: null; }; } }; 'customerAccountsV2': { name: 'customerAccountsV2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerAccountsV2'; ofType: null; }; } }; 'customerSavedSearches': { name: 'customerSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'customerTags': { name: 'customerTags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StringConnection'; ofType: null; }; } }; 'customers': { name: 'customers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerConnection'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'domains': { name: 'domains'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; }; }; } }; 'draftOrderSavedSearches': { name: 'draftOrderSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'draftOrderTags': { name: 'draftOrderTags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StringConnection'; ofType: null; }; } }; 'draftOrders': { name: 'draftOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DraftOrderConnection'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'enabledPresentmentCurrencies': { name: 'enabledPresentmentCurrencies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; }; }; } }; 'features': { name: 'features'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopFeatures'; ofType: null; }; } }; 'fulfillmentOrders': { name: 'fulfillmentOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentOrderConnection'; ofType: null; }; } }; 'fulfillmentServices': { name: 'fulfillmentServices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentService'; ofType: null; }; }; }; } }; 'ianaTimezone': { name: 'ianaTimezone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inventoryItems': { name: 'inventoryItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InventoryItemConnection'; ofType: null; }; } }; 'limitedPendingOrderCount': { name: 'limitedPendingOrderCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LimitedPendingOrderCount'; ofType: null; }; } }; 'locations': { name: 'locations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationConnection'; ofType: null; }; } }; 'marketingEvents': { name: 'marketingEvents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketingEventConnection'; ofType: null; }; } }; 'marketingSmsConsentEnabledAtCheckout': { name: 'marketingSmsConsentEnabledAtCheckout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'merchantApprovalSignals': { name: 'merchantApprovalSignals'; type: { kind: 'OBJECT'; name: 'MerchantApprovalSignals'; ofType: null; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'myshopifyDomain': { name: 'myshopifyDomain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'navigationSettings': { name: 'navigationSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NavigationItem'; ofType: null; }; }; }; } }; 'orderNumberFormatPrefix': { name: 'orderNumberFormatPrefix'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'orderNumberFormatSuffix': { name: 'orderNumberFormatSuffix'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'orderSavedSearches': { name: 'orderSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'orderTags': { name: 'orderTags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StringConnection'; ofType: null; }; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'paymentSettings': { name: 'paymentSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentSettings'; ofType: null; }; } }; 'plan': { name: 'plan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopPlan'; ofType: null; }; } }; 'priceRuleSavedSearches': { name: 'priceRuleSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'priceRules': { name: 'priceRules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PriceRuleConnection'; ofType: null; }; } }; 'primaryDomain': { name: 'primaryDomain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'productByHandle': { name: 'productByHandle'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productImages': { name: 'productImages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ImageConnection'; ofType: null; }; } }; 'productSavedSearches': { name: 'productSavedSearches'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedSearchConnection'; ofType: null; }; } }; 'productTags': { name: 'productTags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StringConnection'; ofType: null; }; } }; 'productTypes': { name: 'productTypes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StringConnection'; ofType: null; }; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantConnection'; ofType: null; }; } }; 'productVendors': { name: 'productVendors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StringConnection'; ofType: null; }; } }; 'products': { name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductConnection'; ofType: null; }; } }; 'publicationCount': { name: 'publicationCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'resourceLimits': { name: 'resourceLimits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopResourceLimits'; ofType: null; }; } }; 'richTextEditorUrl': { name: 'richTextEditorUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'search': { name: 'search'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SearchResultConnection'; ofType: null; }; } }; 'searchFilters': { name: 'searchFilters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SearchFilterOptions'; ofType: null; }; } }; 'setupRequired': { name: 'setupRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'shipsToCountries': { name: 'shipsToCountries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; } }; 'shopPolicies': { name: 'shopPolicies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopPolicy'; ofType: null; }; }; }; } }; 'staffMembers': { name: 'staffMembers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffMemberConnection'; ofType: null; }; } }; 'storefrontAccessTokens': { name: 'storefrontAccessTokens'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StorefrontAccessTokenConnection'; ofType: null; }; } }; 'storefrontUrl': { name: 'storefrontUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'taxShipping': { name: 'taxShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'taxesIncluded': { name: 'taxesIncluded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'timezoneAbbreviation': { name: 'timezoneAbbreviation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timezoneOffset': { name: 'timezoneOffset'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timezoneOffsetMinutes': { name: 'timezoneOffsetMinutes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'transactionalSmsDisabled': { name: 'transactionalSmsDisabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; 'unitSystem': { name: 'unitSystem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UnitSystem'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'uploadedImagesByIds': { name: 'uploadedImagesByIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; }; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'weightUnit': { name: 'weightUnit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WeightUnit'; ofType: null; }; } }; }; };
    'ShopAddress': { kind: 'OBJECT'; name: 'ShopAddress'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address2': { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'company': { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'coordinatesValidated': { name: 'coordinatesValidated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCodeV2': { name: 'countryCodeV2'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'formatted': { name: 'formatted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'formattedArea': { name: 'formattedArea'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'latitude': { name: 'latitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'longitude': { name: 'longitude'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provinceCode': { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShopAlert': { kind: 'OBJECT'; name: 'ShopAlert'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopAlertAction'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShopAlertAction': { kind: 'OBJECT'; name: 'ShopAlertAction'; fields: { 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'ShopBillingPreferences': { kind: 'OBJECT'; name: 'ShopBillingPreferences'; fields: { 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; }; };
    'ShopBranding': { name: 'ShopBranding'; enumValues: 'SHOPIFY_GOLD' | 'SHOPIFY_PLUS' | 'ROGERS' | 'SHOPIFY'; };
    'ShopCustomerAccountsSetting': { name: 'ShopCustomerAccountsSetting'; enumValues: 'REQUIRED' | 'OPTIONAL' | 'DISABLED'; };
    'ShopFeatures': { kind: 'OBJECT'; name: 'ShopFeatures'; fields: { 'avalaraAvatax': { name: 'avalaraAvatax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'branding': { name: 'branding'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopBranding'; ofType: null; }; } }; 'bundles': { name: 'bundles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BundlesFeature'; ofType: null; }; } }; 'captcha': { name: 'captcha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'captchaExternalDomains': { name: 'captchaExternalDomains'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'cartTransform': { name: 'cartTransform'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CartTransformFeature'; ofType: null; }; } }; 'deliveryProfiles': { name: 'deliveryProfiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'dynamicRemarketing': { name: 'dynamicRemarketing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'eligibleForSubscriptionMigration': { name: 'eligibleForSubscriptionMigration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'eligibleForSubscriptions': { name: 'eligibleForSubscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'giftCards': { name: 'giftCards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'harmonizedSystemCode': { name: 'harmonizedSystemCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'internationalDomains': { name: 'internationalDomains'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'internationalPriceOverrides': { name: 'internationalPriceOverrides'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'internationalPriceRules': { name: 'internationalPriceRules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'legacySubscriptionGatewayEnabled': { name: 'legacySubscriptionGatewayEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'liveView': { name: 'liveView'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'multiLocation': { name: 'multiLocation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'onboardingVisual': { name: 'onboardingVisual'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'paypalExpressSubscriptionGatewayStatus': { name: 'paypalExpressSubscriptionGatewayStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaypalExpressSubscriptionsGatewayStatus'; ofType: null; }; } }; 'reports': { name: 'reports'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sellsSubscriptions': { name: 'sellsSubscriptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'shopifyPlus': { name: 'shopifyPlus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'showMetrics': { name: 'showMetrics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'storefront': { name: 'storefront'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'usingShopifyBalance': { name: 'usingShopifyBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ShopLocale': { kind: 'OBJECT'; name: 'ShopLocale'; fields: { 'locale': { name: 'locale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'marketWebPresences': { name: 'marketWebPresences'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MarketWebPresence'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'primary': { name: 'primary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'published': { name: 'published'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ShopLocaleDisablePayload': { kind: 'OBJECT'; name: 'ShopLocaleDisablePayload'; fields: { 'locale': { name: 'locale'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ShopLocaleEnablePayload': { kind: 'OBJECT'; name: 'ShopLocaleEnablePayload'; fields: { 'shopLocale': { name: 'shopLocale'; type: { kind: 'OBJECT'; name: 'ShopLocale'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ShopLocaleInput': { kind: 'INPUT_OBJECT'; name: 'ShopLocaleInput'; isOneOf: false; inputFields: [{ name: 'published'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'marketWebPresenceIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ShopLocaleUpdatePayload': { kind: 'OBJECT'; name: 'ShopLocaleUpdatePayload'; fields: { 'shopLocale': { name: 'shopLocale'; type: { kind: 'OBJECT'; name: 'ShopLocale'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'ShopPayInstallmentsPaymentDetails': { kind: 'OBJECT'; name: 'ShopPayInstallmentsPaymentDetails'; fields: { 'paymentMethodName': { name: 'paymentMethodName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShopPlan': { kind: 'OBJECT'; name: 'ShopPlan'; fields: { 'displayName': { name: 'displayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'partnerDevelopment': { name: 'partnerDevelopment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'shopifyPlus': { name: 'shopifyPlus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ShopPolicy': { kind: 'OBJECT'; name: 'ShopPolicy'; fields: { 'body': { name: 'body'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'HTML'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopPolicyType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'ShopPolicyErrorCode': { name: 'ShopPolicyErrorCode'; enumValues: 'TOO_BIG'; };
    'ShopPolicyInput': { kind: 'INPUT_OBJECT'; name: 'ShopPolicyInput'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopPolicyType'; ofType: null; }; }; defaultValue: null }, { name: 'body'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ShopPolicyType': { name: 'ShopPolicyType'; enumValues: 'REFUND_POLICY' | 'SHIPPING_POLICY' | 'PRIVACY_POLICY' | 'TERMS_OF_SERVICE' | 'TERMS_OF_SALE' | 'LEGAL_NOTICE' | 'SUBSCRIPTION_POLICY' | 'CONTACT_INFORMATION'; };
    'ShopPolicyUpdatePayload': { kind: 'OBJECT'; name: 'ShopPolicyUpdatePayload'; fields: { 'shopPolicy': { name: 'shopPolicy'; type: { kind: 'OBJECT'; name: 'ShopPolicy'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopPolicyUserError'; ofType: null; }; }; }; } }; }; };
    'ShopPolicyUserError': { kind: 'OBJECT'; name: 'ShopPolicyUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ShopPolicyErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShopResourceFeedbackCreatePayload': { kind: 'OBJECT'; name: 'ShopResourceFeedbackCreatePayload'; fields: { 'feedback': { name: 'feedback'; type: { kind: 'OBJECT'; name: 'AppFeedback'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopResourceFeedbackCreateUserError'; ofType: null; }; }; }; } }; }; };
    'ShopResourceFeedbackCreateUserError': { kind: 'OBJECT'; name: 'ShopResourceFeedbackCreateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ShopResourceFeedbackCreateUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShopResourceFeedbackCreateUserErrorCode': { name: 'ShopResourceFeedbackCreateUserErrorCode'; enumValues: 'OUTDATED_FEEDBACK' | 'INVALID' | 'BLANK' | 'PRESENT'; };
    'ShopResourceLimits': { kind: 'OBJECT'; name: 'ShopResourceLimits'; fields: { 'locationLimit': { name: 'locationLimit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'maxProductOptions': { name: 'maxProductOptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'maxProductVariants': { name: 'maxProductVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'redirectLimitReached': { name: 'redirectLimitReached'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ShopTagSort': { name: 'ShopTagSort'; enumValues: 'ALPHABETICAL' | 'POPULAR'; };
    'ShopifyFunction': { kind: 'OBJECT'; name: 'ShopifyFunction'; fields: { 'apiType': { name: 'apiType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'apiVersion': { name: 'apiVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'appBridge': { name: 'appBridge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FunctionsAppBridge'; ofType: null; }; } }; 'appKey': { name: 'appKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'inputQuery': { name: 'inputQuery'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'useCreationUi': { name: 'useCreationUi'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ShopifyFunctionConnection': { kind: 'OBJECT'; name: 'ShopifyFunctionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyFunctionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyFunction'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ShopifyFunctionEdge': { kind: 'OBJECT'; name: 'ShopifyFunctionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyFunction'; ofType: null; }; } }; }; };
    'ShopifyPaymentsAccount': { kind: 'OBJECT'; name: 'ShopifyPaymentsAccount'; fields: { 'activated': { name: 'activated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'balance': { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; }; }; } }; 'balanceTransactions': { name: 'balanceTransactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsBalanceTransactionConnection'; ofType: null; }; } }; 'bankAccounts': { name: 'bankAccounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsBankAccountConnection'; ofType: null; }; } }; 'chargeStatementDescriptor': { name: 'chargeStatementDescriptor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'chargeStatementDescriptors': { name: 'chargeStatementDescriptors'; type: { kind: 'INTERFACE'; name: 'ShopifyPaymentsChargeStatementDescriptor'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'defaultCurrency': { name: 'defaultCurrency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'disputes': { name: 'disputes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeConnection'; ofType: null; }; } }; 'fraudSettings': { name: 'fraudSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsFraudSettings'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'notificationSettings': { name: 'notificationSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsNotificationSettings'; ofType: null; }; } }; 'onboardable': { name: 'onboardable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'payoutSchedule': { name: 'payoutSchedule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsPayoutSchedule'; ofType: null; }; } }; 'payoutStatementDescriptor': { name: 'payoutStatementDescriptor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'payouts': { name: 'payouts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsPayoutConnection'; ofType: null; }; } }; 'permittedVerificationDocuments': { name: 'permittedVerificationDocuments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsVerificationDocument'; ofType: null; }; }; }; } }; 'verifications': { name: 'verifications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsVerification'; ofType: null; }; }; }; } }; }; };
    'ShopifyPaymentsAdjustmentOrder': { kind: 'OBJECT'; name: 'ShopifyPaymentsAdjustmentOrder'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'link': { name: 'link'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'orderTransactionId': { name: 'orderTransactionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; }; };
    'ShopifyPaymentsAssociatedOrder': { kind: 'OBJECT'; name: 'ShopifyPaymentsAssociatedOrder'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShopifyPaymentsBalanceTransaction': { kind: 'OBJECT'; name: 'ShopifyPaymentsBalanceTransaction'; fields: { 'adjustmentReason': { name: 'adjustmentReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'adjustmentsOrders': { name: 'adjustmentsOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsAdjustmentOrder'; ofType: null; }; }; }; } }; 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'associatedOrder': { name: 'associatedOrder'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsAssociatedOrder'; ofType: null; } }; 'associatedPayout': { name: 'associatedPayout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsBalanceTransactionAssociatedPayout'; ofType: null; }; } }; 'fee': { name: 'fee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'net': { name: 'net'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'sourceId': { name: 'sourceId'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'sourceOrderTransactionId': { name: 'sourceOrderTransactionId'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'sourceType': { name: 'sourceType'; type: { kind: 'ENUM'; name: 'ShopifyPaymentsSourceType'; ofType: null; } }; 'test': { name: 'test'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'transactionDate': { name: 'transactionDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyPaymentsTransactionType'; ofType: null; }; } }; }; };
    'ShopifyPaymentsBalanceTransactionAssociatedPayout': { kind: 'OBJECT'; name: 'ShopifyPaymentsBalanceTransactionAssociatedPayout'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'ShopifyPaymentsBalanceTransactionPayoutStatus'; ofType: null; } }; }; };
    'ShopifyPaymentsBalanceTransactionConnection': { kind: 'OBJECT'; name: 'ShopifyPaymentsBalanceTransactionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsBalanceTransactionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsBalanceTransaction'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ShopifyPaymentsBalanceTransactionEdge': { kind: 'OBJECT'; name: 'ShopifyPaymentsBalanceTransactionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsBalanceTransaction'; ofType: null; }; } }; }; };
    'ShopifyPaymentsBalanceTransactionPayoutStatus': { name: 'ShopifyPaymentsBalanceTransactionPayoutStatus'; enumValues: 'SCHEDULED' | 'IN_TRANSIT' | 'PAID' | 'FAILED' | 'CANCELED' | 'PENDING' | 'ACTION_REQUIRED'; };
    'ShopifyPaymentsBankAccount': { kind: 'OBJECT'; name: 'ShopifyPaymentsBankAccount'; fields: { 'accountNumber': { name: 'accountNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'accountNumberLastDigits': { name: 'accountNumberLastDigits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'bankName': { name: 'bankName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'payouts': { name: 'payouts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsPayoutConnection'; ofType: null; }; } }; 'routingNumber': { name: 'routingNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyPaymentsBankAccountStatus'; ofType: null; }; } }; }; };
    'ShopifyPaymentsBankAccountConnection': { kind: 'OBJECT'; name: 'ShopifyPaymentsBankAccountConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsBankAccountEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsBankAccount'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ShopifyPaymentsBankAccountEdge': { kind: 'OBJECT'; name: 'ShopifyPaymentsBankAccountEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsBankAccount'; ofType: null; }; } }; }; };
    'ShopifyPaymentsBankAccountStatus': { name: 'ShopifyPaymentsBankAccountStatus'; enumValues: 'NEW' | 'VALIDATED' | 'VERIFIED' | 'ERRORED'; };
    'ShopifyPaymentsChargeStatementDescriptor': { kind: 'INTERFACE'; name: 'ShopifyPaymentsChargeStatementDescriptor'; fields: { 'default': { name: 'default'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'prefix': { name: 'prefix'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'ShopifyPaymentsDefaultChargeStatementDescriptor' | 'ShopifyPaymentsJpChargeStatementDescriptor'; };
    'ShopifyPaymentsDefaultChargeStatementDescriptor': { kind: 'OBJECT'; name: 'ShopifyPaymentsDefaultChargeStatementDescriptor'; fields: { 'default': { name: 'default'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'prefix': { name: 'prefix'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShopifyPaymentsDispute': { kind: 'OBJECT'; name: 'ShopifyPaymentsDispute'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'evidenceDueBy': { name: 'evidenceDueBy'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'evidenceSentOn': { name: 'evidenceSentOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'finalizedOn': { name: 'finalizedOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'initiatedAt': { name: 'initiatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'reasonDetails': { name: 'reasonDetails'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeReasonDetails'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DisputeStatus'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DisputeType'; ofType: null; }; } }; }; };
    'ShopifyPaymentsDisputeConnection': { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsDispute'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ShopifyPaymentsDisputeEdge': { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsDispute'; ofType: null; }; } }; }; };
    'ShopifyPaymentsDisputeEvidence': { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeEvidence'; fields: { 'accessActivityLog': { name: 'accessActivityLog'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'cancellationPolicyDisclosure': { name: 'cancellationPolicyDisclosure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cancellationPolicyFile': { name: 'cancellationPolicyFile'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFileUpload'; ofType: null; } }; 'cancellationRebuttal': { name: 'cancellationRebuttal'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'customerCommunicationFile': { name: 'customerCommunicationFile'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFileUpload'; ofType: null; } }; 'customerEmailAddress': { name: 'customerEmailAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'customerFirstName': { name: 'customerFirstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'customerLastName': { name: 'customerLastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'customerPurchaseIp': { name: 'customerPurchaseIp'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dispute': { name: 'dispute'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsDispute'; ofType: null; }; } }; 'disputeFileUploads': { name: 'disputeFileUploads'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFileUpload'; ofType: null; }; }; }; } }; 'fulfillments': { name: 'fulfillments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFulfillment'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'productDescription': { name: 'productDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refundPolicyDisclosure': { name: 'refundPolicyDisclosure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refundPolicyFile': { name: 'refundPolicyFile'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFileUpload'; ofType: null; } }; 'refundRefusalExplanation': { name: 'refundRefusalExplanation'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'serviceDocumentationFile': { name: 'serviceDocumentationFile'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFileUpload'; ofType: null; } }; 'shippingAddress': { name: 'shippingAddress'; type: { kind: 'OBJECT'; name: 'MailingAddress'; ofType: null; } }; 'shippingDocumentationFile': { name: 'shippingDocumentationFile'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFileUpload'; ofType: null; } }; 'submitted': { name: 'submitted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'uncategorizedFile': { name: 'uncategorizedFile'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFileUpload'; ofType: null; } }; 'uncategorizedText': { name: 'uncategorizedText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShopifyPaymentsDisputeEvidenceFileType': { name: 'ShopifyPaymentsDisputeEvidenceFileType'; enumValues: 'CUSTOMER_COMMUNICATION_FILE' | 'REFUND_POLICY_FILE' | 'CANCELLATION_POLICY_FILE' | 'UNCATEGORIZED_FILE' | 'SHIPPING_DOCUMENTATION_FILE' | 'SERVICE_DOCUMENTATION_FILE'; };
    'ShopifyPaymentsDisputeEvidenceUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ShopifyPaymentsDisputeEvidenceUpdateInput'; isOneOf: false; inputFields: [{ name: 'customerEmailAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customerLastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customerFirstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'MailingAddressInput'; ofType: null; }; defaultValue: null }, { name: 'uncategorizedText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accessActivityLog'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'cancellationPolicyDisclosure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'cancellationRebuttal'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'refundPolicyDisclosure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'refundRefusalExplanation'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'cancellationPolicyFile'; type: { kind: 'INPUT_OBJECT'; name: 'ShopifyPaymentsDisputeFileUploadUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'customerCommunicationFile'; type: { kind: 'INPUT_OBJECT'; name: 'ShopifyPaymentsDisputeFileUploadUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'refundPolicyFile'; type: { kind: 'INPUT_OBJECT'; name: 'ShopifyPaymentsDisputeFileUploadUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'shippingDocumentationFile'; type: { kind: 'INPUT_OBJECT'; name: 'ShopifyPaymentsDisputeFileUploadUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'uncategorizedFile'; type: { kind: 'INPUT_OBJECT'; name: 'ShopifyPaymentsDisputeFileUploadUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'serviceDocumentationFile'; type: { kind: 'INPUT_OBJECT'; name: 'ShopifyPaymentsDisputeFileUploadUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'submitEvidence'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'ShopifyPaymentsDisputeFileUpload': { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFileUpload'; fields: { 'disputeEvidenceType': { name: 'disputeEvidenceType'; type: { kind: 'ENUM'; name: 'ShopifyPaymentsDisputeEvidenceFileType'; ofType: null; } }; 'fileSize': { name: 'fileSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'fileType': { name: 'fileType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'originalFileName': { name: 'originalFileName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'ShopifyPaymentsDisputeFileUploadUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ShopifyPaymentsDisputeFileUploadUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'destroy'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'ShopifyPaymentsDisputeFulfillment': { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeFulfillment'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'shippingCarrier': { name: 'shippingCarrier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shippingDate': { name: 'shippingDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'shippingTrackingNumber': { name: 'shippingTrackingNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShopifyPaymentsDisputeReason': { name: 'ShopifyPaymentsDisputeReason'; enumValues: 'FRAUDULENT' | 'GENERAL' | 'UNRECOGNIZED' | 'DUPLICATE' | 'SUBSCRIPTION_CANCELLED' | 'PRODUCT_UNACCEPTABLE' | 'PRODUCT_NOT_RECEIVED' | 'CREDIT_NOT_PROCESSED' | 'INCORRECT_ACCOUNT_DETAILS' | 'INSUFFICIENT_FUNDS' | 'BANK_CANNOT_PROCESS' | 'DEBIT_NOT_AUTHORIZED' | 'CUSTOMER_INITIATED'; };
    'ShopifyPaymentsDisputeReasonDetails': { kind: 'OBJECT'; name: 'ShopifyPaymentsDisputeReasonDetails'; fields: { 'networkReasonCode': { name: 'networkReasonCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyPaymentsDisputeReason'; ofType: null; }; } }; }; };
    'ShopifyPaymentsExtendedAuthorization': { kind: 'OBJECT'; name: 'ShopifyPaymentsExtendedAuthorization'; fields: { 'extendedAuthorizationExpiresAt': { name: 'extendedAuthorizationExpiresAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'standardAuthorizationExpiresAt': { name: 'standardAuthorizationExpiresAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'ShopifyPaymentsFraudSettings': { kind: 'OBJECT'; name: 'ShopifyPaymentsFraudSettings'; fields: { 'declineChargeOnAvsFailure': { name: 'declineChargeOnAvsFailure'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'declineChargeOnCvcFailure': { name: 'declineChargeOnCvcFailure'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ShopifyPaymentsJpChargeStatementDescriptor': { kind: 'OBJECT'; name: 'ShopifyPaymentsJpChargeStatementDescriptor'; fields: { 'default': { name: 'default'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'kana': { name: 'kana'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'kanji': { name: 'kanji'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'prefix': { name: 'prefix'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShopifyPaymentsNotificationSettings': { kind: 'OBJECT'; name: 'ShopifyPaymentsNotificationSettings'; fields: { 'payouts': { name: 'payouts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ShopifyPaymentsPayout': { kind: 'OBJECT'; name: 'ShopifyPaymentsPayout'; fields: { 'bankAccount': { name: 'bankAccount'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsBankAccount'; ofType: null; } }; 'gross': { name: 'gross'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'net': { name: 'net'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyPaymentsPayoutStatus'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsPayoutSummary'; ofType: null; }; } }; 'transactionType': { name: 'transactionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyPaymentsPayoutTransactionType'; ofType: null; }; } }; }; };
    'ShopifyPaymentsPayoutConnection': { kind: 'OBJECT'; name: 'ShopifyPaymentsPayoutConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsPayoutEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsPayout'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ShopifyPaymentsPayoutEdge': { kind: 'OBJECT'; name: 'ShopifyPaymentsPayoutEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsPayout'; ofType: null; }; } }; }; };
    'ShopifyPaymentsPayoutInterval': { name: 'ShopifyPaymentsPayoutInterval'; enumValues: 'DAILY' | 'WEEKLY' | 'MONTHLY' | 'MANUAL'; };
    'ShopifyPaymentsPayoutSchedule': { kind: 'OBJECT'; name: 'ShopifyPaymentsPayoutSchedule'; fields: { 'interval': { name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyPaymentsPayoutInterval'; ofType: null; }; } }; 'monthlyAnchor': { name: 'monthlyAnchor'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'weeklyAnchor': { name: 'weeklyAnchor'; type: { kind: 'ENUM'; name: 'DayOfTheWeek'; ofType: null; } }; }; };
    'ShopifyPaymentsPayoutStatus': { name: 'ShopifyPaymentsPayoutStatus'; enumValues: 'SCHEDULED' | 'IN_TRANSIT' | 'PAID' | 'FAILED' | 'CANCELED'; };
    'ShopifyPaymentsPayoutSummary': { kind: 'OBJECT'; name: 'ShopifyPaymentsPayoutSummary'; fields: { 'adjustmentsFee': { name: 'adjustmentsFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'adjustmentsGross': { name: 'adjustmentsGross'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'chargesFee': { name: 'chargesFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'chargesGross': { name: 'chargesGross'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'refundsFee': { name: 'refundsFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'refundsFeeGross': { name: 'refundsFeeGross'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'reservedFundsFee': { name: 'reservedFundsFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'reservedFundsGross': { name: 'reservedFundsGross'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'retriedPayoutsFee': { name: 'retriedPayoutsFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'retriedPayoutsGross': { name: 'retriedPayoutsGross'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'ShopifyPaymentsPayoutTransactionType': { name: 'ShopifyPaymentsPayoutTransactionType'; enumValues: 'DEPOSIT' | 'WITHDRAWAL'; };
    'ShopifyPaymentsRefundSet': { kind: 'OBJECT'; name: 'ShopifyPaymentsRefundSet'; fields: { 'acquirerReferenceNumber': { name: 'acquirerReferenceNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShopifyPaymentsSourceType': { name: 'ShopifyPaymentsSourceType'; enumValues: 'ADJUSTMENT_REVERSAL' | 'CHARGE' | 'REFUND' | 'SYSTEM_ADJUSTMENT' | 'DISPUTE' | 'ADJUSTMENT' | 'TRANSFER'; };
    'ShopifyPaymentsTransactionSet': { kind: 'OBJECT'; name: 'ShopifyPaymentsTransactionSet'; fields: { 'extendedAuthorizationSet': { name: 'extendedAuthorizationSet'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsExtendedAuthorization'; ofType: null; } }; 'refundSet': { name: 'refundSet'; type: { kind: 'OBJECT'; name: 'ShopifyPaymentsRefundSet'; ofType: null; } }; }; };
    'ShopifyPaymentsTransactionType': { name: 'ShopifyPaymentsTransactionType'; enumValues: 'CHARGEBACK_PROTECTION_CREDIT' | 'CHARGEBACK_PROTECTION_CREDIT_REVERSAL' | 'CHARGEBACK_PROTECTION_DEBIT' | 'CHARGEBACK_PROTECTION_DEBIT_REVERSAL' | 'COLLECTIONS_CREDIT' | 'COLLECTIONS_CREDIT_REVERSAL' | 'PROMOTION_CREDIT' | 'PROMOTION_CREDIT_REVERSAL' | 'ANOMALY_CREDIT' | 'ANOMALY_CREDIT_REVERSAL' | 'ANOMALY_DEBIT' | 'ANOMALY_DEBIT_REVERSAL' | 'VAT_REFUND_CREDIT' | 'VAT_REFUND_CREDIT_REVERSAL' | 'CHANNEL_CREDIT' | 'CHANNEL_CREDIT_REVERSAL' | 'CHANNEL_TRANSFER_CREDIT' | 'CHANNEL_TRANSFER_CREDIT_REVERSAL' | 'CHANNEL_TRANSFER_DEBIT' | 'CHANNEL_TRANSFER_DEBIT_REVERSAL' | 'CHANNEL_PROMOTION_CREDIT' | 'CHANNEL_PROMOTION_CREDIT_REVERSAL' | 'MARKETPLACE_FEE_CREDIT' | 'MARKETPLACE_FEE_CREDIT_REVERSAL' | 'MERCHANT_GOODWILL_CREDIT' | 'MERCHANT_GOODWILL_CREDIT_REVERSAL' | 'TAX_ADJUSTMENT_DEBIT' | 'TAX_ADJUSTMENT_DEBIT_REVERSAL' | 'TAX_ADJUSTMENT_CREDIT' | 'TAX_ADJUSTMENT_CREDIT_REVERSAL' | 'BILLING_DEBIT' | 'BILLING_DEBIT_REVERSAL' | 'SHOP_CASH_CREDIT' | 'SHOP_CASH_CREDIT_REVERSAL' | 'SHOP_CASH_BILLING_DEBIT' | 'SHOP_CASH_BILLING_DEBIT_REVERSAL' | 'SHOP_CASH_REFUND_DEBIT' | 'SHOP_CASH_REFUND_DEBIT_REVERSAL' | 'SHOP_CASH_CAMPAIGN_BILLING_DEBIT' | 'SHOP_CASH_CAMPAIGN_BILLING_DEBIT_REVERSAL' | 'SHOP_CASH_CAMPAIGN_BILLING_CREDIT' | 'SHOP_CASH_CAMPAIGN_BILLING_CREDIT_REVERSAL' | 'SELLER_PROTECTION_CREDIT' | 'SELLER_PROTECTION_CREDIT_REVERSAL' | 'SHOPIFY_COLLECTIVE_DEBIT' | 'SHOPIFY_COLLECTIVE_DEBIT_REVERSAL' | 'SHOPIFY_COLLECTIVE_CREDIT' | 'SHOPIFY_COLLECTIVE_CREDIT_REVERSAL' | 'BALANCE_TRANSFER_INBOUND' | 'MARKETS_PRO_CREDIT' | 'CUSTOMS_DUTY_ADJUSTMENT' | 'IMPORT_TAX_ADJUSTMENT' | 'SHIPPING_LABEL_ADJUSTMENT' | 'SHIPPING_LABEL_ADJUSTMENT_BASE' | 'SHIPPING_LABEL_ADJUSTMENT_SURCHARGE' | 'SHIPPING_RETURN_TO_ORIGIN_ADJUSTMENT' | 'SHIPPING_OTHER_CARRIER_CHARGE_ADJUSTMENT' | 'CHARGE_ADJUSTMENT' | 'REFUND_ADJUSTMENT' | 'CHARGEBACK_FEE' | 'CHARGEBACK_FEE_REFUND' | 'TRANSFER' | 'TRANSFER_FAILURE' | 'TRANSFER_CANCEL' | 'RESERVED_FUNDS_WITHDRAWAL' | 'RESERVED_FUNDS_REVERSAL' | 'RISK_REVERSAL' | 'RISK_WITHDRAWAL' | 'MERCHANT_TO_MERCHANT_DEBIT' | 'MERCHANT_TO_MERCHANT_DEBIT_REVERSAL' | 'MERCHANT_TO_MERCHANT_CREDIT' | 'MERCHANT_TO_MERCHANT_CREDIT_REVERSAL' | 'SHOPIFY_SOURCE_DEBIT' | 'SHOPIFY_SOURCE_DEBIT_REVERSAL' | 'SHOPIFY_SOURCE_CREDIT' | 'SHOPIFY_SOURCE_CREDIT_REVERSAL' | 'CHARGE' | 'REFUND' | 'REFUND_FAILURE' | 'APPLICATION_FEE_REFUND' | 'ADJUSTMENT' | 'DISPUTE_WITHDRAWAL' | 'DISPUTE_REVERSAL' | 'SHIPPING_LABEL' | 'CUSTOMS_DUTY' | 'IMPORT_TAX' | 'CHARGEBACK_HOLD' | 'CHARGEBACK_HOLD_RELEASE' | 'RESERVED_FUNDS' | 'STRIPE_FEE' | 'TRANSFER_REFUND'; };
    'ShopifyPaymentsVerification': { kind: 'OBJECT'; name: 'ShopifyPaymentsVerification'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyPaymentsVerificationStatus'; ofType: null; }; } }; 'subject': { name: 'subject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyPaymentsVerificationSubject'; ofType: null; }; } }; }; };
    'ShopifyPaymentsVerificationDocument': { kind: 'OBJECT'; name: 'ShopifyPaymentsVerificationDocument'; fields: { 'backRequired': { name: 'backRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'frontRequired': { name: 'frontRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyPaymentsVerificationDocumentType'; ofType: null; }; } }; }; };
    'ShopifyPaymentsVerificationDocumentType': { name: 'ShopifyPaymentsVerificationDocumentType'; enumValues: 'DRIVERS_LICENSE' | 'GOVERNMENT_IDENTIFICATION' | 'PASSPORT'; };
    'ShopifyPaymentsVerificationStatus': { name: 'ShopifyPaymentsVerificationStatus'; enumValues: 'VERIFIED' | 'UNVERIFIED' | 'PENDING'; };
    'ShopifyPaymentsVerificationSubject': { kind: 'OBJECT'; name: 'ShopifyPaymentsVerificationSubject'; fields: { 'familyName': { name: 'familyName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'givenName': { name: 'givenName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShopifyProtectEligibilityStatus': { name: 'ShopifyProtectEligibilityStatus'; enumValues: 'PENDING' | 'ELIGIBLE' | 'NOT_ELIGIBLE'; };
    'ShopifyProtectOrderEligibility': { kind: 'OBJECT'; name: 'ShopifyProtectOrderEligibility'; fields: { 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyProtectEligibilityStatus'; ofType: null; }; } }; }; };
    'ShopifyProtectOrderSummary': { kind: 'OBJECT'; name: 'ShopifyProtectOrderSummary'; fields: { 'eligibility': { name: 'eligibility'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyProtectOrderEligibility'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopifyProtectStatus'; ofType: null; }; } }; }; };
    'ShopifyProtectStatus': { name: 'ShopifyProtectStatus'; enumValues: 'PENDING' | 'ACTIVE' | 'INACTIVE' | 'PROTECTED' | 'NOT_PROTECTED'; };
    'StaffMember': { kind: 'OBJECT'; name: 'StaffMember'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'avatar': { name: 'avatar'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'exists': { name: 'exists'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'initials': { name: 'initials'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'isShopOwner': { name: 'isShopOwner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'locale': { name: 'locale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateData': { name: 'privateData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffMemberPrivateData'; ofType: null; }; } }; }; };
    'StaffMemberConnection': { kind: 'OBJECT'; name: 'StaffMemberConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffMemberEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'StaffMemberDefaultImage': { name: 'StaffMemberDefaultImage'; enumValues: 'DEFAULT' | 'TRANSPARENT' | 'NOT_FOUND'; };
    'StaffMemberEdge': { kind: 'OBJECT'; name: 'StaffMemberEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; }; } }; }; };
    'StaffMemberPermission': { name: 'StaffMemberPermission'; enumValues: 'APPLICATIONS' | 'CHANNELS' | 'CREATE_AND_EDIT_CUSTOMERS' | 'CUSTOMERS' | 'DASHBOARD' | 'DELETE_CUSTOMERS' | 'DOMAINS' | 'DRAFT_ORDERS' | 'EDIT_ORDERS' | 'ERASE_CUSTOMER_DATA' | 'EXPORT_CUSTOMERS' | 'FULL' | 'GIFT_CARDS' | 'LINKS' | 'LOCATIONS' | 'MARKETING' | 'MARKETING_SECTION' | 'MERGE_CUSTOMERS' | 'ORDERS' | 'OVERVIEWS' | 'PAGES' | 'PAY_ORDERS_BY_VAULTED_CARD' | 'PREFERENCES' | 'PRODUCTS' | 'REPORTS' | 'REQUEST_CUSTOMER_DATA' | 'THEMES' | 'TRANSLATIONS'; };
    'StaffMemberPrivateData': { kind: 'OBJECT'; name: 'StaffMemberPrivateData'; fields: { 'accountSettingsUrl': { name: 'accountSettingsUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StaffMemberPermission'; ofType: null; }; }; }; } }; }; };
    'StageImageInput': { kind: 'INPUT_OBJECT'; name: 'StageImageInput'; isOneOf: false; inputFields: [{ name: 'resource'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StagedUploadTargetGenerateUploadResource'; ofType: null; }; }; defaultValue: null }, { name: 'filename'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'mimeType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'httpMethod'; type: { kind: 'ENUM'; name: 'StagedUploadHttpMethodType'; ofType: null; }; defaultValue: "PUT" }]; };
    'StagedMediaUploadTarget': { kind: 'OBJECT'; name: 'StagedMediaUploadTarget'; fields: { 'parameters': { name: 'parameters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StagedUploadParameter'; ofType: null; }; }; }; } }; 'resourceUrl': { name: 'resourceUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; }; };
    'StagedUploadHttpMethodType': { name: 'StagedUploadHttpMethodType'; enumValues: 'POST' | 'PUT'; };
    'StagedUploadInput': { kind: 'INPUT_OBJECT'; name: 'StagedUploadInput'; isOneOf: false; inputFields: [{ name: 'resource'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StagedUploadTargetGenerateUploadResource'; ofType: null; }; }; defaultValue: null }, { name: 'filename'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'mimeType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'httpMethod'; type: { kind: 'ENUM'; name: 'StagedUploadHttpMethodType'; ofType: null; }; defaultValue: "PUT" }, { name: 'fileSize'; type: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; defaultValue: null }]; };
    'StagedUploadParameter': { kind: 'OBJECT'; name: 'StagedUploadParameter'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StagedUploadTarget': { kind: 'OBJECT'; name: 'StagedUploadTarget'; fields: { 'parameters': { name: 'parameters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ImageUploadParameter'; ofType: null; }; }; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StagedUploadTargetGenerateInput': { kind: 'INPUT_OBJECT'; name: 'StagedUploadTargetGenerateInput'; isOneOf: false; inputFields: [{ name: 'resource'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StagedUploadTargetGenerateUploadResource'; ofType: null; }; }; defaultValue: null }, { name: 'filename'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'mimeType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'httpMethod'; type: { kind: 'ENUM'; name: 'StagedUploadHttpMethodType'; ofType: null; }; defaultValue: "PUT" }, { name: 'fileSize'; type: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; defaultValue: null }]; };
    'StagedUploadTargetGeneratePayload': { kind: 'OBJECT'; name: 'StagedUploadTargetGeneratePayload'; fields: { 'parameters': { name: 'parameters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MutationsStagedUploadTargetGenerateUploadParameter'; ofType: null; }; }; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'StagedUploadTargetGenerateUploadResource': { name: 'StagedUploadTargetGenerateUploadResource'; enumValues: 'COLLECTION_IMAGE' | 'FILE' | 'IMAGE' | 'MODEL_3D' | 'PRODUCT_IMAGE' | 'SHOP_IMAGE' | 'VIDEO' | 'BULK_MUTATION_VARIABLES' | 'RETURN_LABEL' | 'URL_REDIRECT_IMPORT'; };
    'StagedUploadTargetsGeneratePayload': { kind: 'OBJECT'; name: 'StagedUploadTargetsGeneratePayload'; fields: { 'urls': { name: 'urls'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StagedUploadTarget'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'StagedUploadsCreatePayload': { kind: 'OBJECT'; name: 'StagedUploadsCreatePayload'; fields: { 'stagedTargets': { name: 'stagedTargets'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StagedMediaUploadTarget'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'StandardMetafieldDefinitionEnablePayload': { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionEnablePayload'; fields: { 'createdDefinition': { name: 'createdDefinition'; type: { kind: 'OBJECT'; name: 'MetafieldDefinition'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionEnableUserError'; ofType: null; }; }; }; } }; }; };
    'StandardMetafieldDefinitionEnableUserError': { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionEnableUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'StandardMetafieldDefinitionEnableUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StandardMetafieldDefinitionEnableUserErrorCode': { name: 'StandardMetafieldDefinitionEnableUserErrorCode'; enumValues: 'INVALID' | 'TAKEN' | 'TEMPLATE_NOT_FOUND' | 'LIMIT_EXCEEDED' | 'UNSTRUCTURED_ALREADY_EXISTS' | 'TYPE_NOT_ALLOWED_FOR_CONDITIONS'; };
    'StandardMetafieldDefinitionTemplate': { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionTemplate'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ownerTypes': { name: 'ownerTypes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetafieldOwnerType'; ofType: null; }; }; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionType'; ofType: null; }; } }; 'validations': { name: 'validations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionValidation'; ofType: null; }; }; }; } }; 'visibleToStorefrontApi': { name: 'visibleToStorefrontApi'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'StandardMetafieldDefinitionTemplateConnection': { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionTemplateConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionTemplateEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionTemplate'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'StandardMetafieldDefinitionTemplateEdge': { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionTemplateEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StandardMetafieldDefinitionTemplate'; ofType: null; }; } }; }; };
    'StandardMetaobjectDefinitionEnablePayload': { kind: 'OBJECT'; name: 'StandardMetaobjectDefinitionEnablePayload'; fields: { 'metaobjectDefinition': { name: 'metaobjectDefinition'; type: { kind: 'OBJECT'; name: 'MetaobjectDefinition'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetaobjectUserError'; ofType: null; }; }; }; } }; }; };
    'StandardizedProductType': { kind: 'OBJECT'; name: 'StandardizedProductType'; fields: { 'productTaxonomyNode': { name: 'productTaxonomyNode'; type: { kind: 'OBJECT'; name: 'ProductTaxonomyNode'; ofType: null; } }; }; };
    'StandardizedProductTypeInput': { kind: 'INPUT_OBJECT'; name: 'StandardizedProductTypeInput'; isOneOf: false; inputFields: [{ name: 'productTaxonomyNodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'StoreCreditAccount': { kind: 'OBJECT'; name: 'StoreCreditAccount'; fields: { 'balance': { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'owner': { name: 'owner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'HasStoreCreditAccounts'; ofType: null; }; } }; 'transactions': { name: 'transactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccountTransactionConnection'; ofType: null; }; } }; }; };
    'StoreCreditAccountConnection': { kind: 'OBJECT'; name: 'StoreCreditAccountConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccountEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccount'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'StoreCreditAccountCreditInput': { kind: 'INPUT_OBJECT'; name: 'StoreCreditAccountCreditInput'; isOneOf: false; inputFields: [{ name: 'creditAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'StoreCreditAccountCreditPayload': { kind: 'OBJECT'; name: 'StoreCreditAccountCreditPayload'; fields: { 'storeCreditAccountTransaction': { name: 'storeCreditAccountTransaction'; type: { kind: 'OBJECT'; name: 'StoreCreditAccountCreditTransaction'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccountCreditUserError'; ofType: null; }; }; }; } }; }; };
    'StoreCreditAccountCreditTransaction': { kind: 'OBJECT'; name: 'StoreCreditAccountCreditTransaction'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccount'; ofType: null; }; } }; 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'balanceAfterTransaction': { name: 'balanceAfterTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'remainingAmount': { name: 'remainingAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'StoreCreditAccountCreditUserError': { kind: 'OBJECT'; name: 'StoreCreditAccountCreditUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'StoreCreditAccountCreditUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StoreCreditAccountCreditUserErrorCode': { name: 'StoreCreditAccountCreditUserErrorCode'; enumValues: 'ACCOUNT_NOT_FOUND' | 'OWNER_NOT_FOUND' | 'NEGATIVE_OR_ZERO_AMOUNT' | 'MISMATCHING_CURRENCY' | 'EXPIRES_AT_IN_PAST' | 'CREDIT_LIMIT_EXCEEDED'; };
    'StoreCreditAccountDebitInput': { kind: 'INPUT_OBJECT'; name: 'StoreCreditAccountDebitInput'; isOneOf: false; inputFields: [{ name: 'debitAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }]; };
    'StoreCreditAccountDebitPayload': { kind: 'OBJECT'; name: 'StoreCreditAccountDebitPayload'; fields: { 'storeCreditAccountTransaction': { name: 'storeCreditAccountTransaction'; type: { kind: 'OBJECT'; name: 'StoreCreditAccountDebitTransaction'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccountDebitUserError'; ofType: null; }; }; }; } }; }; };
    'StoreCreditAccountDebitRevertTransaction': { kind: 'OBJECT'; name: 'StoreCreditAccountDebitRevertTransaction'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccount'; ofType: null; }; } }; 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'balanceAfterTransaction': { name: 'balanceAfterTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'debitTransaction': { name: 'debitTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccountDebitTransaction'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'StoreCreditAccountDebitTransaction': { kind: 'OBJECT'; name: 'StoreCreditAccountDebitTransaction'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccount'; ofType: null; }; } }; 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'balanceAfterTransaction': { name: 'balanceAfterTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'StoreCreditAccountDebitUserError': { kind: 'OBJECT'; name: 'StoreCreditAccountDebitUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'StoreCreditAccountDebitUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StoreCreditAccountDebitUserErrorCode': { name: 'StoreCreditAccountDebitUserErrorCode'; enumValues: 'ACCOUNT_NOT_FOUND' | 'NEGATIVE_OR_ZERO_AMOUNT' | 'INSUFFICIENT_FUNDS' | 'MISMATCHING_CURRENCY'; };
    'StoreCreditAccountEdge': { kind: 'OBJECT'; name: 'StoreCreditAccountEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccount'; ofType: null; }; } }; }; };
    'StoreCreditAccountExpirationTransaction': { kind: 'OBJECT'; name: 'StoreCreditAccountExpirationTransaction'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccount'; ofType: null; }; } }; 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'balanceAfterTransaction': { name: 'balanceAfterTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'creditTransaction': { name: 'creditTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccountCreditTransaction'; ofType: null; }; } }; }; };
    'StoreCreditAccountTransaction': { kind: 'INTERFACE'; name: 'StoreCreditAccountTransaction'; fields: { 'account': { name: 'account'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccount'; ofType: null; }; } }; 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'balanceAfterTransaction': { name: 'balanceAfterTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; possibleTypes: 'StoreCreditAccountCreditTransaction' | 'StoreCreditAccountDebitRevertTransaction' | 'StoreCreditAccountDebitTransaction' | 'StoreCreditAccountExpirationTransaction'; };
    'StoreCreditAccountTransactionConnection': { kind: 'OBJECT'; name: 'StoreCreditAccountTransactionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoreCreditAccountTransactionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'StoreCreditAccountTransaction'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'StoreCreditAccountTransactionEdge': { kind: 'OBJECT'; name: 'StoreCreditAccountTransactionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'StoreCreditAccountTransaction'; ofType: null; }; } }; }; };
    'StorefrontAccessToken': { kind: 'OBJECT'; name: 'StorefrontAccessToken'; fields: { 'accessScopes': { name: 'accessScopes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessScope'; ofType: null; }; }; }; } }; 'accessToken': { name: 'accessToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'StorefrontAccessTokenConnection': { kind: 'OBJECT'; name: 'StorefrontAccessTokenConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StorefrontAccessTokenEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StorefrontAccessToken'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'StorefrontAccessTokenCreatePayload': { kind: 'OBJECT'; name: 'StorefrontAccessTokenCreatePayload'; fields: { 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'storefrontAccessToken': { name: 'storefrontAccessToken'; type: { kind: 'OBJECT'; name: 'StorefrontAccessToken'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'StorefrontAccessTokenDeleteInput': { kind: 'INPUT_OBJECT'; name: 'StorefrontAccessTokenDeleteInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'StorefrontAccessTokenDeletePayload': { kind: 'OBJECT'; name: 'StorefrontAccessTokenDeletePayload'; fields: { 'deletedStorefrontAccessTokenId': { name: 'deletedStorefrontAccessTokenId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'StorefrontAccessTokenEdge': { kind: 'OBJECT'; name: 'StorefrontAccessTokenEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StorefrontAccessToken'; ofType: null; }; } }; }; };
    'StorefrontAccessTokenInput': { kind: 'INPUT_OBJECT'; name: 'StorefrontAccessTokenInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'StorefrontID': unknown;
    'String': unknown;
    'StringConnection': { kind: 'OBJECT'; name: 'StringConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StringEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'StringEdge': { kind: 'OBJECT'; name: 'StringEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionAppliedCodeDiscount': { kind: 'OBJECT'; name: 'SubscriptionAppliedCodeDiscount'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'redeemCode': { name: 'redeemCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rejectionReason': { name: 'rejectionReason'; type: { kind: 'ENUM'; name: 'SubscriptionDiscountRejectionReason'; ofType: null; } }; }; };
    'SubscriptionAtomicLineInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionAtomicLineInput'; isOneOf: false; inputFields: [{ name: 'line'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SubscriptionLineInput'; ofType: null; }; }; defaultValue: null }, { name: 'discounts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SubscriptionAtomicManualDiscountInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'SubscriptionAtomicManualDiscountInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionAtomicManualDiscountInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountValueInput'; ofType: null; }; defaultValue: null }, { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionBillingAttempt': { kind: 'OBJECT'; name: 'SubscriptionBillingAttempt'; fields: { 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'errorCode': { name: 'errorCode'; type: { kind: 'ENUM'; name: 'SubscriptionBillingAttemptErrorCode'; ofType: null; } }; 'errorMessage': { name: 'errorMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'idempotencyKey': { name: 'idempotencyKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nextActionUrl': { name: 'nextActionUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'originTime': { name: 'originTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'ready': { name: 'ready'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'subscriptionContract': { name: 'subscriptionContract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; }; } }; }; };
    'SubscriptionBillingAttemptConnection': { kind: 'OBJECT'; name: 'SubscriptionBillingAttemptConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingAttemptEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingAttempt'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SubscriptionBillingAttemptCreatePayload': { kind: 'OBJECT'; name: 'SubscriptionBillingAttemptCreatePayload'; fields: { 'subscriptionBillingAttempt': { name: 'subscriptionBillingAttempt'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingAttempt'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BillingAttemptUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingAttemptEdge': { kind: 'OBJECT'; name: 'SubscriptionBillingAttemptEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingAttempt'; ofType: null; }; } }; }; };
    'SubscriptionBillingAttemptErrorCode': { name: 'SubscriptionBillingAttemptErrorCode'; enumValues: 'PAYMENT_METHOD_NOT_FOUND' | 'PAYMENT_PROVIDER_IS_NOT_ENABLED' | 'INVALID_PAYMENT_METHOD' | 'UNEXPECTED_ERROR' | 'EXPIRED_PAYMENT_METHOD' | 'PAYMENT_METHOD_DECLINED' | 'AUTHENTICATION_ERROR' | 'TEST_MODE' | 'BUYER_CANCELED_PAYMENT_METHOD' | 'CUSTOMER_NOT_FOUND' | 'CUSTOMER_INVALID' | 'INVALID_SHIPPING_ADDRESS' | 'INVALID_CUSTOMER_BILLING_AGREEMENT' | 'INVOICE_ALREADY_PAID' | 'PAYMENT_METHOD_INCOMPATIBLE_WITH_GATEWAY_CONFIG' | 'AMOUNT_TOO_SMALL' | 'INVENTORY_ALLOCATIONS_NOT_FOUND' | 'INSUFFICIENT_INVENTORY' | 'TRANSIENT_ERROR' | 'INSUFFICIENT_FUNDS' | 'PURCHASE_TYPE_NOT_SUPPORTED' | 'PAYPAL_ERROR_GENERAL' | 'CARD_NUMBER_INCORRECT' | 'FRAUD_SUSPECTED'; };
    'SubscriptionBillingAttemptInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingAttemptInput'; isOneOf: false; inputFields: [{ name: 'idempotencyKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'originTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'billingCycleSelector'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingCycleSelector'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionBillingAttemptsSortKeys': { name: 'SubscriptionBillingAttemptsSortKeys'; enumValues: 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'SubscriptionBillingCycle': { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; fields: { 'billingAttemptExpectedDate': { name: 'billingAttemptExpectedDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'billingAttempts': { name: 'billingAttempts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingAttemptConnection'; ofType: null; }; } }; 'cycleEndAt': { name: 'cycleEndAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'cycleIndex': { name: 'cycleIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'cycleStartAt': { name: 'cycleStartAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'edited': { name: 'edited'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'editedContract': { name: 'editedContract'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleEditedContract'; ofType: null; } }; 'skipped': { name: 'skipped'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sourceContract': { name: 'sourceContract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SubscriptionBillingCycleBillingCycleStatus'; ofType: null; }; } }; }; };
    'SubscriptionBillingCycleBillingAttemptStatus': { name: 'SubscriptionBillingCycleBillingAttemptStatus'; enumValues: 'HAS_ATTEMPT' | 'NO_ATTEMPT' | 'ANY'; };
    'SubscriptionBillingCycleBillingCycleStatus': { name: 'SubscriptionBillingCycleBillingCycleStatus'; enumValues: 'BILLED' | 'UNBILLED'; };
    'SubscriptionBillingCycleBulkChargePayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleBulkChargePayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleBulkUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleBulkFilters': { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingCycleBulkFilters'; isOneOf: false; inputFields: [{ name: 'billingCycleStatus'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SubscriptionBillingCycleBillingCycleStatus'; ofType: null; }; }; }; defaultValue: null }, { name: 'contractStatus'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SubscriptionContractSubscriptionStatus'; ofType: null; }; }; }; defaultValue: null }, { name: 'billingAttemptStatus'; type: { kind: 'ENUM'; name: 'SubscriptionBillingCycleBillingAttemptStatus'; ofType: null; }; defaultValue: "ANY" }]; };
    'SubscriptionBillingCycleBulkSearchPayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleBulkSearchPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleBulkUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleBulkUserError': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleBulkUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'SubscriptionBillingCycleBulkUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionBillingCycleBulkUserErrorCode': { name: 'SubscriptionBillingCycleBulkUserErrorCode'; enumValues: 'INVALID' | 'BLANK' | 'END_DATE_IN_THE_FUTURE' | 'INVALID_DATE_RANGE' | 'START_DATE_BEFORE_END_DATE'; };
    'SubscriptionBillingCycleChargePayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleChargePayload'; fields: { 'subscriptionBillingAttempt': { name: 'subscriptionBillingAttempt'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingAttempt'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BillingAttemptUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleConnection': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SubscriptionBillingCycleContractDraftCommitPayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleContractDraftCommitPayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleEditedContract'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleContractDraftConcatenatePayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleContractDraftConcatenatePayload'; fields: { 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleContractEditPayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleContractEditPayload'; fields: { 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleEdge': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; ofType: null; }; } }; }; };
    'SubscriptionBillingCycleEditDeletePayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleEditDeletePayload'; fields: { 'billingCycles': { name: 'billingCycles'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleEditedContract': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleEditedContract'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appAdminUrl': { name: 'appAdminUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'billingCycles': { name: 'billingCycles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleConnection'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'deliveryMethod': { name: 'deliveryMethod'; type: { kind: 'UNION'; name: 'SubscriptionDeliveryMethod'; ofType: null; } }; 'deliveryPrice': { name: 'deliveryPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'discounts': { name: 'discounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionManualDiscountConnection'; ofType: null; }; } }; 'lineCount': { name: 'lineCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLineConnection'; ofType: null; }; } }; 'linesCount': { name: 'linesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'SubscriptionBillingCycleEditsDeletePayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleEditsDeletePayload'; fields: { 'billingCycles': { name: 'billingCycles'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleErrorCode': { name: 'SubscriptionBillingCycleErrorCode'; enumValues: 'INVALID' | 'CYCLE_NOT_FOUND' | 'NO_CYCLE_EDITS' | 'INVALID_CYCLE_INDEX' | 'INVALID_DATE' | 'EMPTY_BILLING_CYCLE_EDIT_SCHEDULE_INPUT' | 'BILLING_DATE_SET_ON_SKIPPED' | 'OUT_OF_BOUNDS' | 'UPCOMING_CYCLE_LIMIT_EXCEEDED' | 'CYCLE_INDEX_OUT_OF_RANGE' | 'CYCLE_START_DATE_OUT_OF_RANGE' | 'INCOMPLETE_BILLING_ATTEMPTS'; };
    'SubscriptionBillingCycleInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingCycleInput'; isOneOf: false; inputFields: [{ name: 'contractId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'selector'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingCycleSelector'; ofType: null; }; }; defaultValue: null }]; };
    'SubscriptionBillingCycleScheduleEditInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingCycleScheduleEditInput'; isOneOf: false; inputFields: [{ name: 'skip'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'billingDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SubscriptionBillingCycleScheduleEditInputScheduleEditReason'; ofType: null; }; }; defaultValue: null }]; };
    'SubscriptionBillingCycleScheduleEditInputScheduleEditReason': { name: 'SubscriptionBillingCycleScheduleEditInputScheduleEditReason'; enumValues: 'BUYER_INITIATED' | 'MERCHANT_INITIATED' | 'DEV_INITIATED'; };
    'SubscriptionBillingCycleScheduleEditPayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleScheduleEditPayload'; fields: { 'billingCycle': { name: 'billingCycle'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleSelector': { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingCycleSelector'; isOneOf: false; inputFields: [{ name: 'index'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'date'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionBillingCycleSkipPayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleSkipPayload'; fields: { 'billingCycle': { name: 'billingCycle'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleSkipUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleSkipUserError': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleSkipUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'SubscriptionBillingCycleSkipUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionBillingCycleSkipUserErrorCode': { name: 'SubscriptionBillingCycleSkipUserErrorCode'; enumValues: 'INVALID'; };
    'SubscriptionBillingCycleUnskipPayload': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleUnskipPayload'; fields: { 'billingCycle': { name: 'billingCycle'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleUnskipUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionBillingCycleUnskipUserError': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleUnskipUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'SubscriptionBillingCycleUnskipUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionBillingCycleUnskipUserErrorCode': { name: 'SubscriptionBillingCycleUnskipUserErrorCode'; enumValues: 'INVALID'; };
    'SubscriptionBillingCycleUserError': { kind: 'OBJECT'; name: 'SubscriptionBillingCycleUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'SubscriptionBillingCycleErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionBillingCyclesDateRangeSelector': { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingCyclesDateRangeSelector'; isOneOf: false; inputFields: [{ name: 'startDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'endDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }]; };
    'SubscriptionBillingCyclesIndexRangeSelector': { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingCyclesIndexRangeSelector'; isOneOf: false; inputFields: [{ name: 'startIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'endIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'SubscriptionBillingCyclesSortKeys': { name: 'SubscriptionBillingCyclesSortKeys'; enumValues: 'CYCLE_INDEX' | 'ID' | 'RELEVANCE'; };
    'SubscriptionBillingCyclesTargetSelection': { name: 'SubscriptionBillingCyclesTargetSelection'; enumValues: 'ALL'; };
    'SubscriptionBillingPolicy': { kind: 'OBJECT'; name: 'SubscriptionBillingPolicy'; fields: { 'anchors': { name: 'anchors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanAnchor'; ofType: null; }; }; }; } }; 'interval': { name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanInterval'; ofType: null; }; } }; 'intervalCount': { name: 'intervalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'maxCycles': { name: 'maxCycles'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minCycles': { name: 'minCycles'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'SubscriptionBillingPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingPolicyInput'; isOneOf: false; inputFields: [{ name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanInterval'; ofType: null; }; }; defaultValue: null }, { name: 'intervalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'minCycles'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxCycles'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'anchors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SellingPlanAnchorInput'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'SubscriptionContract': { kind: 'OBJECT'; name: 'SubscriptionContract'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appAdminUrl': { name: 'appAdminUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'billingAttempts': { name: 'billingAttempts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingAttemptConnection'; ofType: null; }; } }; 'billingPolicy': { name: 'billingPolicy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingPolicy'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'deliveryMethod': { name: 'deliveryMethod'; type: { kind: 'UNION'; name: 'SubscriptionDeliveryMethod'; ofType: null; } }; 'deliveryPolicy': { name: 'deliveryPolicy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDeliveryPolicy'; ofType: null; }; } }; 'deliveryPrice': { name: 'deliveryPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'discounts': { name: 'discounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionManualDiscountConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastPaymentStatus': { name: 'lastPaymentStatus'; type: { kind: 'ENUM'; name: 'SubscriptionContractLastPaymentStatus'; ofType: null; } }; 'lineCount': { name: 'lineCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLineConnection'; ofType: null; }; } }; 'linesCount': { name: 'linesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'nextBillingDate': { name: 'nextBillingDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'originOrder': { name: 'originOrder'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'revisionId': { name: 'revisionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SubscriptionContractSubscriptionStatus'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'SubscriptionContractActivatePayload': { kind: 'OBJECT'; name: 'SubscriptionContractActivatePayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractStatusUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractAtomicCreateInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionContractAtomicCreateInput'; isOneOf: false; inputFields: [{ name: 'customerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'nextBillingDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; }; defaultValue: null }, { name: 'contract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDraftInput'; ofType: null; }; }; defaultValue: null }, { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SubscriptionAtomicLineInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'discountCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'SubscriptionContractAtomicCreatePayload': { kind: 'OBJECT'; name: 'SubscriptionContractAtomicCreatePayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractBase': { kind: 'INTERFACE'; name: 'SubscriptionContractBase'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appAdminUrl': { name: 'appAdminUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'Customer'; ofType: null; } }; 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'deliveryMethod': { name: 'deliveryMethod'; type: { kind: 'UNION'; name: 'SubscriptionDeliveryMethod'; ofType: null; } }; 'deliveryPrice': { name: 'deliveryPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'discounts': { name: 'discounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionManualDiscountConnection'; ofType: null; }; } }; 'lineCount': { name: 'lineCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLineConnection'; ofType: null; }; } }; 'linesCount': { name: 'linesCount'; type: { kind: 'OBJECT'; name: 'Count'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orders': { name: 'orders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderConnection'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; possibleTypes: 'SubscriptionBillingCycleEditedContract' | 'SubscriptionContract'; };
    'SubscriptionContractCancelPayload': { kind: 'OBJECT'; name: 'SubscriptionContractCancelPayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractStatusUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractConnection': { kind: 'OBJECT'; name: 'SubscriptionContractConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SubscriptionContractCreateInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionContractCreateInput'; isOneOf: false; inputFields: [{ name: 'customerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'nextBillingDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; }; defaultValue: null }, { name: 'contract'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDraftInput'; ofType: null; }; }; defaultValue: null }]; };
    'SubscriptionContractCreatePayload': { kind: 'OBJECT'; name: 'SubscriptionContractCreatePayload'; fields: { 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractEdge': { kind: 'OBJECT'; name: 'SubscriptionContractEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; }; } }; }; };
    'SubscriptionContractErrorCode': { name: 'SubscriptionContractErrorCode'; enumValues: 'INVALID'; };
    'SubscriptionContractExpirePayload': { kind: 'OBJECT'; name: 'SubscriptionContractExpirePayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractStatusUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractFailPayload': { kind: 'OBJECT'; name: 'SubscriptionContractFailPayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractStatusUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractLastPaymentStatus': { name: 'SubscriptionContractLastPaymentStatus'; enumValues: 'SUCCEEDED' | 'FAILED'; };
    'SubscriptionContractPausePayload': { kind: 'OBJECT'; name: 'SubscriptionContractPausePayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractStatusUpdateUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractProductChangeInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionContractProductChangeInput'; isOneOf: false; inputFields: [{ name: 'productVariantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'currentPrice'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionContractProductChangePayload': { kind: 'OBJECT'; name: 'SubscriptionContractProductChangePayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'lineUpdated': { name: 'lineUpdated'; type: { kind: 'OBJECT'; name: 'SubscriptionLine'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractSetNextBillingDatePayload': { kind: 'OBJECT'; name: 'SubscriptionContractSetNextBillingDatePayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionContractUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractStatusUpdateErrorCode': { name: 'SubscriptionContractStatusUpdateErrorCode'; enumValues: 'INVALID' | 'CONTRACT_TERMINATED'; };
    'SubscriptionContractStatusUpdateUserError': { kind: 'OBJECT'; name: 'SubscriptionContractStatusUpdateUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'SubscriptionContractStatusUpdateErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionContractSubscriptionStatus': { name: 'SubscriptionContractSubscriptionStatus'; enumValues: 'ACTIVE' | 'PAUSED' | 'CANCELLED' | 'EXPIRED' | 'FAILED'; };
    'SubscriptionContractUpdatePayload': { kind: 'OBJECT'; name: 'SubscriptionContractUpdatePayload'; fields: { 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionContractUserError': { kind: 'OBJECT'; name: 'SubscriptionContractUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'SubscriptionContractErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionCyclePriceAdjustment': { kind: 'OBJECT'; name: 'SubscriptionCyclePriceAdjustment'; fields: { 'adjustmentType': { name: 'adjustmentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanPricingPolicyAdjustmentType'; ofType: null; }; } }; 'adjustmentValue': { name: 'adjustmentValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SellingPlanPricingPolicyAdjustmentValue'; ofType: null; }; } }; 'afterCycle': { name: 'afterCycle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'computedPrice': { name: 'computedPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'SubscriptionDeliveryMethod': { kind: 'UNION'; name: 'SubscriptionDeliveryMethod'; fields: {}; possibleTypes: 'SubscriptionDeliveryMethodLocalDelivery' | 'SubscriptionDeliveryMethodPickup' | 'SubscriptionDeliveryMethodShipping'; };
    'SubscriptionDeliveryMethodInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodInput'; isOneOf: false; inputFields: [{ name: 'shipping'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodShippingInput'; ofType: null; }; defaultValue: null }, { name: 'localDelivery'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodLocalDeliveryInput'; ofType: null; }; defaultValue: null }, { name: 'pickup'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodPickupInput'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionDeliveryMethodLocalDelivery': { kind: 'OBJECT'; name: 'SubscriptionDeliveryMethodLocalDelivery'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionMailingAddress'; ofType: null; }; } }; 'localDeliveryOption': { name: 'localDeliveryOption'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDeliveryMethodLocalDeliveryOption'; ofType: null; }; } }; }; };
    'SubscriptionDeliveryMethodLocalDeliveryInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodLocalDeliveryInput'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'INPUT_OBJECT'; name: 'MailingAddressInput'; ofType: null; }; defaultValue: null }, { name: 'localDeliveryOption'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodLocalDeliveryOptionInput'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionDeliveryMethodLocalDeliveryOption': { kind: 'OBJECT'; name: 'SubscriptionDeliveryMethodLocalDeliveryOption'; fields: { 'code': { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'instructions': { name: 'instructions'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'presentmentTitle': { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SubscriptionDeliveryMethodLocalDeliveryOptionInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodLocalDeliveryOptionInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'instructions'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionDeliveryMethodPickup': { kind: 'OBJECT'; name: 'SubscriptionDeliveryMethodPickup'; fields: { 'pickupOption': { name: 'pickupOption'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDeliveryMethodPickupOption'; ofType: null; }; } }; }; };
    'SubscriptionDeliveryMethodPickupInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodPickupInput'; isOneOf: false; inputFields: [{ name: 'pickupOption'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodPickupOptionInput'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionDeliveryMethodPickupOption': { kind: 'OBJECT'; name: 'SubscriptionDeliveryMethodPickupOption'; fields: { 'code': { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; } }; 'presentmentTitle': { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SubscriptionDeliveryMethodPickupOptionInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodPickupOptionInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'locationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'SubscriptionDeliveryMethodShipping': { kind: 'OBJECT'; name: 'SubscriptionDeliveryMethodShipping'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionMailingAddress'; ofType: null; }; } }; 'shippingOption': { name: 'shippingOption'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDeliveryMethodShippingOption'; ofType: null; }; } }; }; };
    'SubscriptionDeliveryMethodShippingInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodShippingInput'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'INPUT_OBJECT'; name: 'MailingAddressInput'; ofType: null; }; defaultValue: null }, { name: 'shippingOption'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodShippingOptionInput'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionDeliveryMethodShippingOption': { kind: 'OBJECT'; name: 'SubscriptionDeliveryMethodShippingOption'; fields: { 'carrierService': { name: 'carrierService'; type: { kind: 'OBJECT'; name: 'DeliveryCarrierService'; ofType: null; } }; 'code': { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'presentmentTitle': { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SubscriptionDeliveryMethodShippingOptionInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodShippingOptionInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'carrierServiceId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionDeliveryOption': { kind: 'UNION'; name: 'SubscriptionDeliveryOption'; fields: {}; possibleTypes: 'SubscriptionLocalDeliveryOption' | 'SubscriptionPickupOption' | 'SubscriptionShippingOption'; };
    'SubscriptionDeliveryOptionResult': { kind: 'UNION'; name: 'SubscriptionDeliveryOptionResult'; fields: {}; possibleTypes: 'SubscriptionDeliveryOptionResultFailure' | 'SubscriptionDeliveryOptionResultSuccess'; };
    'SubscriptionDeliveryOptionResultFailure': { kind: 'OBJECT'; name: 'SubscriptionDeliveryOptionResultFailure'; fields: { 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SubscriptionDeliveryOptionResultSuccess': { kind: 'OBJECT'; name: 'SubscriptionDeliveryOptionResultSuccess'; fields: { 'deliveryOptions': { name: 'deliveryOptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SubscriptionDeliveryOption'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDeliveryPolicy': { kind: 'OBJECT'; name: 'SubscriptionDeliveryPolicy'; fields: { 'anchors': { name: 'anchors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SellingPlanAnchor'; ofType: null; }; }; }; } }; 'interval': { name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanInterval'; ofType: null; }; } }; 'intervalCount': { name: 'intervalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'SubscriptionDeliveryPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryPolicyInput'; isOneOf: false; inputFields: [{ name: 'interval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanInterval'; ofType: null; }; }; defaultValue: null }, { name: 'intervalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'anchors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SellingPlanAnchorInput'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'SubscriptionDiscount': { kind: 'UNION'; name: 'SubscriptionDiscount'; fields: {}; possibleTypes: 'SubscriptionAppliedCodeDiscount' | 'SubscriptionManualDiscount'; };
    'SubscriptionDiscountAllocation': { kind: 'OBJECT'; name: 'SubscriptionDiscountAllocation'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'discount': { name: 'discount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SubscriptionDiscount'; ofType: null; }; } }; }; };
    'SubscriptionDiscountConnection': { kind: 'OBJECT'; name: 'SubscriptionDiscountConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDiscountEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SubscriptionDiscount'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SubscriptionDiscountEdge': { kind: 'OBJECT'; name: 'SubscriptionDiscountEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SubscriptionDiscount'; ofType: null; }; } }; }; };
    'SubscriptionDiscountEntitledLines': { kind: 'OBJECT'; name: 'SubscriptionDiscountEntitledLines'; fields: { 'all': { name: 'all'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLineConnection'; ofType: null; }; } }; }; };
    'SubscriptionDiscountFixedAmountValue': { kind: 'OBJECT'; name: 'SubscriptionDiscountFixedAmountValue'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'appliesOnEachItem': { name: 'appliesOnEachItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'SubscriptionDiscountPercentageValue': { kind: 'OBJECT'; name: 'SubscriptionDiscountPercentageValue'; fields: { 'percentage': { name: 'percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'SubscriptionDiscountRejectionReason': { name: 'SubscriptionDiscountRejectionReason'; enumValues: 'NOT_FOUND' | 'NO_ENTITLED_LINE_ITEMS' | 'QUANTITY_NOT_IN_RANGE' | 'PURCHASE_NOT_IN_RANGE' | 'CUSTOMER_NOT_ELIGIBLE' | 'USAGE_LIMIT_REACHED' | 'CUSTOMER_USAGE_LIMIT_REACHED' | 'CURRENTLY_INACTIVE' | 'NO_ENTITLED_SHIPPING_LINES' | 'INCOMPATIBLE_PURCHASE_TYPE' | 'INTERNAL_ERROR'; };
    'SubscriptionDiscountValue': { kind: 'UNION'; name: 'SubscriptionDiscountValue'; fields: {}; possibleTypes: 'SubscriptionDiscountFixedAmountValue' | 'SubscriptionDiscountPercentageValue'; };
    'SubscriptionDraft': { kind: 'OBJECT'; name: 'SubscriptionDraft'; fields: { 'billingCycle': { name: 'billingCycle'; type: { kind: 'OBJECT'; name: 'SubscriptionBillingCycle'; ofType: null; } }; 'billingPolicy': { name: 'billingPolicy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingPolicy'; ofType: null; }; } }; 'concatenatedBillingCycles': { name: 'concatenatedBillingCycles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionBillingCycleConnection'; ofType: null; }; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CurrencyCode'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'customer': { name: 'customer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Customer'; ofType: null; }; } }; 'customerPaymentMethod': { name: 'customerPaymentMethod'; type: { kind: 'OBJECT'; name: 'CustomerPaymentMethod'; ofType: null; } }; 'deliveryMethod': { name: 'deliveryMethod'; type: { kind: 'UNION'; name: 'SubscriptionDeliveryMethod'; ofType: null; } }; 'deliveryOptions': { name: 'deliveryOptions'; type: { kind: 'UNION'; name: 'SubscriptionDeliveryOptionResult'; ofType: null; } }; 'deliveryPolicy': { name: 'deliveryPolicy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDeliveryPolicy'; ofType: null; }; } }; 'deliveryPrice': { name: 'deliveryPrice'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'discounts': { name: 'discounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDiscountConnection'; ofType: null; }; } }; 'discountsAdded': { name: 'discountsAdded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDiscountConnection'; ofType: null; }; } }; 'discountsRemoved': { name: 'discountsRemoved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDiscountConnection'; ofType: null; }; } }; 'discountsUpdated': { name: 'discountsUpdated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDiscountConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLineConnection'; ofType: null; }; } }; 'linesAdded': { name: 'linesAdded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLineConnection'; ofType: null; }; } }; 'linesRemoved': { name: 'linesRemoved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLineConnection'; ofType: null; }; } }; 'nextBillingDate': { name: 'nextBillingDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'originalContract': { name: 'originalContract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'shippingOptions': { name: 'shippingOptions'; type: { kind: 'UNION'; name: 'SubscriptionShippingOptionResult'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'SubscriptionContractSubscriptionStatus'; ofType: null; } }; }; };
    'SubscriptionDraftCommitPayload': { kind: 'OBJECT'; name: 'SubscriptionDraftCommitPayload'; fields: { 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'SubscriptionContract'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftDiscountAddPayload': { kind: 'OBJECT'; name: 'SubscriptionDraftDiscountAddPayload'; fields: { 'discountAdded': { name: 'discountAdded'; type: { kind: 'OBJECT'; name: 'SubscriptionManualDiscount'; ofType: null; } }; 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftDiscountCodeApplyPayload': { kind: 'OBJECT'; name: 'SubscriptionDraftDiscountCodeApplyPayload'; fields: { 'appliedDiscount': { name: 'appliedDiscount'; type: { kind: 'OBJECT'; name: 'SubscriptionAppliedCodeDiscount'; ofType: null; } }; 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftDiscountRemovePayload': { kind: 'OBJECT'; name: 'SubscriptionDraftDiscountRemovePayload'; fields: { 'discountRemoved': { name: 'discountRemoved'; type: { kind: 'UNION'; name: 'SubscriptionDiscount'; ofType: null; } }; 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftDiscountUpdatePayload': { kind: 'OBJECT'; name: 'SubscriptionDraftDiscountUpdatePayload'; fields: { 'discountUpdated': { name: 'discountUpdated'; type: { kind: 'OBJECT'; name: 'SubscriptionManualDiscount'; ofType: null; } }; 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftErrorCode': { name: 'SubscriptionDraftErrorCode'; enumValues: 'ALREADY_REMOVED' | 'PRESENCE' | 'COMMITTED' | 'NOT_IN_RANGE' | 'NOT_AN_INTEGER' | 'SELLING_PLAN_MAX_CYCLES_MUST_BE_GREATER_THAN_MIN_CYCLES' | 'DELIVERY_MUST_BE_MULTIPLE_OF_BILLING' | 'INVALID_BILLING_DATE' | 'INVALID_NOTE_LENGTH' | 'INVALID_LINES' | 'NO_ENTITLED_LINES' | 'CUSTOMER_DOES_NOT_EXIST' | 'CUSTOMER_MISMATCH' | 'DELIVERY_METHOD_REQUIRED' | 'MISSING_LOCAL_DELIVERY_OPTIONS' | 'CYCLE_DISCOUNTS_UNIQUE_AFTER_CYCLE' | 'INVALID_ADJUSTMENT_TYPE' | 'INVALID_ADJUSTMENT_VALUE' | 'STALE_CONTRACT' | 'CURRENCY_NOT_ENABLED' | 'HAS_FUTURE_EDITS' | 'BILLING_CYCLE_PRESENT' | 'BILLING_CYCLE_ABSENT' | 'BILLING_CYCLE_CONTRACT_DRAFT_DELIVERY_POLICY_INVALID' | 'BILLING_CYCLE_CONTRACT_DRAFT_BILLING_POLICY_INVALID' | 'CONCATENATION_BILLING_CYCLE_CONTRACT_DRAFT_REQUIRED' | 'DUPLICATE_CONCATENATED_CONTRACTS' | 'UPCOMING_CYCLE_LIMIT_EXCEEDED' | 'CYCLE_INDEX_OUT_OF_RANGE' | 'CYCLE_START_DATE_OUT_OF_RANGE' | 'CYCLE_SELECTOR_VALIDATE_ONE_OF' | 'EXCEEDED_MAX_CONCATENATED_CONTRACTS' | 'CUSTOMER_REDACTED' | 'MISSING_CUSTOMER_PAYMENT_METHOD' | 'INVALID' | 'BLANK' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'LESS_THAN' | 'LESS_THAN_OR_EQUAL_TO' | 'TOO_LONG' | 'TOO_SHORT'; };
    'SubscriptionDraftFreeShippingDiscountAddPayload': { kind: 'OBJECT'; name: 'SubscriptionDraftFreeShippingDiscountAddPayload'; fields: { 'discountAdded': { name: 'discountAdded'; type: { kind: 'OBJECT'; name: 'SubscriptionManualDiscount'; ofType: null; } }; 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftFreeShippingDiscountUpdatePayload': { kind: 'OBJECT'; name: 'SubscriptionDraftFreeShippingDiscountUpdatePayload'; fields: { 'discountUpdated': { name: 'discountUpdated'; type: { kind: 'OBJECT'; name: 'SubscriptionManualDiscount'; ofType: null; } }; 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionDraftInput'; isOneOf: false; inputFields: [{ name: 'status'; type: { kind: 'ENUM'; name: 'SubscriptionContractSubscriptionStatus'; ofType: null; }; defaultValue: null }, { name: 'paymentMethodId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'nextBillingDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'billingPolicy'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionBillingPolicyInput'; ofType: null; }; defaultValue: null }, { name: 'deliveryPolicy'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryPolicyInput'; ofType: null; }; defaultValue: null }, { name: 'deliveryPrice'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'deliveryMethod'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionDeliveryMethodInput'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'SubscriptionDraftLineAddPayload': { kind: 'OBJECT'; name: 'SubscriptionDraftLineAddPayload'; fields: { 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'lineAdded': { name: 'lineAdded'; type: { kind: 'OBJECT'; name: 'SubscriptionLine'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftLineRemovePayload': { kind: 'OBJECT'; name: 'SubscriptionDraftLineRemovePayload'; fields: { 'discountsUpdated': { name: 'discountsUpdated'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionManualDiscount'; ofType: null; }; }; } }; 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'lineRemoved': { name: 'lineRemoved'; type: { kind: 'OBJECT'; name: 'SubscriptionLine'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftLineUpdatePayload': { kind: 'OBJECT'; name: 'SubscriptionDraftLineUpdatePayload'; fields: { 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'lineUpdated': { name: 'lineUpdated'; type: { kind: 'OBJECT'; name: 'SubscriptionLine'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftUpdatePayload': { kind: 'OBJECT'; name: 'SubscriptionDraftUpdatePayload'; fields: { 'draft': { name: 'draft'; type: { kind: 'OBJECT'; name: 'SubscriptionDraft'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; ofType: null; }; }; }; } }; }; };
    'SubscriptionDraftUserError': { kind: 'OBJECT'; name: 'SubscriptionDraftUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'SubscriptionDraftErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionFreeShippingDiscountInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionFreeShippingDiscountInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionLine': { kind: 'OBJECT'; name: 'SubscriptionLine'; fields: { 'currentPrice': { name: 'currentPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'customAttributes': { name: 'customAttributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; 'discountAllocations': { name: 'discountAllocations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDiscountAllocation'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineDiscountedPrice': { name: 'lineDiscountedPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'pricingPolicy': { name: 'pricingPolicy'; type: { kind: 'OBJECT'; name: 'SubscriptionPricingPolicy'; ofType: null; } }; 'productId': { name: 'productId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sellingPlanId': { name: 'sellingPlanId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'sellingPlanName': { name: 'sellingPlanName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxable': { name: 'taxable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variantId': { name: 'variantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'variantImage': { name: 'variantImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'variantTitle': { name: 'variantTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SubscriptionLineConnection': { kind: 'OBJECT'; name: 'SubscriptionLineConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLineEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLine'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SubscriptionLineEdge': { kind: 'OBJECT'; name: 'SubscriptionLineEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionLine'; ofType: null; }; } }; }; };
    'SubscriptionLineInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionLineInput'; isOneOf: false; inputFields: [{ name: 'productVariantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'currentPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; }; defaultValue: null }, { name: 'customAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'sellingPlanId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'sellingPlanName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pricingPolicy'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionPricingPolicyInput'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionLineUpdateInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionLineUpdateInput'; isOneOf: false; inputFields: [{ name: 'productVariantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'sellingPlanId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'sellingPlanName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'currentPrice'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'customAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'pricingPolicy'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionPricingPolicyInput'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionLocalDeliveryOption': { kind: 'OBJECT'; name: 'SubscriptionLocalDeliveryOption'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phoneRequired': { name: 'phoneRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'presentmentTitle': { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionMailingAddress': { kind: 'OBJECT'; name: 'SubscriptionMailingAddress'; fields: { 'address1': { name: 'address1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'address2': { name: 'address2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'city': { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'company': { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'country': { name: 'country'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; } }; 'firstName': { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastName': { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'province': { name: 'province'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provinceCode': { name: 'provinceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'zip': { name: 'zip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SubscriptionManualDiscount': { kind: 'OBJECT'; name: 'SubscriptionManualDiscount'; fields: { 'entitledLines': { name: 'entitledLines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionDiscountEntitledLines'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'recurringCycleLimit': { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rejectionReason': { name: 'rejectionReason'; type: { kind: 'ENUM'; name: 'SubscriptionDiscountRejectionReason'; ofType: null; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountTargetType'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountType'; ofType: null; }; } }; 'usageCount': { name: 'usageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SubscriptionDiscountValue'; ofType: null; }; } }; }; };
    'SubscriptionManualDiscountConnection': { kind: 'OBJECT'; name: 'SubscriptionManualDiscountConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionManualDiscountEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionManualDiscount'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SubscriptionManualDiscountEdge': { kind: 'OBJECT'; name: 'SubscriptionManualDiscountEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionManualDiscount'; ofType: null; }; } }; }; };
    'SubscriptionManualDiscountEntitledLinesInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountEntitledLinesInput'; isOneOf: false; inputFields: [{ name: 'all'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'lines'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountLinesInput'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionManualDiscountFixedAmountInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountFixedAmountInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'appliesOnEachItem'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionManualDiscountInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountValueInput'; ofType: null; }; defaultValue: null }, { name: 'recurringCycleLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'entitledLines'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountEntitledLinesInput'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionManualDiscountLinesInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountLinesInput'; isOneOf: false; inputFields: [{ name: 'add'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'remove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'SubscriptionManualDiscountValueInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountValueInput'; isOneOf: false; inputFields: [{ name: 'percentage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'fixedAmount'; type: { kind: 'INPUT_OBJECT'; name: 'SubscriptionManualDiscountFixedAmountInput'; ofType: null; }; defaultValue: null }]; };
    'SubscriptionPickupOption': { kind: 'OBJECT'; name: 'SubscriptionPickupOption'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; } }; 'phoneRequired': { name: 'phoneRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'pickupTime': { name: 'pickupTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'presentmentTitle': { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionPricingPolicy': { kind: 'OBJECT'; name: 'SubscriptionPricingPolicy'; fields: { 'basePrice': { name: 'basePrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'cycleDiscounts': { name: 'cycleDiscounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionCyclePriceAdjustment'; ofType: null; }; }; }; } }; }; };
    'SubscriptionPricingPolicyCycleDiscountsInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionPricingPolicyCycleDiscountsInput'; isOneOf: false; inputFields: [{ name: 'afterCycle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'adjustmentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SellingPlanPricingPolicyAdjustmentType'; ofType: null; }; }; defaultValue: null }, { name: 'adjustmentValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SellingPlanPricingPolicyValueInput'; ofType: null; }; }; defaultValue: null }, { name: 'computedPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; }; defaultValue: null }]; };
    'SubscriptionPricingPolicyInput': { kind: 'INPUT_OBJECT'; name: 'SubscriptionPricingPolicyInput'; isOneOf: false; inputFields: [{ name: 'basePrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; }; defaultValue: null }, { name: 'cycleDiscounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SubscriptionPricingPolicyCycleDiscountsInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'SubscriptionShippingOption': { kind: 'OBJECT'; name: 'SubscriptionShippingOption'; fields: { 'carrierService': { name: 'carrierService'; type: { kind: 'OBJECT'; name: 'DeliveryCarrierService'; ofType: null; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phoneRequired': { name: 'phoneRequired'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'presentmentTitle': { name: 'presentmentTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SubscriptionShippingOptionResult': { kind: 'UNION'; name: 'SubscriptionShippingOptionResult'; fields: {}; possibleTypes: 'SubscriptionShippingOptionResultFailure' | 'SubscriptionShippingOptionResultSuccess'; };
    'SubscriptionShippingOptionResultFailure': { kind: 'OBJECT'; name: 'SubscriptionShippingOptionResultFailure'; fields: { 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SubscriptionShippingOptionResultSuccess': { kind: 'OBJECT'; name: 'SubscriptionShippingOptionResultSuccess'; fields: { 'shippingOptions': { name: 'shippingOptions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionShippingOption'; ofType: null; }; }; }; } }; }; };
    'SuggestedOrderTransaction': { kind: 'OBJECT'; name: 'SuggestedOrderTransaction'; fields: { 'accountNumber': { name: 'accountNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'formattedGateway': { name: 'formattedGateway'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gateway': { name: 'gateway'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SuggestedOrderTransactionKind'; ofType: null; }; } }; 'maximumRefundable': { name: 'maximumRefundable'; type: { kind: 'SCALAR'; name: 'Money'; ofType: null; } }; 'maximumRefundableSet': { name: 'maximumRefundableSet'; type: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; } }; 'parentTransaction': { name: 'parentTransaction'; type: { kind: 'OBJECT'; name: 'OrderTransaction'; ofType: null; } }; 'paymentDetails': { name: 'paymentDetails'; type: { kind: 'UNION'; name: 'PaymentDetails'; ofType: null; } }; }; };
    'SuggestedOrderTransactionKind': { name: 'SuggestedOrderTransactionKind'; enumValues: 'SUGGESTED_REFUND'; };
    'SuggestedRefund': { kind: 'OBJECT'; name: 'SuggestedRefund'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'amountSet': { name: 'amountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedSubtotalSet': { name: 'discountedSubtotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'maximumRefundable': { name: 'maximumRefundable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'maximumRefundableSet': { name: 'maximumRefundableSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'refundDuties': { name: 'refundDuties'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundDuty'; ofType: null; }; }; }; } }; 'refundLineItems': { name: 'refundLineItems'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundLineItem'; ofType: null; }; }; }; } }; 'shipping': { name: 'shipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingRefund'; ofType: null; }; } }; 'subtotal': { name: 'subtotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'subtotalSet': { name: 'subtotalSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'suggestedTransactions': { name: 'suggestedTransactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SuggestedOrderTransaction'; ofType: null; }; }; }; } }; 'totalCartDiscountAmountSet': { name: 'totalCartDiscountAmountSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDutiesSet': { name: 'totalDutiesSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxSet': { name: 'totalTaxSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxes': { name: 'totalTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; }; };
    'SuggestedReturnRefund': { kind: 'OBJECT'; name: 'SuggestedReturnRefund'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'discountedSubtotal': { name: 'discountedSubtotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'maximumRefundable': { name: 'maximumRefundable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'refundDuties': { name: 'refundDuties'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RefundDuty'; ofType: null; }; }; }; } }; 'shipping': { name: 'shipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingRefund'; ofType: null; }; } }; 'subtotal': { name: 'subtotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'suggestedTransactions': { name: 'suggestedTransactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SuggestedOrderTransaction'; ofType: null; }; }; }; } }; 'totalCartDiscountAmount': { name: 'totalCartDiscountAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDuties': { name: 'totalDuties'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTax': { name: 'totalTax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'TagsAddPayload': { kind: 'OBJECT'; name: 'TagsAddPayload'; fields: { 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'Node'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'TagsRemovePayload': { kind: 'OBJECT'; name: 'TagsRemovePayload'; fields: { 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'Node'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'TaxAppConfiguration': { kind: 'OBJECT'; name: 'TaxAppConfiguration'; fields: { 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxPartnerState'; ofType: null; }; } }; }; };
    'TaxAppConfigurePayload': { kind: 'OBJECT'; name: 'TaxAppConfigurePayload'; fields: { 'taxAppConfiguration': { name: 'taxAppConfiguration'; type: { kind: 'OBJECT'; name: 'TaxAppConfiguration'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxAppConfigureUserError'; ofType: null; }; }; }; } }; }; };
    'TaxAppConfigureUserError': { kind: 'OBJECT'; name: 'TaxAppConfigureUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'TaxAppConfigureUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TaxAppConfigureUserErrorCode': { name: 'TaxAppConfigureUserErrorCode'; enumValues: 'TAX_PARTNER_NOT_FOUND' | 'TAX_PARTNER_STATE_UPDATE_FAILED' | 'TAX_PARTNER_ALREADY_ACTIVE'; };
    'TaxExemption': { name: 'TaxExemption'; enumValues: 'CA_STATUS_CARD_EXEMPTION' | 'CA_BC_RESELLER_EXEMPTION' | 'CA_MB_RESELLER_EXEMPTION' | 'CA_SK_RESELLER_EXEMPTION' | 'CA_DIPLOMAT_EXEMPTION' | 'CA_BC_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_MB_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_NS_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_PE_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_SK_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION' | 'CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION' | 'CA_BC_SUB_CONTRACTOR_EXEMPTION' | 'CA_SK_SUB_CONTRACTOR_EXEMPTION' | 'CA_BC_CONTRACTOR_EXEMPTION' | 'CA_SK_CONTRACTOR_EXEMPTION' | 'CA_ON_PURCHASE_EXEMPTION' | 'CA_MB_FARMER_EXEMPTION' | 'CA_NS_FARMER_EXEMPTION' | 'CA_SK_FARMER_EXEMPTION' | 'EU_REVERSE_CHARGE_EXEMPTION_RULE' | 'US_AL_RESELLER_EXEMPTION' | 'US_AK_RESELLER_EXEMPTION' | 'US_AZ_RESELLER_EXEMPTION' | 'US_AR_RESELLER_EXEMPTION' | 'US_CA_RESELLER_EXEMPTION' | 'US_CO_RESELLER_EXEMPTION' | 'US_CT_RESELLER_EXEMPTION' | 'US_DE_RESELLER_EXEMPTION' | 'US_FL_RESELLER_EXEMPTION' | 'US_GA_RESELLER_EXEMPTION' | 'US_HI_RESELLER_EXEMPTION' | 'US_ID_RESELLER_EXEMPTION' | 'US_IL_RESELLER_EXEMPTION' | 'US_IN_RESELLER_EXEMPTION' | 'US_IA_RESELLER_EXEMPTION' | 'US_KS_RESELLER_EXEMPTION' | 'US_KY_RESELLER_EXEMPTION' | 'US_LA_RESELLER_EXEMPTION' | 'US_ME_RESELLER_EXEMPTION' | 'US_MD_RESELLER_EXEMPTION' | 'US_MA_RESELLER_EXEMPTION' | 'US_MI_RESELLER_EXEMPTION' | 'US_MN_RESELLER_EXEMPTION' | 'US_MS_RESELLER_EXEMPTION' | 'US_MO_RESELLER_EXEMPTION' | 'US_MT_RESELLER_EXEMPTION' | 'US_NE_RESELLER_EXEMPTION' | 'US_NV_RESELLER_EXEMPTION' | 'US_NH_RESELLER_EXEMPTION' | 'US_NJ_RESELLER_EXEMPTION' | 'US_NM_RESELLER_EXEMPTION' | 'US_NY_RESELLER_EXEMPTION' | 'US_NC_RESELLER_EXEMPTION' | 'US_ND_RESELLER_EXEMPTION' | 'US_OH_RESELLER_EXEMPTION' | 'US_OK_RESELLER_EXEMPTION' | 'US_OR_RESELLER_EXEMPTION' | 'US_PA_RESELLER_EXEMPTION' | 'US_RI_RESELLER_EXEMPTION' | 'US_SC_RESELLER_EXEMPTION' | 'US_SD_RESELLER_EXEMPTION' | 'US_TN_RESELLER_EXEMPTION' | 'US_TX_RESELLER_EXEMPTION' | 'US_UT_RESELLER_EXEMPTION' | 'US_VT_RESELLER_EXEMPTION' | 'US_VA_RESELLER_EXEMPTION' | 'US_WA_RESELLER_EXEMPTION' | 'US_WV_RESELLER_EXEMPTION' | 'US_WI_RESELLER_EXEMPTION' | 'US_WY_RESELLER_EXEMPTION' | 'US_DC_RESELLER_EXEMPTION'; };
    'TaxLine': { kind: 'OBJECT'; name: 'TaxLine'; fields: { 'channelLiable': { name: 'channelLiable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Money'; ofType: null; }; } }; 'priceSet': { name: 'priceSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'rate': { name: 'rate'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'ratePercentage': { name: 'ratePercentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TaxPartnerState': { name: 'TaxPartnerState'; enumValues: 'PENDING' | 'READY' | 'ACTIVE'; };
    'Taxonomy': { kind: 'OBJECT'; name: 'Taxonomy'; fields: { 'categories': { name: 'categories'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyCategoryConnection'; ofType: null; }; } }; }; };
    'TaxonomyAttribute': { kind: 'OBJECT'; name: 'TaxonomyAttribute'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'TaxonomyCategory': { kind: 'OBJECT'; name: 'TaxonomyCategory'; fields: { 'ancestorIds': { name: 'ancestorIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; } }; 'attributes': { name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyCategoryAttributeConnection'; ofType: null; }; } }; 'childrenIds': { name: 'childrenIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; } }; 'fullName': { name: 'fullName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isArchived': { name: 'isArchived'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isLeaf': { name: 'isLeaf'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isRoot': { name: 'isRoot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'level': { name: 'level'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'parentId': { name: 'parentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'TaxonomyCategoryAttribute': { kind: 'UNION'; name: 'TaxonomyCategoryAttribute'; fields: {}; possibleTypes: 'TaxonomyAttribute' | 'TaxonomyChoiceListAttribute' | 'TaxonomyMeasurementAttribute'; };
    'TaxonomyCategoryAttributeConnection': { kind: 'OBJECT'; name: 'TaxonomyCategoryAttributeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyCategoryAttributeEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'TaxonomyCategoryAttribute'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TaxonomyCategoryAttributeEdge': { kind: 'OBJECT'; name: 'TaxonomyCategoryAttributeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'TaxonomyCategoryAttribute'; ofType: null; }; } }; }; };
    'TaxonomyCategoryConnection': { kind: 'OBJECT'; name: 'TaxonomyCategoryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyCategoryEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyCategory'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TaxonomyCategoryEdge': { kind: 'OBJECT'; name: 'TaxonomyCategoryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyCategory'; ofType: null; }; } }; }; };
    'TaxonomyChoiceListAttribute': { kind: 'OBJECT'; name: 'TaxonomyChoiceListAttribute'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'values': { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyValueConnection'; ofType: null; }; } }; }; };
    'TaxonomyMeasurementAttribute': { kind: 'OBJECT'; name: 'TaxonomyMeasurementAttribute'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'options': { name: 'options'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; }; } }; }; };
    'TaxonomyValue': { kind: 'OBJECT'; name: 'TaxonomyValue'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TaxonomyValueConnection': { kind: 'OBJECT'; name: 'TaxonomyValueConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyValueEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyValue'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TaxonomyValueEdge': { kind: 'OBJECT'; name: 'TaxonomyValueEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxonomyValue'; ofType: null; }; } }; }; };
    'TenderTransaction': { kind: 'OBJECT'; name: 'TenderTransaction'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'paymentMethod': { name: 'paymentMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'processedAt': { name: 'processedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'remoteReference': { name: 'remoteReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'test': { name: 'test'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'transactionDetails': { name: 'transactionDetails'; type: { kind: 'UNION'; name: 'TenderTransactionDetails'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'StaffMember'; ofType: null; } }; }; };
    'TenderTransactionConnection': { kind: 'OBJECT'; name: 'TenderTransactionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TenderTransactionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TenderTransaction'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TenderTransactionCreditCardDetails': { kind: 'OBJECT'; name: 'TenderTransactionCreditCardDetails'; fields: { 'creditCardCompany': { name: 'creditCardCompany'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'creditCardNumber': { name: 'creditCardNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TenderTransactionDetails': { kind: 'UNION'; name: 'TenderTransactionDetails'; fields: {}; possibleTypes: 'TenderTransactionCreditCardDetails'; };
    'TenderTransactionEdge': { kind: 'OBJECT'; name: 'TenderTransactionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TenderTransaction'; ofType: null; }; } }; }; };
    'TipSale': { kind: 'OBJECT'; name: 'TipSale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineItem': { name: 'lineItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LineItem'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'TransactionFee': { kind: 'OBJECT'; name: 'TransactionFee'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'flatFee': { name: 'flatFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'flatFeeName': { name: 'flatFeeName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'rate': { name: 'rate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; } }; 'rateName': { name: 'rateName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxAmount': { name: 'taxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TransactionSortKeys': { name: 'TransactionSortKeys'; enumValues: 'CREATED_AT' | 'EXPIRES_AT'; };
    'TransactionVoidPayload': { kind: 'OBJECT'; name: 'TransactionVoidPayload'; fields: { 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'OrderTransaction'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionVoidUserError'; ofType: null; }; }; }; } }; }; };
    'TransactionVoidUserError': { kind: 'OBJECT'; name: 'TransactionVoidUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'TransactionVoidUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TransactionVoidUserErrorCode': { name: 'TransactionVoidUserErrorCode'; enumValues: 'TRANSACTION_NOT_FOUND' | 'AUTH_NOT_SUCCESSFUL' | 'AUTH_NOT_VOIDABLE' | 'GENERIC_ERROR'; };
    'TranslatableContent': { kind: 'OBJECT'; name: 'TranslatableContent'; fields: { 'digest': { name: 'digest'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'locale': { name: 'locale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocalizableContentType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TranslatableResource': { kind: 'OBJECT'; name: 'TranslatableResource'; fields: { 'resourceId': { name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslatableContent'; ofType: null; }; }; }; } }; 'translations': { name: 'translations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; }; } }; }; };
    'TranslatableResourceConnection': { kind: 'OBJECT'; name: 'TranslatableResourceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslatableResourceEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslatableResource'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TranslatableResourceEdge': { kind: 'OBJECT'; name: 'TranslatableResourceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslatableResource'; ofType: null; }; } }; }; };
    'TranslatableResourceType': { name: 'TranslatableResourceType'; enumValues: 'COLLECTION' | 'DELIVERY_METHOD_DEFINITION' | 'EMAIL_TEMPLATE' | 'FILTER' | 'LINK' | 'METAFIELD' | 'METAOBJECT' | 'ONLINE_STORE_ARTICLE' | 'ONLINE_STORE_BLOG' | 'ONLINE_STORE_MENU' | 'ONLINE_STORE_PAGE' | 'ONLINE_STORE_THEME' | 'PACKING_SLIP_TEMPLATE' | 'PAYMENT_GATEWAY' | 'PRODUCT' | 'PRODUCT_OPTION' | 'PRODUCT_OPTION_VALUE' | 'SELLING_PLAN' | 'SELLING_PLAN_GROUP' | 'SHOP' | 'SHOP_POLICY'; };
    'Translation': { kind: 'OBJECT'; name: 'Translation'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'locale': { name: 'locale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'market': { name: 'market'; type: { kind: 'OBJECT'; name: 'Market'; ofType: null; } }; 'outdated': { name: 'outdated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TranslationErrorCode': { name: 'TranslationErrorCode'; enumValues: 'BLANK' | 'INVALID' | 'RESOURCE_NOT_FOUND' | 'RESOURCE_NOT_TRANSLATABLE' | 'TOO_MANY_KEYS_FOR_RESOURCE' | 'INVALID_KEY_FOR_MODEL' | 'FAILS_RESOURCE_VALIDATION' | 'INVALID_TRANSLATABLE_CONTENT' | 'INVALID_MARKET_LOCALIZABLE_CONTENT' | 'INVALID_LOCALE_FOR_SHOP' | 'INVALID_CODE' | 'INVALID_FORMAT' | 'MARKET_CUSTOM_CONTENT_NOT_ALLOWED' | 'MARKET_DOES_NOT_EXIST' | 'MARKET_LOCALE_CREATION_FAILED' | 'RESOURCE_NOT_MARKET_CUSTOMIZABLE' | 'INVALID_LOCALE_FOR_MARKET' | 'INVALID_VALUE_FOR_HANDLE_TRANSLATION'; };
    'TranslationInput': { kind: 'INPUT_OBJECT'; name: 'TranslationInput'; isOneOf: false; inputFields: [{ name: 'locale'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'translatableContentDigest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'marketId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'TranslationUserError': { kind: 'OBJECT'; name: 'TranslationUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'TranslationErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TranslationsRegisterPayload': { kind: 'OBJECT'; name: 'TranslationsRegisterPayload'; fields: { 'translations': { name: 'translations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationUserError'; ofType: null; }; }; }; } }; }; };
    'TranslationsRemovePayload': { kind: 'OBJECT'; name: 'TranslationsRemovePayload'; fields: { 'translations': { name: 'translations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Translation'; ofType: null; }; }; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationUserError'; ofType: null; }; }; }; } }; }; };
    'TypedAttribute': { kind: 'OBJECT'; name: 'TypedAttribute'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'URL': unknown;
    'UTMInput': { kind: 'INPUT_OBJECT'; name: 'UTMInput'; isOneOf: false; inputFields: [{ name: 'campaign'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'source'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'medium'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UTMParameters': { kind: 'OBJECT'; name: 'UTMParameters'; fields: { 'campaign': { name: 'campaign'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'content': { name: 'content'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'medium': { name: 'medium'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'source': { name: 'source'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'term': { name: 'term'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'UnitSystem': { name: 'UnitSystem'; enumValues: 'IMPERIAL_SYSTEM' | 'METRIC_SYSTEM'; };
    'UnknownSale': { kind: 'OBJECT'; name: 'UnknownSale'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleActionType'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lineType': { name: 'lineType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleLineType'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'taxes': { name: 'taxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleTax'; ofType: null; }; }; }; } }; 'totalAmount': { name: 'totalAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountAfterTaxes': { name: 'totalDiscountAmountAfterTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalDiscountAmountBeforeTaxes': { name: 'totalDiscountAmountBeforeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; 'totalTaxAmount': { name: 'totalTaxAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyBag'; ofType: null; }; } }; }; };
    'UnsignedInt64': unknown;
    'UnverifiedReturnLineItem': { kind: 'OBJECT'; name: 'UnverifiedReturnLineItem'; fields: { 'customerNote': { name: 'customerNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'refundableQuantity': { name: 'refundableQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'refundedQuantity': { name: 'refundedQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returnReason': { name: 'returnReason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ReturnReason'; ofType: null; }; } }; 'returnReasonNote': { name: 'returnReasonNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'unitPrice': { name: 'unitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MoneyV2'; ofType: null; }; } }; }; };
    'UpdateMediaInput': { kind: 'INPUT_OBJECT'; name: 'UpdateMediaInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'previewImageSource'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UrlRedirect': { kind: 'OBJECT'; name: 'UrlRedirect'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'target': { name: 'target'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UrlRedirectBulkDeleteAllPayload': { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteAllPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'UrlRedirectBulkDeleteByIdsPayload': { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteByIdsPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteByIdsUserError'; ofType: null; }; }; }; } }; }; };
    'UrlRedirectBulkDeleteByIdsUserError': { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteByIdsUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'UrlRedirectBulkDeleteByIdsUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UrlRedirectBulkDeleteByIdsUserErrorCode': { name: 'UrlRedirectBulkDeleteByIdsUserErrorCode'; enumValues: 'IDS_EMPTY'; };
    'UrlRedirectBulkDeleteBySavedSearchPayload': { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteBySavedSearchPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteBySavedSearchUserError'; ofType: null; }; }; }; } }; }; };
    'UrlRedirectBulkDeleteBySavedSearchUserError': { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteBySavedSearchUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'UrlRedirectBulkDeleteBySavedSearchUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UrlRedirectBulkDeleteBySavedSearchUserErrorCode': { name: 'UrlRedirectBulkDeleteBySavedSearchUserErrorCode'; enumValues: 'SAVED_SEARCH_NOT_FOUND' | 'INVALID_SAVED_SEARCH_QUERY'; };
    'UrlRedirectBulkDeleteBySearchPayload': { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteBySearchPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteBySearchUserError'; ofType: null; }; }; }; } }; }; };
    'UrlRedirectBulkDeleteBySearchUserError': { kind: 'OBJECT'; name: 'UrlRedirectBulkDeleteBySearchUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'UrlRedirectBulkDeleteBySearchUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UrlRedirectBulkDeleteBySearchUserErrorCode': { name: 'UrlRedirectBulkDeleteBySearchUserErrorCode'; enumValues: 'INVALID_SEARCH_ARGUMENT'; };
    'UrlRedirectConnection': { kind: 'OBJECT'; name: 'UrlRedirectConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirect'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'UrlRedirectCreatePayload': { kind: 'OBJECT'; name: 'UrlRedirectCreatePayload'; fields: { 'urlRedirect': { name: 'urlRedirect'; type: { kind: 'OBJECT'; name: 'UrlRedirect'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectUserError'; ofType: null; }; }; }; } }; }; };
    'UrlRedirectDeletePayload': { kind: 'OBJECT'; name: 'UrlRedirectDeletePayload'; fields: { 'deletedUrlRedirectId': { name: 'deletedUrlRedirectId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectUserError'; ofType: null; }; }; }; } }; }; };
    'UrlRedirectEdge': { kind: 'OBJECT'; name: 'UrlRedirectEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirect'; ofType: null; }; } }; }; };
    'UrlRedirectErrorCode': { name: 'UrlRedirectErrorCode'; enumValues: 'DOES_NOT_EXIST' | 'CREATE_FAILED' | 'UPDATE_FAILED' | 'DELETE_FAILED'; };
    'UrlRedirectImport': { kind: 'OBJECT'; name: 'UrlRedirectImport'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'createdCount': { name: 'createdCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'failedCount': { name: 'failedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'finished': { name: 'finished'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'finishedAt': { name: 'finishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'previewRedirects': { name: 'previewRedirects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectImportPreview'; ofType: null; }; }; }; } }; 'updatedCount': { name: 'updatedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'UrlRedirectImportCreatePayload': { kind: 'OBJECT'; name: 'UrlRedirectImportCreatePayload'; fields: { 'urlRedirectImport': { name: 'urlRedirectImport'; type: { kind: 'OBJECT'; name: 'UrlRedirectImport'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectImportUserError'; ofType: null; }; }; }; } }; }; };
    'UrlRedirectImportErrorCode': { name: 'UrlRedirectImportErrorCode'; enumValues: 'FILE_DOES_NOT_EXIST' | 'NOT_FOUND' | 'ALREADY_IMPORTED' | 'IN_PROGRESS'; };
    'UrlRedirectImportPreview': { kind: 'OBJECT'; name: 'UrlRedirectImportPreview'; fields: { 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'target': { name: 'target'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UrlRedirectImportSubmitPayload': { kind: 'OBJECT'; name: 'UrlRedirectImportSubmitPayload'; fields: { 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'Job'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectImportUserError'; ofType: null; }; }; }; } }; }; };
    'UrlRedirectImportUserError': { kind: 'OBJECT'; name: 'UrlRedirectImportUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'UrlRedirectImportErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UrlRedirectInput': { kind: 'INPUT_OBJECT'; name: 'UrlRedirectInput'; isOneOf: false; inputFields: [{ name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'target'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UrlRedirectSortKeys': { name: 'UrlRedirectSortKeys'; enumValues: 'RELEVANCE' | 'PATH' | 'ID'; };
    'UrlRedirectUpdatePayload': { kind: 'OBJECT'; name: 'UrlRedirectUpdatePayload'; fields: { 'urlRedirect': { name: 'urlRedirect'; type: { kind: 'OBJECT'; name: 'UrlRedirect'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UrlRedirectUserError'; ofType: null; }; }; }; } }; }; };
    'UrlRedirectUserError': { kind: 'OBJECT'; name: 'UrlRedirectUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'UrlRedirectErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UserError': { kind: 'OBJECT'; name: 'UserError'; fields: { 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UtcOffset': unknown;
    'Validation': { kind: 'OBJECT'; name: 'Validation'; fields: { 'blockOnFailure': { name: 'blockOnFailure'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'errorHistory': { name: 'errorHistory'; type: { kind: 'OBJECT'; name: 'FunctionsErrorHistory'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'OBJECT'; name: 'Metafield'; ofType: null; } }; 'metafieldDefinitions': { name: 'metafieldDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldDefinitionConnection'; ofType: null; }; } }; 'metafields': { name: 'metafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetafieldConnection'; ofType: null; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'OBJECT'; name: 'PrivateMetafield'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PrivateMetafieldConnection'; ofType: null; }; } }; 'shopifyFunction': { name: 'shopifyFunction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopifyFunction'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ValidationConnection': { kind: 'OBJECT'; name: 'ValidationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ValidationEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Validation'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ValidationCreateInput': { kind: 'INPUT_OBJECT'; name: 'ValidationCreateInput'; isOneOf: false; inputFields: [{ name: 'functionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'enable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'blockOnFailure'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: "[]" }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ValidationCreatePayload': { kind: 'OBJECT'; name: 'ValidationCreatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ValidationUserError'; ofType: null; }; }; }; } }; 'validation': { name: 'validation'; type: { kind: 'OBJECT'; name: 'Validation'; ofType: null; } }; }; };
    'ValidationDeletePayload': { kind: 'OBJECT'; name: 'ValidationDeletePayload'; fields: { 'deletedId': { name: 'deletedId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ValidationUserError'; ofType: null; }; }; }; } }; }; };
    'ValidationEdge': { kind: 'OBJECT'; name: 'ValidationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Validation'; ofType: null; }; } }; }; };
    'ValidationSortKeys': { name: 'ValidationSortKeys'; enumValues: 'ID' | 'RELEVANCE'; };
    'ValidationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ValidationUpdateInput'; isOneOf: false; inputFields: [{ name: 'enable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'blockOnFailure'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'metafields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetafieldInput'; ofType: null; }; }; }; defaultValue: "[]" }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ValidationUpdatePayload': { kind: 'OBJECT'; name: 'ValidationUpdatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ValidationUserError'; ofType: null; }; }; }; } }; 'validation': { name: 'validation'; type: { kind: 'OBJECT'; name: 'Validation'; ofType: null; } }; }; };
    'ValidationUserError': { kind: 'OBJECT'; name: 'ValidationUserError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'ValidationUserErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ValidationUserErrorCode': { name: 'ValidationUserErrorCode'; enumValues: 'NOT_FOUND' | 'FUNCTION_NOT_FOUND' | 'CUSTOM_APP_FUNCTION_NOT_ELIGIBLE' | 'FUNCTION_DOES_NOT_IMPLEMENT' | 'PUBLIC_APP_NOT_ALLOWED' | 'FUNCTION_PENDING_DELETION' | 'INVALID_TYPE' | 'INVALID_VALUE' | 'APP_NOT_AUTHORIZED' | 'UNSTRUCTURED_RESERVED_NAMESPACE' | 'DISALLOWED_OWNER_TYPE' | 'INCLUSION' | 'TAKEN' | 'PRESENT' | 'BLANK' | 'TOO_LONG' | 'TOO_SHORT' | 'CAPABILITY_VIOLATION' | 'INTERNAL_ERROR'; };
    'VariantOptionValueInput': { kind: 'INPUT_OBJECT'; name: 'VariantOptionValueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'optionId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'optionName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'VaultCreditCard': { kind: 'OBJECT'; name: 'VaultCreditCard'; fields: { 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'CustomerCreditCardBillingAddress'; ofType: null; } }; 'brand': { name: 'brand'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'expired': { name: 'expired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'expiryMonth': { name: 'expiryMonth'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'expiryYear': { name: 'expiryYear'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lastDigits': { name: 'lastDigits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VaultPaypalBillingAgreement': { kind: 'OBJECT'; name: 'VaultPaypalBillingAgreement'; fields: { 'inactive': { name: 'inactive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'paypalAccountEmail': { name: 'paypalAccountEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Vector3': { kind: 'OBJECT'; name: 'Vector3'; fields: { 'x': { name: 'x'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'y': { name: 'y'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'z': { name: 'z'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'Video': { kind: 'OBJECT'; name: 'Video'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'duration': { name: 'duration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'fileErrors': { name: 'fileErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FileError'; ofType: null; }; }; }; } }; 'fileStatus': { name: 'fileStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileStatus'; ofType: null; }; } }; 'filename': { name: 'filename'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mediaContentType': { name: 'mediaContentType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaContentType'; ofType: null; }; } }; 'mediaErrors': { name: 'mediaErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaError'; ofType: null; }; }; }; } }; 'mediaWarnings': { name: 'mediaWarnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaWarning'; ofType: null; }; }; }; } }; 'originalSource': { name: 'originalSource'; type: { kind: 'OBJECT'; name: 'VideoSource'; ofType: null; } }; 'preview': { name: 'preview'; type: { kind: 'OBJECT'; name: 'MediaPreviewImage'; ofType: null; } }; 'sources': { name: 'sources'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VideoSource'; ofType: null; }; }; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaStatus'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'VideoSource': { kind: 'OBJECT'; name: 'VideoSource'; fields: { 'fileSize': { name: 'fileSize'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'format': { name: 'format'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'height': { name: 'height'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'mimeType': { name: 'mimeType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'width': { name: 'width'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'WebPixel': { kind: 'OBJECT'; name: 'WebPixel'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'settings': { name: 'settings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; }; };
    'WebPixelCreatePayload': { kind: 'OBJECT'; name: 'WebPixelCreatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ErrorsWebPixelUserError'; ofType: null; }; }; }; } }; 'webPixel': { name: 'webPixel'; type: { kind: 'OBJECT'; name: 'WebPixel'; ofType: null; } }; }; };
    'WebPixelDeletePayload': { kind: 'OBJECT'; name: 'WebPixelDeletePayload'; fields: { 'deletedWebPixelId': { name: 'deletedWebPixelId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ErrorsWebPixelUserError'; ofType: null; }; }; }; } }; }; };
    'WebPixelInput': { kind: 'INPUT_OBJECT'; name: 'WebPixelInput'; isOneOf: false; inputFields: [{ name: 'settings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; }; defaultValue: null }]; };
    'WebPixelUpdatePayload': { kind: 'OBJECT'; name: 'WebPixelUpdatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ErrorsWebPixelUserError'; ofType: null; }; }; }; } }; 'webPixel': { name: 'webPixel'; type: { kind: 'OBJECT'; name: 'WebPixel'; ofType: null; } }; }; };
    'WebhookEventBridgeEndpoint': { kind: 'OBJECT'; name: 'WebhookEventBridgeEndpoint'; fields: { 'arn': { name: 'arn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ARN'; ofType: null; }; } }; }; };
    'WebhookHttpEndpoint': { kind: 'OBJECT'; name: 'WebhookHttpEndpoint'; fields: { 'callbackUrl': { name: 'callbackUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; }; };
    'WebhookPubSubEndpoint': { kind: 'OBJECT'; name: 'WebhookPubSubEndpoint'; fields: { 'pubSubProject': { name: 'pubSubProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pubSubTopic': { name: 'pubSubTopic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'WebhookSubscription': { kind: 'OBJECT'; name: 'WebhookSubscription'; fields: { 'apiVersion': { name: 'apiVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ApiVersion'; ofType: null; }; } }; 'callbackUrl': { name: 'callbackUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'endpoint': { name: 'endpoint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'WebhookSubscriptionEndpoint'; ofType: null; }; } }; 'filter': { name: 'filter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'format': { name: 'format'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookSubscriptionFormat'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'includeFields': { name: 'includeFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'legacyResourceId': { name: 'legacyResourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UnsignedInt64'; ofType: null; }; } }; 'metafieldNamespaces': { name: 'metafieldNamespaces'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'privateMetafieldNamespaces': { name: 'privateMetafieldNamespaces'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'topic': { name: 'topic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookSubscriptionTopic'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'WebhookSubscriptionConnection': { kind: 'OBJECT'; name: 'WebhookSubscriptionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookSubscriptionEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookSubscription'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'WebhookSubscriptionCreatePayload': { kind: 'OBJECT'; name: 'WebhookSubscriptionCreatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; 'webhookSubscription': { name: 'webhookSubscription'; type: { kind: 'OBJECT'; name: 'WebhookSubscription'; ofType: null; } }; }; };
    'WebhookSubscriptionDeletePayload': { kind: 'OBJECT'; name: 'WebhookSubscriptionDeletePayload'; fields: { 'deletedWebhookSubscriptionId': { name: 'deletedWebhookSubscriptionId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; }; };
    'WebhookSubscriptionEdge': { kind: 'OBJECT'; name: 'WebhookSubscriptionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookSubscription'; ofType: null; }; } }; }; };
    'WebhookSubscriptionEndpoint': { kind: 'UNION'; name: 'WebhookSubscriptionEndpoint'; fields: {}; possibleTypes: 'WebhookEventBridgeEndpoint' | 'WebhookHttpEndpoint' | 'WebhookPubSubEndpoint'; };
    'WebhookSubscriptionFormat': { name: 'WebhookSubscriptionFormat'; enumValues: 'JSON' | 'XML'; };
    'WebhookSubscriptionInput': { kind: 'INPUT_OBJECT'; name: 'WebhookSubscriptionInput'; isOneOf: false; inputFields: [{ name: 'callbackUrl'; type: { kind: 'SCALAR'; name: 'URL'; ofType: null; }; defaultValue: null }, { name: 'format'; type: { kind: 'ENUM'; name: 'WebhookSubscriptionFormat'; ofType: null; }; defaultValue: null }, { name: 'includeFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'filter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metafieldNamespaces'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetafieldNamespaces'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'WebhookSubscriptionSortKeys': { name: 'WebhookSubscriptionSortKeys'; enumValues: 'CREATED_AT' | 'ID' | 'RELEVANCE'; };
    'WebhookSubscriptionTopic': { name: 'WebhookSubscriptionTopic'; enumValues: 'APP_UNINSTALLED' | 'CARTS_CREATE' | 'CARTS_UPDATE' | 'CHANNELS_DELETE' | 'CHECKOUTS_CREATE' | 'CHECKOUTS_DELETE' | 'CHECKOUTS_UPDATE' | 'CUSTOMER_PAYMENT_METHODS_CREATE' | 'CUSTOMER_PAYMENT_METHODS_UPDATE' | 'CUSTOMER_PAYMENT_METHODS_REVOKE' | 'COLLECTION_LISTINGS_ADD' | 'COLLECTION_LISTINGS_REMOVE' | 'COLLECTION_LISTINGS_UPDATE' | 'COLLECTION_PUBLICATIONS_CREATE' | 'COLLECTION_PUBLICATIONS_DELETE' | 'COLLECTION_PUBLICATIONS_UPDATE' | 'COLLECTIONS_CREATE' | 'COLLECTIONS_DELETE' | 'COLLECTIONS_UPDATE' | 'CUSTOMER_GROUPS_CREATE' | 'CUSTOMER_GROUPS_DELETE' | 'CUSTOMER_GROUPS_UPDATE' | 'CUSTOMERS_CREATE' | 'CUSTOMERS_DELETE' | 'CUSTOMERS_DISABLE' | 'CUSTOMERS_ENABLE' | 'CUSTOMERS_UPDATE' | 'CUSTOMERS_MARKETING_CONSENT_UPDATE' | 'CUSTOMER_TAGS_ADDED' | 'CUSTOMER_TAGS_REMOVED' | 'CUSTOMERS_EMAIL_MARKETING_CONSENT_UPDATE' | 'DISPUTES_CREATE' | 'DISPUTES_UPDATE' | 'DRAFT_ORDERS_CREATE' | 'DRAFT_ORDERS_DELETE' | 'DRAFT_ORDERS_UPDATE' | 'FULFILLMENT_EVENTS_CREATE' | 'FULFILLMENT_EVENTS_DELETE' | 'FULFILLMENTS_CREATE' | 'FULFILLMENTS_UPDATE' | 'ATTRIBUTED_SESSIONS_FIRST' | 'ATTRIBUTED_SESSIONS_LAST' | 'ORDER_TRANSACTIONS_CREATE' | 'ORDERS_CANCELLED' | 'ORDERS_CREATE' | 'ORDERS_DELETE' | 'ORDERS_EDITED' | 'ORDERS_FULFILLED' | 'ORDERS_PAID' | 'ORDERS_PARTIALLY_FULFILLED' | 'ORDERS_UPDATED' | 'FULFILLMENT_ORDERS_MOVED' | 'FULFILLMENT_ORDERS_HOLD_RELEASED' | 'FULFILLMENT_ORDERS_SCHEDULED_FULFILLMENT_ORDER_READY' | 'FULFILLMENT_ORDERS_ORDER_ROUTING_COMPLETE' | 'FULFILLMENT_ORDERS_CANCELLED' | 'FULFILLMENT_ORDERS_FULFILLMENT_SERVICE_FAILED_TO_COMPLETE' | 'FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_REJECTED' | 'FULFILLMENT_ORDERS_CANCELLATION_REQUEST_SUBMITTED' | 'FULFILLMENT_ORDERS_CANCELLATION_REQUEST_ACCEPTED' | 'FULFILLMENT_ORDERS_CANCELLATION_REQUEST_REJECTED' | 'FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_SUBMITTED' | 'FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_ACCEPTED' | 'FULFILLMENT_ORDERS_LINE_ITEMS_PREPARED_FOR_LOCAL_DELIVERY' | 'FULFILLMENT_ORDERS_PLACED_ON_HOLD' | 'FULFILLMENT_ORDERS_MERGED' | 'FULFILLMENT_ORDERS_SPLIT' | 'PRODUCT_LISTINGS_ADD' | 'PRODUCT_LISTINGS_REMOVE' | 'PRODUCT_LISTINGS_UPDATE' | 'SCHEDULED_PRODUCT_LISTINGS_ADD' | 'SCHEDULED_PRODUCT_LISTINGS_UPDATE' | 'SCHEDULED_PRODUCT_LISTINGS_REMOVE' | 'PRODUCT_PUBLICATIONS_CREATE' | 'PRODUCT_PUBLICATIONS_DELETE' | 'PRODUCT_PUBLICATIONS_UPDATE' | 'PRODUCTS_CREATE' | 'PRODUCTS_DELETE' | 'PRODUCTS_UPDATE' | 'REFUNDS_CREATE' | 'SEGMENTS_CREATE' | 'SEGMENTS_DELETE' | 'SEGMENTS_UPDATE' | 'SHIPPING_ADDRESSES_CREATE' | 'SHIPPING_ADDRESSES_UPDATE' | 'SHOP_UPDATE' | 'TAX_PARTNERS_UPDATE' | 'TAX_SERVICES_CREATE' | 'TAX_SERVICES_UPDATE' | 'THEMES_CREATE' | 'THEMES_DELETE' | 'THEMES_PUBLISH' | 'THEMES_UPDATE' | 'VARIANTS_IN_STOCK' | 'VARIANTS_OUT_OF_STOCK' | 'INVENTORY_LEVELS_CONNECT' | 'INVENTORY_LEVELS_UPDATE' | 'INVENTORY_LEVELS_DISCONNECT' | 'INVENTORY_ITEMS_CREATE' | 'INVENTORY_ITEMS_UPDATE' | 'INVENTORY_ITEMS_DELETE' | 'LOCATIONS_ACTIVATE' | 'LOCATIONS_DEACTIVATE' | 'LOCATIONS_CREATE' | 'LOCATIONS_UPDATE' | 'LOCATIONS_DELETE' | 'TENDER_TRANSACTIONS_CREATE' | 'APP_PURCHASES_ONE_TIME_UPDATE' | 'APP_SUBSCRIPTIONS_APPROACHING_CAPPED_AMOUNT' | 'APP_SUBSCRIPTIONS_UPDATE' | 'LOCALES_CREATE' | 'LOCALES_UPDATE' | 'DOMAINS_CREATE' | 'DOMAINS_UPDATE' | 'DOMAINS_DESTROY' | 'SUBSCRIPTION_CONTRACTS_CREATE' | 'SUBSCRIPTION_CONTRACTS_UPDATE' | 'SUBSCRIPTION_BILLING_CYCLE_EDITS_CREATE' | 'SUBSCRIPTION_BILLING_CYCLE_EDITS_UPDATE' | 'SUBSCRIPTION_BILLING_CYCLE_EDITS_DELETE' | 'PROFILES_CREATE' | 'PROFILES_UPDATE' | 'PROFILES_DELETE' | 'SUBSCRIPTION_BILLING_ATTEMPTS_SUCCESS' | 'SUBSCRIPTION_BILLING_ATTEMPTS_FAILURE' | 'SUBSCRIPTION_BILLING_ATTEMPTS_CHALLENGED' | 'RETURNS_CANCEL' | 'RETURNS_CLOSE' | 'RETURNS_REOPEN' | 'RETURNS_REQUEST' | 'RETURNS_APPROVE' | 'RETURNS_UPDATE' | 'RETURNS_DECLINE' | 'REVERSE_DELIVERIES_ATTACH_DELIVERABLE' | 'REVERSE_FULFILLMENT_ORDERS_DISPOSE' | 'PAYMENT_TERMS_CREATE' | 'PAYMENT_TERMS_DELETE' | 'PAYMENT_TERMS_UPDATE' | 'PAYMENT_SCHEDULES_DUE' | 'SELLING_PLAN_GROUPS_CREATE' | 'SELLING_PLAN_GROUPS_UPDATE' | 'SELLING_PLAN_GROUPS_DELETE' | 'BULK_OPERATIONS_FINISH' | 'PRODUCT_FEEDS_CREATE' | 'PRODUCT_FEEDS_UPDATE' | 'PRODUCT_FEEDS_INCREMENTAL_SYNC' | 'PRODUCT_FEEDS_FULL_SYNC' | 'PRODUCT_FEEDS_FULL_SYNC_FINISH' | 'MARKETS_CREATE' | 'MARKETS_UPDATE' | 'MARKETS_DELETE' | 'ORDERS_RISK_ASSESSMENT_CHANGED' | 'ORDERS_SHOPIFY_PROTECT_ELIGIBILITY_CHANGED' | 'FULFILLMENT_ORDERS_RESCHEDULED' | 'PUBLICATIONS_DELETE' | 'AUDIT_EVENTS_ADMIN_API_ACTIVITY' | 'FULFILLMENT_ORDERS_LINE_ITEMS_PREPARED_FOR_PICKUP' | 'COMPANIES_CREATE' | 'COMPANIES_UPDATE' | 'COMPANIES_DELETE' | 'COMPANY_LOCATIONS_CREATE' | 'COMPANY_LOCATIONS_UPDATE' | 'COMPANY_LOCATIONS_DELETE' | 'COMPANY_CONTACTS_CREATE' | 'COMPANY_CONTACTS_UPDATE' | 'COMPANY_CONTACTS_DELETE' | 'CUSTOMERS_MERGE' | 'CUSTOMER_ACCOUNT_SETTINGS_UPDATE' | 'COMPANY_CONTACT_ROLES_ASSIGN' | 'COMPANY_CONTACT_ROLES_REVOKE' | 'SUBSCRIPTION_CONTRACTS_ACTIVATE' | 'SUBSCRIPTION_CONTRACTS_PAUSE' | 'SUBSCRIPTION_CONTRACTS_CANCEL' | 'SUBSCRIPTION_CONTRACTS_FAIL' | 'SUBSCRIPTION_CONTRACTS_EXPIRE' | 'SUBSCRIPTION_BILLING_CYCLES_SKIP' | 'SUBSCRIPTION_BILLING_CYCLES_UNSKIP' | 'METAOBJECTS_CREATE' | 'METAOBJECTS_UPDATE' | 'METAOBJECTS_DELETE' | 'DISCOUNTS_CREATE' | 'DISCOUNTS_UPDATE' | 'DISCOUNTS_DELETE' | 'DISCOUNTS_REDEEMCODE_ADDED' | 'DISCOUNTS_REDEEMCODE_REMOVED'; };
    'WebhookSubscriptionUpdatePayload': { kind: 'OBJECT'; name: 'WebhookSubscriptionUpdatePayload'; fields: { 'userErrors': { name: 'userErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserError'; ofType: null; }; }; }; } }; 'webhookSubscription': { name: 'webhookSubscription'; type: { kind: 'OBJECT'; name: 'WebhookSubscription'; ofType: null; } }; }; };
    'Weight': { kind: 'OBJECT'; name: 'Weight'; fields: { 'unit': { name: 'unit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WeightUnit'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'WeightInput': { kind: 'INPUT_OBJECT'; name: 'WeightInput'; isOneOf: false; inputFields: [{ name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'unit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WeightUnit'; ofType: null; }; }; defaultValue: null }]; };
    'WeightUnit': { name: 'WeightUnit'; enumValues: 'KILOGRAMS' | 'GRAMS' | 'POUNDS' | 'OUNCES'; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'QueryRoot';
  mutation: 'Mutation';
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection;
  }
}
