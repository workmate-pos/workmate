fragment InventoryItemFragment on InventoryItem {
  id
  variant {
    title
    image {
      url
    }
    product {
      title
      hasOnlyDefaultVariant
      featuredImage {
        url
      }
    }
  }
  unitCost {
    amount
  }
}

fragment InventoryItemInventoryLevelFragment on InventoryItem {
  inventoryLevel(locationId: $locationId) {
    ...InventoryLevelFragment
  }
}

fragment InventoryLevelFragment on InventoryLevel {
  id
  location {
    id
  }
  quantities(names: ["incoming", "on_hand", "available", "committed"]) {
    name
    quantity
  }
}

query getMany($ids: [ID!]!) {
  nodes(ids: $ids) {
    __typename
    ...InventoryItemFragment
  }
}

query getManyWithLocationInventoryLevel($ids: [ID!]!, $locationId: ID!) {
  nodes(ids: $ids) {
    __typename
    ...InventoryItemFragment
    ...InventoryItemInventoryLevelFragment
  }
}

query get($id: ID!) {
  inventoryItem(id: $id) {
    ...InventoryItemFragment
  }
}

query getWithLocationInventoryLevel($id: ID!, $locationId: ID!) {
  inventoryItem(id: $id) {
    ...InventoryItemFragment
    ...InventoryItemInventoryLevelFragment
  }
}

query getPage($first: Int = 10, $after: String, $query: String) {
  inventoryItems(first: $first, after: $after, query: $query) {
    nodes {
      ...InventoryItemFragment
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}

query getPageWithLocationInventoryLevel($first: Int = 10, $after: String, $query: String, $locationId: ID!) {
  inventoryItems(first: $first, after: $after, query: $query) {
    nodes {
      ...InventoryItemFragment
      ...InventoryItemInventoryLevelFragment
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}

mutation updateInventoryItem($id: ID!, $input: InventoryItemUpdateInput!) {
  inventoryItemUpdate(id: $id, input: $input) {
    userErrors {
      field
      message
    }
  }
}


