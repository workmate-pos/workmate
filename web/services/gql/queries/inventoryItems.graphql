fragment InventoryItemFragment on InventoryItem {
  id
  variant {
    title
    image {
      url
    }
    product {
      title
      hasOnlyDefaultVariant
      featuredImage {
        url
      }
    }
  }
  unitCost {
    amount
  }
}

fragment InventoryItemInventoryLevelFragment on InventoryItem {
  inventoryLevel(locationId: $locationId) {
    ...InventoryLevelFragment
  }
}

fragment InventoryLevelFragment on InventoryLevel {
  id
  location {
    id
  }
  quantities(names: ["incoming", "on_hand", "available", "committed"]) {
    name
    quantity
  }
}

query getMany($ids: [ID!]!) {
  nodes(ids: $ids) {
    __typename
    ...InventoryItemFragment
  }
}

query getManyWithLocationInventoryLevel($ids: [ID!]!, $locationId: ID!) {
  nodes(ids: $ids) {
    __typename
    ...InventoryItemFragment
    ...InventoryItemInventoryLevelFragment
  }
}

query get($id: ID!) {
  inventoryItem(id: $id) {
    ...InventoryItemFragment
  }
}

query getWithLocationInventoryLevel($id: ID!, $locationId: ID!) {
  inventoryItem(id: $id) {
    ...InventoryItemFragment
    ...InventoryItemInventoryLevelFragment
  }
}

query getPage($first: Int = 10, $after: String, $query: String) {
  inventoryItems(first: $first, after: $after, query: $query) {
    nodes {
      ...InventoryItemFragment
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}

query getPageWithLocationInventoryLevel($first: Int = 10, $after: String, $query: String, $locationId: ID!) {
  inventoryItems(first: $first, after: $after, query: $query) {
    nodes {
      ...InventoryItemFragment
      ...InventoryItemInventoryLevelFragment
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}

mutation updateInventoryItem($id: ID!, $input: InventoryItemInput!) {
  inventoryItemUpdate(id: $id, input: $input) {
    userErrors {
      field
      message
    }
    inventoryItem {
      id
      variant {
        ...ProductVariantFragment
      }
    }
  }
}

fragment ProductVariantFragment on ProductVariant {
  id
  title
  sku
  price
  barcode
  image {
    url
  }
  inventoryItem {
    id
    unitCost {
      currencyCode
      amount
    }
  }
  product {
    ...ProductFragment
  }
  requiresComponents
  defaultCharges: metafield(namespace: "$app", key: "default-charges") {
    id
    references(first: 10) {
      nodes {
        __typename
        ...FixedPriceLabourChargeFragment
        ...HourlyLabourChargeFragment
      }
      pageInfo {
        hasNextPage
        endCursor
      }
    }
  }
}

fragment ProductFragment on Product {
  id
  title
  handle
  hasOnlyDefaultVariant
  descriptionHtml
  vendor
  featuredImage {
    url
  }
  tags
  description
  productType
  serviceType: metafield(namespace: "$app", key: "service-type") {
    id
    value
  }
}



fragment FixedPriceLabourChargeFragment on Metaobject {
  id
  type
  name: field(key: "name") {
    value
  }
  amount: field(key: "amount") {
    value
  }
  customizeAmount: field(key: "customize-amount") {
    value
  }
  removable: field(key: "removable") {
    value
  }
}

fragment HourlyLabourChargeFragment on Metaobject {
  id
  type
  name: field(key: "name") {
    value
  }
  rate: field(key: "rate") {
    value
  }
  hours: field(key: "hours") {
    value
  }
  customizeRate: field(key: "customize-rate") {
    value
  }
  customizeHours: field(key: "customize-hours") {
    value
  }
  removable: field(key: "removable") {
    value
  }
}
